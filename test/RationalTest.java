import org.junit.jupiter.api.Test;

import java.math.BigInteger;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

/**
 * JUnit tests for Rational class.
 *
 * @author Haohu Shen
 */
class RationalTest {

    @Test
    public void usage() {

        Rational a = new Rational(1, 2);
        Rational b = new Rational(3, 4);
        Rational c = Rational.ZERO;

        System.out.println(a.add(a)); // 1/2 + 1/2 = 1/1
        System.out.println(a.add(b)); // 1/2 + 3/4 = 5/4
        System.out.println(b.add(c)); // 3/4 + 0/1 = 3/4
        System.out.println(c.add(a)); // 0/1 + 1/2 = 1/2

        System.out.println(a.subtract(a)); // 1/2 - 1/2 = 0/1
        System.out.println(a.subtract(b)); // 1/2 - 3/4 = -1/4
        System.out.println(b.subtract(c)); // 3/4 - 0/1 = 3/4
        System.out.println(c.subtract(a)); // 0/1 - 1/2 = -1/2

        System.out.println(a.multiply(a)); // (1/2) * (1/2) = 1/4
        System.out.println(a.multiply(b)); // (1/2) * (3/4) = 3/8
        System.out.println(b.multiply(c)); // (3/4) * (0/1) = 0/1
        System.out.println(c.multiply(a)); // (0/1) * (1/2) = 0/1

        System.out.println(a.divide(a)); // (1/2) / (1/2) = 1/1
        System.out.println(a.divide(b)); // (1/2) / (3/4) = 2/3
        //System.out.println(b.divide(c)); // => ArithmeticException - divide by zero
        System.out.println(c.divide(a)); // (0/1) / (1/2) = 0/1

        System.out.println(a.negate()); // -1/2
        System.out.println(a.max(b));   // 3/4
        System.out.println(a.min(c));   // 0
        System.out.println(b.doubleValue());  // 0.75
        System.out.println(Rational.MINUS_ONE.abs());    // 1
    }

    @Test
    public void testConstructor() {
        assertEquals("11/10", new Rational(11, 10).toString(), "constructor(11,10)");
        assertEquals("14/33", new Rational(2 * 5 * 7, 3 * 5 * 11).toString(), "constructor(2*5*7, 3*5*11)");
        assertEquals("-100/7", new Rational(100, -7).toString(), "constructor(100,-7)");
        assertEquals("0", new Rational(0, 19).toString(), "constructor(0,19)");

        assertThrows(NullPointerException.class, () -> new Rational(null, new BigInteger("10")));
        assertThrows(NullPointerException.class, () -> new Rational(new BigInteger("10"), null));
        assertThrows(NullPointerException.class, () -> new Rational(null, null));
    }

    @Test
    public void testAdd() {

        assertThrows(NullPointerException.class, () -> {
            Rational rational = new Rational(1, 2).add(null);
        });

        assertEquals("2", new Rational(5, 1).add(new Rational(-3, 1)).toString(), "5/1 + -3");
        assertEquals("67/51", new Rational(11, 17).add(new Rational(2, 3)).toString(), "11/17 + 2/3");
        assertEquals("7/30", new Rational(1, 6).add(new Rational(1, 15)).toString(), "1/6 + 1/15");
        assertEquals("1/3", new Rational(1, 6).add(new Rational(1, 6)).toString(), "1/6 + 1/6");
        assertEquals("0", new Rational(1, -6).add(new Rational(1, 6)).toString(), "-1/6 + 1/6");
        assertEquals("-1/3", new Rational(-1, 6).add(new Rational(1, -6)).toString(), "-1/6 + -1/6");
        assertEquals("-1/10", new Rational(new BigInteger("-1"), new BigInteger("6")).add(new Rational(1, 15)).toString(), "-1/6 + 1/15");
        assertEquals("1/7", new Rational(1, 7).add(Rational.ZERO).toString(), "1/7 + 0");
        assertEquals("-1/7", new Rational(-1, 7).add(Rational.ZERO).toString(), "-1/7 + 0");

        assertEquals("-41997578831343539/40483042643152342", new Rational(1716647823L, -2632306207L).add(new Rational(876917564L, -2276137288L)).toString());
        assertEquals("-1241402336729041049/1086306600996566474", new Rational(221647089L, -1345266986L).add(new Rational(1579495736L, -1615005218L)).toString());
        assertEquals("-101595872880436445/54266947702413888", new Rational(1034533517L, -2994079296L).add(new Rational(1079117421L, -706865367L)).toString());
        assertEquals("-1195593680583203431/1558788594578465961", new Rational(548341328L, -1191061878L).add(new Rational(802575005L, -2617477099L)).toString());
        assertEquals("-40319629236450520/17372085902622951", new Rational(2001056232L, -2752438792L).add(new Rational(1851065323L, -1161320577L)).toString());
        assertEquals("-3698500218509502769/10290120576998199288", new Rational(122347497L, -2598203192L).add(new Rational(1236987908L, -3960475689L)).toString());
        assertEquals("-302446396153189796/378258410204528295", new Rational(780910623L, -2583758385L).add(new Rational(1965857321L, -3952760109L)).toString());
        assertEquals("-51754696397985341/8900628170632789", new Rational(1418330502L, -281583317L).add(new Rational(73751313L, -94827651L)).toString());
        assertEquals("-1567121244639029281/805781252633173125", new Rational(1202460493L, -1701113125L).add(new Rational(1759214892L, -1421036451L)).toString());
        assertEquals("-2129263904496280013/1454716977528491829", new Rational(508126405L, -3339747909L).add(new Rational(1713844136L, -1306730643L)).toString());
        assertEquals("-2457194427774873947/1284891396848660224", new Rational(615702094L, -2640745984L).add(new Rational(1634095889L, -973127597L)).toString());
        assertEquals("-14145742261724103517/14116649524537287380", new Rational(2084147781L, -3976218733L).add(new Rational(1696701229L, -3550269860L)).toString());
        assertEquals("-1692497619781346321/5643363984060303776", new Rational(31463334L, -2425759501L).add(new Rational(667543637L, -2326431776L)).toString());
        assertEquals("-492197379657417791/521549181257350616", new Rational(1029485070L, -1191107887L).add(new Rational(34772513L, -437868968L)).toString());
        assertEquals("-1146556665113655260/1738535946879188093", new Rational(597602811L, -3652293041L).add(new Rational(1888327016L, -3808097384L)).toString());
        assertEquals("-265481129383390564/299332432124240475", new Rational(1198282804L, -1533227529L).add(new Rational(102855080L, -976151375L)).toString());
        assertEquals("-6071102991542857349/7664161139102134938", new Rational(1168596917L, -2208552799L).add(new Rational(912731705L, -3470218662L)).toString());
        assertEquals("-76331505814852706/74269956092134775", new Rational(752927669L, -1778869729L).add(new Rational(1968597042L, -3256594050L)).toString());
        assertEquals("-7377340883091381797/8054690541933896108", new Rational(1710825071L, -2616961076L).add(new Rational(806900679L, -3077879383L)).toString());
        assertEquals("-1913063070538478096/1133381493581736193", new Rational(1071569483L, -762079289L).add(new Rational(419117525L, -1487222537L)).toString());
        assertEquals("-119097192953845124/43836736450912057", new Rational(592987658L, -428912843L).add(new Rational(1090968592L, -817634392L)).toString());
        assertEquals("-7824209479296843370/4974913913755888609", new Rational(68273480L, -3981575117L).add(new Rational(1943678730L, -1249483877L)).toString());
        assertEquals("-4534755430054221112/5056703030766619139", new Rational(1591800738L, -2504014427L).add(new Rational(527238098L, -2019438457L)).toString());
        assertEquals("-730740050248370984/363431253008811279", new Rational(137276095L, -3716546559L).add(new Rational(2123067181L, -1075660891L)).toString());
        assertEquals("-5068108838349279337/2421015081960447294", new Rational(1772769011L, -1653188934L).add(new Rational(1495276479L, -1464451541L)).toString());
        assertEquals("-1612702738625405359/125063248106939988", new Rational(2017929421L, -171482972L).add(new Rational(822346250L, -729304179L)).toString());
        assertEquals("-569666332407674365/14147052524458697168", new Rational(40830455L, -4273823749L).add(new Rational(101667945L, -3310162832L)).toString());
        assertEquals("-1098884594149871837/1162791692866500937", new Rational(17312535L, -1249091101L).add(new Rational(866844842L, -930910237L)).toString());
        assertEquals("-2034527523602166053/462773097206811882", new Rational(1530201580L, -2973069098L).add(new Rational(1208410517L, -311310018L)).toString());
        assertEquals("-420397805020128857/390053696858863933", new Rational(815158644L, -981112263L).add(new Rational(883578579L, -3578064819L)).toString());
        assertEquals("-188843020896861557/307668763922352305", new Rational(1141125348L, -3474457619L).add(new Rational(859131142L, -3010754230L)).toString());
        assertEquals("-4943786978866987/492660301590898", new Rational(1134150357L, -359293186L).add(new Rational(1292105687L, -187853441L)).toString());
        assertEquals("-5442445645290170884/12714844013472819415", new Rational(1317687561L, -3923037985L).add(new Rational(298678453L, -3241070839L)).toString());
        assertEquals("-257352090905869484/158025771938911365", new Rational(1132058876L, -791765181L).add(new Rational(714035232L, -3592559970L)).toString());
        assertEquals("-52046052136508195/2696766533371291", new Rational(987792819L, -1696072989L).add(new Rational(1160647434L, -62010241L)).toString());
        assertEquals("-3477349579712336423/5212238101538719031", new Rational(737745873L, -2301439097L).add(new Rational(784953352L, -2264773423L)).toString());
        assertEquals("-3070774073583022169/1003539171817106432", new Rational(1125160277L, -769719296L).add(new Rational(2083643460L, -1303772917L)).toString());
        assertEquals("-163201098782207991/83630556019502657", new Rational(1535201324L, -3348727052L).add(new Rational(1938881282L, -1298639407L)).toString());
        assertEquals("-5840678541285106783/4663995341404756430", new Rational(1045632761L, -1540304198L).add(new Rational(1736367151L, -3027970285L)).toString());
        assertEquals("-3899643459272478702/12910827447627257293", new Rational(370386088L, -3213583843L).add(new Rational(750435698L, -4017579151L)).toString());
        assertEquals("-769241819959252859/154057411243364293", new Rational(897832055L, -1991446595L).add(new Rational(1756978918L, -386797747L)).toString());
        assertEquals("-63464108908760457/53023210362106600", new Rational(302699304L, -713508950L).add(new Rational(114839547L, -148626616L)).toString());
        assertEquals("-722742601000499/74382502262250", new Rational(1474479337L, -351482586L).add(new Rational(335358283L, -60736375L)).toString());
        assertEquals("-595454388375140650/1150982613827040027", new Rational(776624108L, -3270578993L).add(new Rational(196995532L, -703840278L)).toString());
        assertEquals("-7542250827633303077/14448732380195734985", new Rational(267546223L, -3368261065L).add(new Rational(1898476806L, -4289671169L)).toString());
        assertEquals("-1337506674836802157/115360604688720675", new Rational(486320896L, -2951530454L).add(new Rational(1786867982L, -156340050L)).toString());
        assertEquals("-3060113373537196643/13143534574502520927", new Rational(591736076L, -3522304521L).add(new Rational(241898711L, -3731515687L)).toString());
        assertEquals("-271800303908221/4307856168391470", new Rational(142887155L, -2616260571L).add(new Rational(14059107L, -1658095990L)).toString());
        assertEquals("-4627497966011434941/2989393813768801738", new Rational(932213958L, -1350910843L).add(new Rational(1898442891L, -2212872766L)).toString());
        assertEquals("-6768570760273851469/6496691503845385590", new Rational(1703170139L, -3322734798L).add(new Rational(2069675426L, -3910448410L)).toString());
        assertEquals("-1936476074697693124/532946710453410871", new Rational(133299571L, -1108687861L).add(new Rational(1688842263L, -480700411L)).toString());
        assertEquals("-280524496799525147/1550273267242515810", new Rational(218962080L, -2708209734L).add(new Rational(343805723L, -3434608290L)).toString());
        assertEquals("-60954494483192228/94689499706926509", new Rational(396280028L, -694759146L).add(new Rational(239912104L, -3270986796L)).toString());
        assertEquals("-4792369956842904889/2756979248087812011", new Rational(1113505810L, -1016855961L).add(new Rational(1743950139L, -2711278051L)).toString());
        assertEquals("-2999433247231645117/3272037063218387412", new Rational(1517976451L, -2166966204L).add(new Rational(652844682L, -3019924406L)).toString());
        assertEquals("-2492705606792933161/3613263476762262894", new Rational(453739232L, -2190712386L).add(new Rational(1592475881L, -3298710958L)).toString());
        assertEquals("-5413796513244753539/5854910429502267750", new Rational(1759019574L, -3175742074L).add(new Rational(1367117197L, -3687270750L)).toString());
        assertEquals("-6132916004856674932/2257469712758440563", new Rational(1196215859L, -3160075467L).add(new Rational(1670331243L, -714372089L)).toString());
        assertEquals("-2838150753600110216/2100772344691778865", new Rational(2122605380L, -2883273324L).add(new Rational(1791860911L, -2914426915L)).toString());
        assertEquals("-5339379458256953903/429887358682885890", new Rational(1750285399L, -147822295L).add(new Rational(1686560411L, -2908136142L)).toString());
        assertEquals("-1802983018918393257/2720175686107616540", new Rational(1647414063L, -2975849260L).add(new Rational(199679781L, -1828167658L)).toString());
        assertEquals("-1980479705630246945/356293813951117827", new Rational(1450953566L, -3819822051L).add(new Rational(1449131939L, -279824931L)).toString());
        assertEquals("-1936663443959435535/1102507115907270404", new Rational(2059325202L, -3020226842L).add(new Rational(1569319182L, -1460164648L)).toString());
        assertEquals("-609976449095423881/550561309565132406", new Rational(1893512027L, -3199391387L).add(new Rational(888090650L, -1720831380L)).toString());
        assertEquals("-2172359445000253943/2903986677326063956", new Rational(417637934L, -4070352616L).add(new Rational(1841998956L, -2853793714L)).toString());
        assertEquals("-10789647063243014426/5788277198535012999", new Rational(1994634070L, -3562457897L).add(new Rational(2118977488L, -1624798767L)).toString());
        assertEquals("-2333801353552607174/1075108685768406315", new Rational(436376830L, -3987518163L).add(new Rational(1667312344L, -808855515L)).toString());
        assertEquals("-327087660584367199/190585853309550400", new Rational(1087732775L, -833530958L).add(new Rational(940323405L, -2286488000L)).toString());
        assertEquals("-5789767609586331579/6700093323380435531", new Rational(323077927L, -2607328561L).add(new Rational(1902157342L, -2569715771L)).toString());
        assertEquals("-46514579399472235/11126747570302686", new Rational(1897459623L, -465942369L).add(new Rational(286602487L, -2650690434L)).toString());
        assertEquals("-3791737160223392271/1527655740940694974", new Rational(869311573L, -3533064031L).add(new Rational(966825659L, -432388354L)).toString());
        assertEquals("-16539975587382462/16753736859718171", new Rational(138767680L, -567573185L).add(new Rational(109622902L, -147590983L)).toString());
        assertEquals("-4531164442902251491/6005826790063269680", new Rational(963339668L, -3238362365L).add(new Rational(1695033662L, -3709175264L)).toString());
        assertEquals("-331979479442612855/768487736993842294", new Rational(456937615L, -3300638638L).add(new Rational(1161908990L, -3958110221L)).toString());
        assertEquals("-3165675833720256499/2652701042177729730", new Rational(1651488229L, -3281919630L).add(new Rational(1673546864L, -2424831813L)).toString());
        assertEquals("-1469302877654292359/1700669132680423403", new Rational(1977034322L, -2947030937L).add(new Rational(557167965L, -2885394095L)).toString());
        assertEquals("-4050470984825009593/14051013043555889611", new Rational(640252121L, -3513926423L).add(new Rational(424117452L, -3998664557L)).toString());
        assertEquals("-1607526111016495689/2379232919697920120", new Rational(535559395L, -851606696L).add(new Rational(130660534L, -2793816595L)).toString());
        assertEquals("-5494014918946688565/1606454577324683582", new Rational(1564957731L, -547439506L).add(new Rational(1647059568L, -2934487847L)).toString());
        assertEquals("-463863627210820811/249662847757415760", new Rational(960710373L, -3050811743L).add(new Rational(883931299L, -572844240L)).toString());
        assertEquals("-677303579145906629/739543873664102817", new Rational(1914133973L, -3361629057L).add(new Rational(457282528L, -1319974086L)).toString());
        assertEquals("-10703641701086820/12980308543770973", new Rational(149904840L, -391541082L).add(new Rational(1230158720L, -2784754826L)).toString());
        assertEquals("-17268901192254379/8201102141378368", new Rational(2016243405L, -1523138447L).add(new Rational(1637776633L, -2094510016L)).toString());
        assertEquals("-2875427290070084135/1323122229183006483", new Rational(214430132L, -1460615407L).add(new Rational(1835652461L, -905866269L)).toString());
        assertEquals("-649985569002144529/510863163140103300", new Rational(1843112459L, -3648314925L).add(new Rational(2040968459L, -2660515964L)).toString());
        assertEquals("-90219446588722265/37876702507760028", new Rational(654146549L, -2096248308L).add(new Rational(1570802269L, -758889822L)).toString());
        assertEquals("-2021956792286635387/3401144052033374528", new Rational(227201935L, -2515768384L).add(new Rational(681619013L, -1351930517L)).toString());
        assertEquals("-550434755580680403/1277355308204011190", new Rational(685011109L, -2313188542L).add(new Rational(446572914L, -3313232670L)).toString());
        assertEquals("-553446897626840275/233875554824729396", new Rational(1581762934L, -840727528L).add(new Rational(1888837006L, -3894552823L)).toString());
        assertEquals("-968588600052864468/5739503003351682605", new Rational(251503272L, -3476044742L).add(new Rational(318359928L, -3302318255L)).toString());
        assertEquals("-129718929963168286/101820012768491451", new Rational(1344820506L, -2035544994L).add(new Rational(1288542091L, -2100882343L)).toString());
        assertEquals("-1215736321433070606/1741915248202018015", new Rational(696626298L, -1415869595L).add(new Rational(253336404L, -1230279437L)).toString());
        assertEquals("-765840724813201431/895611642619110568", new Rational(2032641031L, -2768657198L).add(new Rational(469472190L, -3881787792L)).toString());
        assertEquals("-3099092565196638071/197933898286815497", new Rational(1321994194L, -87418619L).add(new Rational(1210535171L, -2264207563L)).toString());
        assertEquals("-178939385392562333/217726377213666676", new Rational(201702815L, -1107276865L).add(new Rational(628921749L, -983161412L)).toString());
        assertEquals("-7319506401552933223/1887298692026019051", new Rational(851162813L, -4168813191L).add(new Rational(1663343730L, -452718461L)).toString());
        assertEquals("-2728471900904432311/3683937839824652872", new Rational(2048137734L, -3660167206L).add(new Rational(728964202L, -4025977648L)).toString());
        assertEquals("-412507071141004379/364031783506674059", new Rational(494271639L, -762539281L).add(new Rational(1620654626L, -3341758973L)).toString());
        assertEquals("-4139116269703114026/448392848803511639", new Rational(1716420209L, -194230147L).add(new Rational(909484319L, -2308564637L)).toString());
        assertEquals("-2556891773800849929/2021718868112250299", new Rational(875537292L, -2264675221L).add(new Rational(783901761L, -892719119L)).toString());

        assertEquals("-13776299849764540547846723306056920066674876475551737108822288959951432785859/3979576359017393522036518186487834294315689455635673240109041112212225789634", new Rational(new BigInteger("215499317010134308820458745024334605153"), new BigInteger("-289728213752786816008901215580581700362")).add(new Rational(new BigInteger("186662839483338265431387864021886059995"), new BigInteger("-68677749872385617320235569494025122785"))).toString());
        assertEquals("-10683832731701458683900318779538894806250160463863446856305639213371661921061/2045889191882935080420020007123498939782766601181541435762240014162822045874", new Rational(new BigInteger("93394373044575268600006848573030803138"), new BigInteger("-18120737133845737058463312049667525514")).add(new Rational(new BigInteger("15375670314321792761761677538356594079"), new BigInteger("-225806398136160045244786814766936521482"))).toString());
        assertEquals("-72756904004560991340279314411122389995970811626193179006639798407379653123961/83453525290506213275570792998711293121190680732749420738726858990447644875624", new Rational(new BigInteger("94107019629047084497385903507300953373"), new BigInteger("-262127495542855383160551034914763868104")).add(new Rational(new BigInteger("163264269697479861673098641327514945787"), new BigInteger("-318369979149563674186554755452218607381"))).toString());
        assertEquals("-18790068553381960565787348066788331922381175405949749366733189038248168895043/5072176778397471241934202376252318444251515107632702003468858899268719861794", new Rational(new BigInteger("334480202863957213933163862051776688074"), new BigInteger("-135164111601903277764693956117027377708")).add(new Rational(new BigInteger("276923087734517760038304346319089512402"), new BigInteger("-225156369613990732875424690708718755833"))).toString());
        assertEquals("-20106621623698926544925549232555470105293646143755391319681619668804563832299/6532772224600243738891898689261326688421889389482065444138395151370848216770", new Rational(new BigInteger("181412586954955379863777420736220622849"), new BigInteger("-77706525492905718450412750383641389070")).add(new Rational(new BigInteger("62482543114184752539392833828042678758"), new BigInteger("-84069802158335577431283156674495329111"))).toString());
        assertEquals("-22031199995053897853481780482722440826402330629331780337424309589474342638868/1480885294310140227212461721626415189732867034015533433825768273320719891233", new Rational(new BigInteger("143809083264884229389196337283228162674"), new BigInteger("-10293507971570536530133092437073404073")).add(new Rational(new BigInteger("130370495646824886032638956953886123618"), new BigInteger("-143865949139998917069456921829679380921"))).toString());
        assertEquals("-29005909541921620326781789758866718495103383060986460401117782249176673132094/11898262883278295661637345150131414461865221864636081246909406706987866365383", new Rational(new BigInteger("270925489945266502123414076471098077512"), new BigInteger("-320576327492669775371086168989022422178")).add(new Rational(new BigInteger("236454748476642721861603417078637630916"), new BigInteger("-148460904475865999260251670199693115694"))).toString());
        assertEquals("-20748097340630545223438884331601700775880404489489981707669596888796020733168/3570372067908424842080803101717155897659368462317866208838814279723120397391", new Rational(new BigInteger("152290566539616136104006677971032990679"), new BigInteger("-77727205190826092854669714798309719351")).add(new Rational(new BigInteger("176935260115680805987521140312064460679"), new BigInteger("-45934651312148620364541017756219504041"))).toString());
        assertEquals("-51315997486394944210921782425434821334504422668462469838194928820201135794711/27549326463752919083330463472871249247168097957605338584638187186354158037928", new Rational(new BigInteger("276842994392856577648586537335936762765"), new BigInteger("-179838045440958873676948404101115575768")).add(new Rational(new BigInteger("99050423286222564680393984799560999919"), new BigInteger("-306379291391903036515692718307326867742"))).toString());
        assertEquals("-19151757663893987813130912502305553912263641642582370797578930788313536750109/4485260105448795344651114278581615452833497973690052700107922750416505570312", new Rational(new BigInteger("157984677806640064107144828233610159134"), new BigInteger("-173727272683830039496403790117475628214")).add(new Rational(new BigInteger("173524131995884894268477520784684150191"), new BigInteger("-51635647485373418112252064851333937816"))).toString());
        assertEquals("-47313934109552592533206445567295580133753662568594373941259867652463224012259/43879531286379867332617578930458133160363816950739563463431884633540423742581", new Rational(new BigInteger("91151204936050432997050928414552438252"), new BigInteger("-188973659727577431751451729938218639923")).add(new Rational(new BigInteger("138372183300143149492195864347466282005"), new BigInteger("-232199192996717996751630988712548939447"))).toString());
        assertEquals("-4061315264513040866932065942027657351016222881042936503790672257340126068547/3323112279704141053876050088392835783723362385112666132811104799332658404017", new Rational(new BigInteger("61837462602274931624334727402728675204"), new BigInteger("-70113480482068162908035125400622003198")).add(new Rational(new BigInteger("96739292745264750255150387697485160657"), new BigInteger("-284377177414894579956460483661277946349"))).toString());
        assertEquals("-2182689583270420203262598645782824098091827120416644755980149499465852937113/1405469765168955101663658575662738949852550824187279964000388596387425411480", new Rational(new BigInteger("136881004826731963044561597486349373838"), new BigInteger("-120285501348635583930190306152046564812")).add(new Rational(new BigInteger("116385200843340549822710908498391885786"), new BigInteger("-280426767863636137460433369107510438960"))).toString());
        assertEquals("-102094024917058176153933023724713767739649984673688657421741952229033623680483/2375082252187970602171415096905950961100553044166498229649064456328452828140", new Rational(new BigInteger("303902307848305610319906354272857822343"), new BigInteger("-7244479773388454424108172875889555340")).add(new Rational(new BigInteger("339639405092310299825665168298361029987"), new BigInteger("-327847178331906002454236557334647654921"))).toString());
        assertEquals("-63361686211919731395048781496306622201635077046304061274816359230200047455305/55444406850062899691587223676329805189484232451092901718005512843988991114732", new Rational(new BigInteger("236858836676044993473236621319594047102"), new BigInteger("-243680984014384176183954745621979877517")).add(new Rational(new BigInteger("38860288655229078915656350825617102789"), new BigInteger("-227528656264741968593563691948166154396"))).toString());
        assertEquals("-1773494676444814160710747518472308744993896504485661529354960828559258828693/402348769781952924773144873661239703675473290444817094712009008394787403967", new Rational(new BigInteger("58902976768974306915582974080142916691"), new BigInteger("-74856229604491058512696307807975882249")).add(new Rational(new BigInteger("330863529603443734668443351060707415120"), new BigInteger("-91374213240935565140016503014575512311"))).toString());
        assertEquals("-16540106316037564322451803554510946234000483035213007411797944948547244716142/18370132944024606869348396874399509629018895746550464284345717330771956875497", new Rational(new BigInteger("146819704184474998761012393285337042406"), new BigInteger("-164134904808747435003323279091724180629")).add(new Rational(new BigInteger("1314856386064433016555069883603652192"), new BigInteger("-223841881352778360587575421836786226186"))).toString());
        assertEquals("-5012009054739742833220185576578635918164717122466824663520074660564653321206/3170580714851303939178176423690487554470665231558438454717986053329942133311", new Rational(new BigInteger("73704071986847068807574258780659255978"), new BigInteger("-324663081013108209056847265107686732033")).add(new Rational(new BigInteger("224749795677354310960284754928219045920"), new BigInteger("-166017866842999528056222473638877749039"))).toString());
        assertEquals("-3660992627840686182956385961200043269494991954689896350267818442954940505069/649577394980690901248173802142537881085762570231501585294907059477308044962", new Rational(new BigInteger("260664381931017632968756833544827383263"), new BigInteger("-54336363297679087325551522164485541846")).add(new Rational(new BigInteger("270721826891453340689187492717671143296"), new BigInteger("-322778128679579742569703611427999827169"))).toString());
        assertEquals("-14464918446234491991690539841506436127928384947016662470529577500026257934766/14499966977828753236315249059642515126530297674381690650963572787244789801457", new Rational(new BigInteger("321357967202752308837083621154976675965"), new BigInteger("-327823261170663050601692701208160487179")).add(new Rational(new BigInteger("4592441794288663075596896728613096894"), new BigInteger("-265386298569218625752664356298829918898"))).toString());
        assertEquals("-8503124055015178200812051039407776753055741121761893014444824653255447406989/9317375943817005184554477414862468856764278801964135226582918967870792918418", new Rational(new BigInteger("97562520317023406913857182288503702511"), new BigInteger("-167506620354469611599348244018963154526")).add(new Rational(new BigInteger("73461301681078640874734626532200934264"), new BigInteger("-222495706118361496446645388061859065372"))).toString());
        assertEquals("-40077354802523694750521983299792156745783331693080206723013859235473268384447/21015818797450935644599943674314752827568155384237649112222407157589570076234", new Rational(new BigInteger("214027596957828337529161785968710542390"), new BigInteger("-317712006809007760442117779057513510988")).add(new Rational(new BigInteger("163166566860954365962903933323006890283"), new BigInteger("-132294772290960807568253323306412180711"))).toString());
        assertEquals("-13158644124546312920430005343462182340087133789429488193704434286817756178523/33840929293193799421348796896046158555698667615027234033555438447353428727782", new Rational(new BigInteger("80025369583332718089848108113486494456"), new BigInteger("-322928120585411507453572598857893318909")).add(new Rational(new BigInteger("44336172203772117646500583833358097845"), new BigInteger("-314381998370221084128160353054974535194"))).toString());
        assertEquals("-923389002247395282197422597322856545539569773764504898937781009934599776331/1544679357607748037544167313814124202250899716838869099141889211491047751752", new Rational(new BigInteger("5887484196622456050277427151929721085"), new BigInteger("-49709249532820754016600726628545983871")).add(new Rational(new BigInteger("14895409824985161960688196859590192141"), new BigInteger("-31074284406322943837692625573724304312"))).toString());
        assertEquals("-29500711286409640586703020979068005527750141129963782023945438413367242204052/7638168769644306527235570753950449107453338359718638546817191338344899731761", new Rational(new BigInteger("209996128212111983407246120025983647460"), new BigInteger("-55779340844408895362106412820212320902")).add(new Rational(new BigInteger("26705169030835071636106529194250404122"), new BigInteger("-273870886748204623854981566084185906811"))).toString());
        assertEquals("-22097425915852503066964859903846490468238143263165701843662972913635362438447/8522469487586979393939191687357957696602943841357708440564807021325254929650", new Rational(new BigInteger("208673277685243113005906706309231198740"), new BigInteger("-215413654526520095269760994351228730938")).add(new Rational(new BigInteger("128512074465245424810646469995868402663"), new BigInteger("-79126548466200016044885391730732749850"))).toString());
        assertEquals("-14813743467218025548302190868801411930882841826540885922414906205199354174899/9841543649338059739126600115934526780276006612089403483220965243088629407910", new Rational(new BigInteger("175349276881870024604374598293823991549"), new BigInteger("-245970363070302572110855971185283257786")).add(new Rational(new BigInteger("95106907192442568740849797218617773632"), new BigInteger("-120033286040950919236488856590757721805"))).toString());
        assertEquals("-101702353864811903229936986959689328490507902566319221982735233229837605060721/40637748176087009665028523393365759336570725939576349433395477553522510604357", new Rational(new BigInteger("57912032310238157085667320730997276059"), new BigInteger("-304275954723280667513277721379920970651")).add(new Rational(new BigInteger("308824532455279438227250690462482179908"), new BigInteger("-133555568704219225889027754049946939807"))).toString());
        assertEquals("-27667835465141271390607614193961692061027333872034783301403409127958251312056/15187239840846090969977337146043439205476357512496222841105221421476338337821", new Rational(new BigInteger("242444450275158316020639925932005686870"), new BigInteger("-172416830806286920113240659015120690967")).add(new Rational(new BigInteger("109831250391645072450911422884991711614"), new BigInteger("-264253317437017485264824028166567172289"))).toString());
        assertEquals("-22445255808532482295894536756947636792879800350926190420800582291280190575613/474846103344880134270690647128039805831244674506981731823723246465474535467", new Rational(new BigInteger("122321056109507040468520856258939750340"), new BigInteger("-188574695817334579767211084720571620138")).add(new Rational(new BigInteger("234784858603433477748313524287853226787"), new BigInteger("-5036159292600383786823102447086372543"))).toString());
        assertEquals("-20068586973574487246101189061851475956593764878206360233845989222700423168725/35067355444816402597494273104542075013298875649050384806743355295090438802958", new Rational(new BigInteger("91796798371240261076705519021399918135"), new BigInteger("-211765082492163347803759690399404326747")).add(new Rational(new BigInteger("45970237790190828703934164743562207610"), new BigInteger("-331191101310237180704456615456465931028"))).toString());
        assertEquals("-2349574307437196865478156579727362119766051580725099898125310905842229451759/996977218774037732069041818129021311458853165653143671246062234333127117083", new Rational(new BigInteger("99396385406019205749974203512288914852"), new BigInteger("-74226792962553388418932135162287936286")).add(new Rational(new BigInteger("164015981391852991899583447488045718626"), new BigInteger("-161178007937430666625617804357344295486"))).toString());
        assertEquals("-44892732276669877628388133931558356428085370927805525706630807299911419521101/9003299268274978649613320652126983571032717512606218223196383477784612495340", new Rational(new BigInteger("70577106089138714735371101974044559386"), new BigInteger("-252210539010142469968622033752649012607")).add(new Rational(new BigInteger("168007659021926739626180887252339956283"), new BigInteger("-35697553732728501416532203059537497620"))).toString());
        assertEquals("-299109380592191598307469559965610445992240037127056693211828148605574068577/225807531554700045956155936733604234187844248302456864993154951912246965218", new Rational(new BigInteger("116961595699633258120091732617153191625"), new BigInteger("-308790883044645186358663928274302100820")).add(new Rational(new BigInteger("193665998157455781101754166451667678283"), new BigInteger("-204753806886762071280512138592581206172"))).toString());
        assertEquals("-88003096725202983346901838576407690717231617201692508032727501803396321482349/19090501504728924807213903956454238580331172969047099368796655269974331741940", new Rational(new BigInteger("186376474502638255992745806953461109675"), new BigInteger("-279403628316967008917028753789792660361")).add(new Rational(new BigInteger("269390768936464616485751707438924393609"), new BigInteger("-68325889752125451645488412830361427540"))).toString());
        assertEquals("-31750261869165317050358470526156370974906706694068927175527421434135198140525/10142141522964018886084278918080272737839125820026395636799029298971097649911", new Rational(new BigInteger("20072782523787237220356699448191000468"), new BigInteger("-175317704795170072467344000932610608007")).add(new Rational(new BigInteger("174477814591314635685064821308136441823"), new BigInteger("-57850070161558666108681981784797952273"))).toString());
        assertEquals("-47471613146458684881385366257443264317320922987395484541456345869839926535316/83028975005995372930797699145673383261396614686653408015574524776694768306359", new Rational(new BigInteger("141099662674256340676508375094625460915"), new BigInteger("-254839041930526445132179665888961555743")).add(new Rational(new BigInteger("5886091136989458688939038369315845047"), new BigInteger("-325809477139026898073458222950647191913"))).toString());
        assertEquals("-2189733924715230414893724682314970987053211494177851995528722393628760945441/897116296923358531560794202698361840869261625016255918618608525600832761148", new Rational(new BigInteger("256894469877019145381683720014461778451"), new BigInteger("-111359523002727449260881157751801491588")).add(new Rational(new BigInteger("42090094969580910302946784808632878735"), new BigInteger("-314185393728330337864027881917263572969"))).toString());
        assertEquals("-5766767936951170159014164117668563393380106166015017930629252695047779961433/8797515635727075892419704943642043093031403231246355681979142599728701083406", new Rational(new BigInteger("115206223755277613358089298438168585235"), new BigInteger("-202607891301276050969707189385854231293")).add(new Rational(new BigInteger("22635463542084463521476082022934415346"), new BigInteger("-260528321356800024784694547244955092452"))).toString());
        assertEquals("-64379978665572482025690172842202284870042747037480824714637821941710328050189/92569177686276230171912721053449558354895497246136590097117253682200999361964", new Rational(new BigInteger("100282025341884056847108839288719818725"), new BigInteger("-295893604799569828699442001635101569596")).add(new Rational(new BigInteger("111550678018967856788464738769193893059"), new BigInteger("-312846158838005435698874692225952331109"))).toString());
        assertEquals("-17593841469680598710506604430372902093587570863359956537914212605197289342687/4678590053289989966381502438866723563762809821342316222399791255941173091626", new Rational(new BigInteger("273253358888450993063651591427814867132"), new BigInteger("-178456231992661905687438139163702507901")).add(new Rational(new BigInteger("175336329031194225486211697429430623065"), new BigInteger("-78651050754266282655577996179146718678"))).toString());
        assertEquals("-20944685142239233123149329224041439086038332646736284726029156708896666590579/66289613791189307864908670958714962588473156300304707322841770734232662151694", new Rational(new BigInteger("3700049999538495612870462083992622769"), new BigInteger("-211226614944519110362227006720412975978")).add(new Rational(new BigInteger("93660034548571977829608402334738135964"), new BigInteger("-313831729058390541313312777026923758923"))).toString());
        assertEquals("-2252094260707257605293178957291064991998993945409533584762962348806568480201/927093357223591906418325470836362328229809602072573580313773780917645465440", new Rational(new BigInteger("185698001168519864276980852267636265493"), new BigInteger("-80862649305091613010288163772555558952")).add(new Rational(new BigInteger("36524036304479117576811336636904593067"), new BigInteger("-275160915015496442054169920163254757280"))).toString());
        assertEquals("-9370894295884396402527714771743726913955290130429961831455610955533025880333/7658220005727821855343811264528669708850655290724406552693794673752076589250", new Rational(new BigInteger("219662740353313597095252761676335879838"), new BigInteger("-261213813999544408702493662916763109875")).add(new Rational(new BigInteger("33660485380678975917197995225926997225"), new BigInteger("-87953464885373697729549399917015640098"))).toString());
        assertEquals("-7156350320417016554384548014465240413661650596467774483880701202457566567147/3283757522763958265305654829688021377125743115113047168136841958470325431489", new Rational(new BigInteger("255576929881919723742432799072389438464"), new BigInteger("-222507811755021947868194831837167970031")).add(new Rational(new BigInteger("136898770440730263252500338556349091309"), new BigInteger("-132821483757226342955780814966808355271"))).toString());
        assertEquals("-31090448090030737849846259037395814034976540706541615292216480602979679445073/14399988667983917284744275355196817167321979153395950927516031918268664158585", new Rational(new BigInteger("50962087215661874437736910737127395231"), new BigInteger("-185808420512003354714542622270380371683")).add(new Rational(new BigInteger("292138873095156627506210287403956078232"), new BigInteger("-154998235583770735339996651109563797990"))).toString());
        assertEquals("-32597546016627604295713977833346592967847063672094671125204070226925937266741/2573145711466411842871464229488130754717868830716187127535882562802745105670", new Rational(new BigInteger("336556063971047063237724413427969357168"), new BigInteger("-29060214947873817026362595802320691877")).add(new Rational(new BigInteger("96251364609854648070144480723138031793"), new BigInteger("-88545308975929490542586256085294749710"))).toString());
        assertEquals("-6291039684017900823945945308491216818059085757094203630504074870378963233429/380281926347188633770740982561163679162500975089445698393846583822391881820", new Rational(new BigInteger("183503847629294667842408041155711427034"), new BigInteger("-172178899985071375833659629117940586820")).add(new Rational(new BigInteger("136735569304103879720681133884277865519"), new BigInteger("-8834576742682422822675492432215599004"))).toString());
        assertEquals("-19530653845957244877074656222931464542801197949384425462211114710842991289931/13022692073651621726946833493471783347074754422896300975508607961417358985558", new Rational(new BigInteger("112289147561233483664580293946702621255"), new BigInteger("-159157499263789537721579743281769864153")).add(new Rational(new BigInteger("259940138592644917096061664494579583268"), new BigInteger("-327290693404717462882359230204078731544"))).toString());
        assertEquals("-31127973487782673147207492653667535237773199349679839588958405854677738550557/57881939554142921012952371011955682274593971834425925926098622096740384385094", new Rational(new BigInteger("88382106142612672859175727886123142237"), new BigInteger("-175060454105419171906642388931821338697")).add(new Rational(new BigInteger("10883889548690372490239598508350361639"), new BigInteger("-330639720146545235828416096690300654102"))).toString());
        assertEquals("-81738390555772970889614281740737322741066453794501957160940644505177343380649/83331104059241556286954318727221039249707789251302218109565813857115241782487", new Rational(new BigInteger("182993569623448037786661665307984576574"), new BigInteger("-271078812135907596469994652292611947053")).add(new Rational(new BigInteger("94013876824631082411640629416072641451"), new BigInteger("-307405449369694081886933175408697420179"))).toString());
        assertEquals("-28602473130090592003181602538633986540435627175317119830255963465603895832555/18232736515797154731449272480136314968728553801665713386385292097009265336506", new Rational(new BigInteger("70035858954965202209546583801945240067"), new BigInteger("-54791531381163435790734824444332346422")).add(new Rational(new BigInteger("96674590987236851538286202242100670337"), new BigInteger("-332765594539767056403754682122787400423"))).toString());
        assertEquals("-1559537192689085345353652521066334983694789975514983181259830513607247842291/1943138262330715187699378410117956609743301981122576847116245328348009480178", new Rational(new BigInteger("12763540080861732022032406690219845325"), new BigInteger("-109950605009636464183773948001797900990")).add(new Rational(new BigInteger("60662209579791336150439873115971287412"), new BigInteger("-88364145979933971355878265924068051011"))).toString());
        assertEquals("-91149150495400362972941040554871315533807264426814765482332781127882577145265/60787844947955663446350636898736658748739689593601470163519057481708710658744", new Rational(new BigInteger("287503084174959125398106124476817341965"), new BigInteger("-265183250803996164156477608392740414707")).add(new Rational(new BigInteger("95198092123959046447211344166267106355"), new BigInteger("-229229579031314991402998687267532505192"))).toString());
        assertEquals("-14835522630552961865424168790262887898173589952191964310891817358568603970611/20377562969994624234182264451762255864267914798249537318440276178011088145228", new Rational(new BigInteger("85028763088390769200990301503187000394"), new BigInteger("-250548406180673491728612182011660789042")).add(new Rational(new BigInteger("63221131334334717291420962022973848815"), new BigInteger("-162663680688514271772867046292409581868"))).toString());
        assertEquals("-1997091424267795433938383863247236001628364207434112578787835144819666677072/10698411408094299662949795691540304736547702121640113674574330507336885793", new Rational(new BigInteger("315722795333586596793819077170962563284"), new BigInteger("-104080429006582221170515478484730754772")).add(new Rational(new BigInteger("226513861837889867985059896425093065721"), new BigInteger("-1233478168013821021476845827195154103"))).toString());
        assertEquals("-28133946688850364434452529313079975500364766420672944962941883158245378912915/6524303474096561770931718174884571362419795901442310109315244559737742979136", new Rational(new BigInteger("314792960146985354337053672204782106563"), new BigInteger("-117303269650633526610024731129045111518")).add(new Rational(new BigInteger("181161913044971139233817289909490105021"), new BigInteger("-111238220273450418432291439426184147904"))).toString());
        assertEquals("-8794999029066045146092645762701624905072806647059114280702501052882876217156/2543198502577886352624162150864017821669827903671587348504084365271655795141", new Rational(new BigInteger("263568662168213458485316084697986554996"), new BigInteger("-155458150903541721262390537386169648606")).add(new Rational(new BigInteger("57677000350928992690328601601018999450"), new BigInteger("-32718754054342042211536008246189854347"))).toString());
        assertEquals("-89164969078046283888109525101925189877178824145479431251799144091868702174965/37272136202633521733939656077095932682506158210825645152425044914033139006644", new Rational(new BigInteger("175936281559050619086237160747796174149"), new BigInteger("-114992408945566434133051645942792423687")).add(new Rational(new BigInteger("279490472346450380243249005209010667871"), new BigInteger("-324126927545947021544383508849415255212"))).toString());
        assertEquals("-17692992233270660709326798916374875076917633713385831547219046655781652010721/23594559737452290411559410721010647125440156581725710465006374888737288273456", new Rational(new BigInteger("99290411459841982293209430829107246185"), new BigInteger("-232657760543469279407387692293942367857")).add(new Rational(new BigInteger("65535208340675885590756742363470794626"), new BigInteger("-202826328959217616376978154411779371616"))).toString());
        assertEquals("-12264177935994444959221967662781902060107021553148689154875262219760555722789/1777860205971925763990048206224316228827380706770732260045671408005678167492", new Rational(new BigInteger("202102049866891535488713084326846375460"), new BigInteger("-42014195072356079207506175297255341117")).add(new Rational(new BigInteger("88353176474215798045809276154538060537"), new BigInteger("-42315703131051955095613182127683097876"))).toString());
        assertEquals("-13812519084937659726913972622000030878690345374013004470567378413489264864274/2237891538096978050979433999612394806260410698268282850962902877990100874377", new Rational(new BigInteger("165357925114473210396497196764059547361"), new BigInteger("-283876921299105234719231702578754799891")).add(new Rational(new BigInteger("132194088352477664960019092012023942831"), new BigInteger("-23649948659324477836270722879742423641"))).toString());
        assertEquals("-3458161248712824713213676425117947538125420999866670124684285160830120427102/802011412677623120992055142227981072075192027891029489252706170333485086059", new Rational(new BigInteger("213789862474166580503481646028919501911"), new BigInteger("-167608127232040670887837074936804950426")).add(new Rational(new BigInteger("290578801346761454935996934469031592435"), new BigInteger("-95700778467299438169848821814123763430"))).toString());
        assertEquals("-408601954698739369194469722338083360739633005055567194700991519408875606351/275510500363140648567969906059879587527550125250112489980013095419292207878", new Rational(new BigInteger("113785501020175694773395874149235381093"), new BigInteger("-309928831410766675392280266917215349478")).add(new Rational(new BigInteger("291651037813411053837822526768680927034"), new BigInteger("-261350603420980967724104668927474183494"))).toString());
        assertEquals("-32058315408044161559488982359981802054203185677956697338744975333632185602653/17368574562185938162181324011774025837951409599297783280898885360280126336050", new Rational(new BigInteger("101180906168400582746813392835436421365"), new BigInteger("-149055131830149988719297349255342928402")).add(new Rational(new BigInteger("135978283726190354613129784243163897964"), new BigInteger("-116524499015422197166810795354051963025"))).toString());
        assertEquals("-17058890005813620305350920291470216066303042656232538914747271770289255277457/1205854497746893350337117376977038800630487754477803770150986211788519294260", new Rational(new BigInteger("310597544711600853437748220483316472787"), new BigInteger("-325729732553317792216900168507785473676")).add(new Rational(new BigInteger("195365094655760926233077953441006781948"), new BigInteger("-14808037182169243797016404998458292540"))).toString());
        assertEquals("-386671369758824940800976747180266843533301025700947569625696485357598428005/12549333360087994871554998728822794199558766037766216207759538818305391868", new Rational(new BigInteger("149484291928355982916474427398663759810"), new BigInteger("-46107669919191817072779718383710093160")).add(new Rational(new BigInteger("150077222970955212715088840958333940749"), new BigInteger("-5443490587176460674813044123027087246"))).toString());
        assertEquals("-549096494065434429699260502220744442121330150362012092731355287709180688871/270205016685193376495930475777695222163056332077569582948085634193270830805", new Rational(new BigInteger("87795703783582548479594060948076981435"), new BigInteger("-280772415719723980484531253785039683666")).add(new Rational(new BigInteger("138998100127175341253009581982805226179"), new BigInteger("-80838501686053579785486357172306353570"))).toString());
        assertEquals("-126060782891599577023379955474684625814856040238477031430078499470039510705/30591714801196239956953516754909906328846121346506554614173719051597611682", new Rational(new BigInteger("238144412623249751672928272066690553370"), new BigInteger("-72132384397136128171225587717507841380")).add(new Rational(new BigInteger("170251295319627437068569481702680445326"), new BigInteger("-207811517363084744072015263190434530061"))).toString());
        assertEquals("-13498137138770450720062003358797199721701978656797534526237442025214267187767/9249608009293804840086126711772737545351803697323199457825689366486987120344", new Rational(new BigInteger("110562690011964939679546643331489728999"), new BigInteger("-82202948153058704013303314542055197633")).add(new Rational(new BigInteger("38591511449675408824330395380805239085"), new BigInteger("-337564827677642162850952861601314938504"))).toString());
        assertEquals("-20255405280279878937480590683816285407666754394560599081943215760915263646443/86717864879148674719623821392499033273510011732508349390984691258945395740774", new Rational(new BigInteger("44767857054926414403137910079596718969"), new BigInteger("-333701891070681740466234555392133077591")).add(new Rational(new BigInteger("25836681168531338772047313207991454647"), new BigInteger("-259866267466793811625738761221960949514"))).toString());
        assertEquals("-37946498979850082327077222565280748634419823119558156642044115684504369994803/20442759584968207184796709793979771618790723897820735562927557795408333117212", new Rational(new BigInteger("195658390962618816416932767262332837353"), new BigInteger("-153933640041521533217274366492673972532")).add(new Rational(new BigInteger("155425306455622723008541190010218286780"), new BigInteger("-265604835687040820719533781354184694982"))).toString());
        assertEquals("-743267842451146134686993069533273175897722756583071533587313333142564673649/480978317979281953189513118604272503551441458137671086418537515725650502822", new Rational(new BigInteger("34901315961203347885088886284156941811"), new BigInteger("-99179221881343343370945253546808801126")).add(new Rational(new BigInteger("306743436515921484432471507974848708121"), new BigInteger("-257028139254813303361135911486021665941"))).toString());
        assertEquals("-1174941370017213424030414906874950138500703781028674255214916670025797979161/525713965070158848068658111815884640980514483394621681994806065463424858272", new Rational(new BigInteger("102287107853871477807941363668762670098"), new BigInteger("-89672307550635253470954135665389140288")).add(new Rational(new BigInteger("307932777047350846964324344572484583604"), new BigInteger("-281405386039816045294449520954413074712"))).toString());
        assertEquals("-5124175526950954386384762103059124024672015965534406579212472557213702349291/2147428136105196972926124518499583002760063305921992078522721968111069907728", new Rational(new BigInteger("157964821464013996539538742546932178931"), new BigInteger("-209903534357761104171203648015495739024")).add(new Rational(new BigInteger("100277745731367715766070071885386814596"), new BigInteger("-61383286641903939696849974821425456182"))).toString());
        assertEquals("-5184913686996962026727165590956753243785686060473239284649565525415913229988/208806141807526277881344236886398019979898241628065352030361057568057212015", new Rational(new BigInteger("329482871080921259127987823004576488612"), new BigInteger("-260559306639020221261724093896707700881")).add(new Rational(new BigInteger("169972298695677637915539533785642114312"), new BigInteger("-7212389764573880150526280152886873335"))).toString());
        assertEquals("-80696182786608114752234558759585399149521965401055924273097580769433274333693/92875545805189861535702725009802943911943720945881839055879619011030510108676", new Rational(new BigInteger("19319949591401603789115365071719841405"), new BigInteger("-339228552187189357025567653053295230276")).add(new Rational(new BigInteger("222288713806668026497658996095739663588"), new BigInteger("-273784577407683249867604721907114068401"))).toString());
        assertEquals("-53218537486131427015967740698998388733201024103989920939974377352334963113092/561040564481187569573421839020603010587576579499024106610743316252999740885", new Rational(new BigInteger("265510074377246545830252998905507108405"), new BigInteger("-2806163149963085739105226261290970831")).add(new Rational(new BigInteger("47999784939692904710730125549893151107"), new BigInteger("-199931555828665163387374396249752887835"))).toString());
        assertEquals("-3813743947218786854522376609828155470959837848360881212492109444217530346297/1170962596155260333901881566320319422830557342604466007546033762602071831404", new Rational(new BigInteger("103747584741968638820721180489657806790"), new BigInteger("-60335739844173452545492238627168271905")).add(new Rational(new BigInteger("149187557171221855676710521958052621525"), new BigInteger("-97037228612714089174714989698243331484"))).toString());
        assertEquals("-42719328989218705158235572232106654491730328574461807412042751845191408245241/3601592077320124766677877697957675067309312379362506948184713803319579070559", new Rational(new BigInteger("299171539063549631456920867459528230726"), new BigInteger("-26879061384572882675172594827310670517")).add(new Rational(new BigInteger("195884274654867452034451370945308997334"), new BigInteger("-267984958685145342622734494500149419654"))).toString());
        assertEquals("-51224110402155430683111025395995392647195732587420188328534165819970983358267/30508907874930481565527663077124056041688796983265979155843907243500751142278", new Rational(new BigInteger("299347048907637090816851079771121503542"), new BigInteger("-242920960053813453678349345912396674812")).add(new Rational(new BigInteger("112205567850562597618054225099396065274"), new BigInteger("-251183824303773103964077828365136726013"))).toString());
        assertEquals("-9320969577709235247752481370795866283939888689556632737136548118987286341352/2245131512279163032713067504942389640202260905434510958180118700415612350115", new Rational(new BigInteger("114019049651822228799412572517280718480"), new BigInteger("-49948140929940259317888430569292803026")).add(new Rational(new BigInteger("168010205943591109129771715775992762704"), new BigInteger("-89898501544964241439470911494699101355"))).toString());
        assertEquals("-3305054801902666194096598600505694854735189228319534666738105202276670725409/1231257621296594420836302455376126788935179900237018357559380027518910434500", new Rational(new BigInteger("75229453521508149132848953902198199720"), new BigInteger("-124967998471897793372424808148487334496")).add(new Rational(new BigInteger("328256881364242952879547739729486432239"), new BigInteger("-157641333634511078964142876432139105750"))).toString());
        assertEquals("-21837863521569892519040435432400542067235827888775158159297558023372756077103/4568804964683957440528191224886269329532780756782913963140665177871367284477", new Rational(new BigInteger("155598325501935171032901688466929752994"), new BigInteger("-315313313293497749205952331005083236431")).add(new Rational(new BigInteger("248429544549887489253377902134786177820"), new BigInteger("-57958922405934114458302821142474142668"))).toString());
        assertEquals("-38588074182518430208777639170171060122014053186333230843742035314706367477961/11470682586222042632648139971491522024244706813574092564374768664863285311287", new Rational(new BigInteger("326583203772890786691187311253183473150"), new BigInteger("-127946562297498121482608149621026264177")).add(new Rational(new BigInteger("218275323549106092980004194520564497429"), new BigInteger("-268956407587193330603472613838859890293"))).toString());
        assertEquals("-10117403965719354064464561447726721949066150841224111407657704033644250984467/743826958717255984822728595343166063411831748089119853435630959293892696425", new Rational(new BigInteger("124681978433900163995102139125167626058"), new BigInteger("-142388178322391737331342811885833896535")).add(new Rational(new BigInteger("332403757176479470480552033566891541911"), new BigInteger("-26119688006440452726101090819822441275"))).toString());
        assertEquals("-336069806162574279965520083301842885104180910874379912420256632387833676077/274073665440853142930690601296257275257919752407121428206174693333848269754", new Rational(new BigInteger("223181641412797791585856227051295634462"), new BigInteger("-183043375157760397330518174046314820972")).add(new Rational(new BigInteger("1264031276281134199832819729021721118"), new BigInteger("-182672479432624100713301238721483823179"))).toString());
        assertEquals("-42898478217390297425692566965290906028949920940929097587085173503751429850574/7134475421372638600897734673311001588756282390814724141635031007188332160123", new Rational(new BigInteger("335731360483998377610441495707005682899"), new BigInteger("-129082495112681485230989499340337077983")).add(new Rational(new BigInteger("188580042875014643004079231590972299985"), new BigInteger("-55270665593693846033073362063914244581"))).toString());
        assertEquals("-59013744684951062540145674140672550213469160110572386682120655009897014688767/29434601852931579307627721547871204798121683388275691972346706106894250075640", new Rational(new BigInteger("96466400687467709172365017114700362782"), new BigInteger("-305031199658313724969086084358443519190")).add(new Rational(new BigInteger("325901248916286736317185588084679883765"), new BigInteger("-192994040517188318515413487573268135912"))).toString());
        assertEquals("-5624601879754044912472340716099342862374720190630134669950970932868542568309/889558774921719280494764888624776282939276771047241845576903394913987737353", new Rational(new BigInteger("68632430376639684896748788380637515003"), new BigInteger("-32362419035047373291378324623715273893")).add(new Rational(new BigInteger("231013310280024986609735243001071820044"), new BigInteger("-54974801108554839022346549543955398442"))).toString());
        assertEquals("-3536247359066115783581577355232334753044407030862257091760178183875455543135/802664326804938557394447798878538995029054183627806700401594463327485347496", new Rational(new BigInteger("80120165878046565748414639700826679451"), new BigInteger("-72058878576741785398522397279016499144")).add(new Rational(new BigInteger("220135673914286636603880254255702034324"), new BigInteger("-66834039828980516293974315325535839854"))).toString());
        assertEquals("-16620179309306874342967334951306025378005305806071555284827534162875008600918/1746190197832517144556976029427390627072836492778698729150974354954381867785", new Rational(new BigInteger("114905204594403821838631252770524197817"), new BigInteger("-66581576727197416885123930777030857965")).add(new Rational(new BigInteger("204360402953661648108056208712326346389"), new BigInteger("-26226326916034549209707101370499233549"))).toString());
        assertEquals("-14717742292273457843041779344692479522186341205346552823106892716805538318603/1402951945324822859359860995445726419955947934464533220800735815367128911574", new Rational(new BigInteger("339329537450767648915335620252827981663"), new BigInteger("-71004794129368505241414463540418030026")).add(new Rational(new BigInteger("112852687548303221617694648089176248441"), new BigInteger("-19758552398147771119191173896507651599"))).toString());
        assertEquals("-6046834445385682818399699771552592369054808224904933953716300884461562084135/3540204647521417987278168145453295048072953060465087618051616797572776399499", new Rational(new BigInteger("121771194049488047799300063548775326965"), new BigInteger("-175274353195047608072153620357499267422")).add(new Rational(new BigInteger("163733739207111914358933243205411424470"), new BigInteger("-161584605299639321066258096873432300436"))).toString());
        assertEquals("-20305953390047117459304578312851051211213455041998686941776303288037751907317/4618114107103494620323132555076523870810220604071796740432994665114604082865", new Rational(new BigInteger("106750610954803679369189374483230671372"), new BigInteger("-27211619663764114205822709803981809777")).add(new Rational(new BigInteger("160901042792990632669535945369648956402"), new BigInteger("-339422214786657989772741029946415375490"))).toString());
        assertEquals("-27655061307557921844646293707504730682141399301840748060311778913893190760681/10859989301027136349643753079052713848081793732896343570547427638544621959932", new Rational(new BigInteger("52158908193096587033772352166078525821"), new BigInteger("-33020941959054491934102497220959933884")).add(new Rational(new BigInteger("318008547531938698072194884744628703697"), new BigInteger("-328881874856670406595761087858306634673"))).toString());
        assertEquals("-25161406320903477158499160470362193854025396071176583514712247284179968349491/2063209725061417328916968243657561194441779389377350497376977809281553478082", new Rational(new BigInteger("322541318408805922627865832519964375196"), new BigInteger("-138481601401373344189098063287444879149")).add(new Rational(new BigInteger("293987467246751163877895428099734407374"), new BigInteger("-29797600608061081363186711993022473236"))).toString());
        assertEquals("-3549657586446934289228239846727183081072952867277005866547974164773823452374/4238788217089081545260291680890338063784465820487620371895659011436154818951", new Rational(new BigInteger("22446317219283360727162024615585575894"), new BigInteger("-111560598925677474454853403114770293778")).add(new Rational(new BigInteger("193387348970852464301621162551257824036"), new BigInteger("-303963102235619564867800460715741490236"))).toString());
        assertEquals("-4479728218527315339518347363895235849025794040667675262319329814495011320983/4083467001913962517586255146434970269795736135730960076883224720080491449213", new Rational(new BigInteger("205071823577385879421412627117149299547"), new BigInteger("-297342754082154398139103707456875046249")).add(new Rational(new BigInteger("106292443307515978445738368473029908864"), new BigInteger("-260930767510576960867635610112177478703"))).toString());
        assertEquals("-183376730003594445613173838523563772828067944378404014397114609675227630990/69080297795145040652341650490498282336239097587793702930944337020148301719", new Rational(new BigInteger("58592039889885103497192221242505602501"), new BigInteger("-82092659840505528750194795086792368139")).add(new Rational(new BigInteger("119222069158626665151189569835494088983"), new BigInteger("-61428899354012378080411150593919317133"))).toString());
    }

    @Test
    public void testSubtract() {

        assertThrows(NullPointerException.class, () -> {
            Rational rational = new Rational(1, 2).subtract(null);
        });

        assertEquals("175796265922487281/269060754964098933", new Rational(928390976L, -2903329791L).subtract(new Rational(1893858939L, -1946136423L)).toString());
        assertEquals("3117347564502586551/32047467342553418", new Rational(1310839203L, -1668433837L).subtract(new Rational(1883518689L, -19208114L)).toString());
        assertEquals("117567747910393150/80164771627096607", new Rational(165646710L, -2244403293L).subtract(new Rational(2145731120L, -1392987661L)).toString());
        assertEquals("-168204031896676779/423131049406983104", new Rational(822731463L, -858281259L).subtract(new Rational(1659603066L, -2957988736L)).toString());
        assertEquals("-56745866156661223/402189310320138408", new Rational(543615084L, -3437682744L).subtract(new Rational(47850865L, -2807863368L)).toString());
        assertEquals("-134684972088447611/733404246681717580", new Rational(1168177088L, -3159552790L).subtract(new Rational(518335002L, -2785473624L)).toString());
        assertEquals("-77761660611863357/14584058185674870", new Rational(1792328195L, -293793950L).subtract(new Rational(1144708674L, -1489212918L)).toString());
        assertEquals("1978889097046320989/1896866572756118800", new Rational(235461921L, -2598289327L).subtract(new Rational(827770307L, -730044400L)).toString());
        assertEquals("-441536684708422889/1377962270322754334", new Rational(1886441898L, -3455448078L).subtract(new Rational(539561685L, -2392677718L)).toString());
        assertEquals("-175215190897917974/31404797751063779", new Rational(1178747583L, -211086421L).subtract(new Rational(9564379L, -1934100587L)).toString());
        assertEquals("-785631495344959199/795850866966285294", new Rational(1834464349L, -982963362L).subtract(new Rational(711758422L, -809644487L)).toString());
        assertEquals("374749497961537362/2283634680193686625", new Rational(634460164L, -2361450500L).subtract(new Rational(1674060211L, -3868189793L)).toString());
        assertEquals("-99585075075580499/3501984030545129318", new Rational(1072640739L, -2315590501L).subtract(new Rational(1315106006L, -3024700636L)).toString());
        assertEquals("-360581921884104488/1344770054112886989", new Rational(1399734578L, -1769228979L).subtract(new Rational(1590161160L, -3040352764L)).toString());
        assertEquals("4622653308134145481/3600411199411027485", new Rational(1501577156L, -3388876865L).subtract(new Rational(1834814141L, -1062420189L)).toString());
        assertEquals("-276243007225888799/188874218617124850", new Rational(429474913L, -239223825L).subtract(new Rational(1313414735L, -3947646490L)).toString());
        assertEquals("513446367099285465/3776893232231730394", new Rational(2047876875L, -2837167522L).subtract(new Rational(1141850220L, -1331219677L)).toString());
        assertEquals("-658796212568112049/6817705067706349550", new Rational(270291127L, -1701489857L).subtract(new Rational(249330993L, -4006903150L)).toString());
        assertEquals("-1414286318735875733/244952075474694874", new Rational(994380251L, -164684542L).subtract(new Rational(393216042L, -1487401747L)).toString());
        assertEquals("6832322030578483/440053046366643810", new Rational(196334942L, -3135985155L).subtract(new Rational(328918342L, -4209711060L)).toString());
        assertEquals("201171157330419946/264654173152531373", new Rational(321600667L, -1287562569L).subtract(new Rational(1868239985L, -1849919853L)).toString());
        assertEquals("160874696798100831/6332814259764709100", new Rational(1236459794L, -2728784725L).subtract(new Rational(1110524731L, -2320745276L)).toString());
        assertEquals("-9642363802522043/98120932646081268", new Rational(2122473519L, -2893100244L).subtract(new Rational(1098980725L, -1729690347L)).toString());
        assertEquals("-84148104281670517/89581113859046473", new Rational(658554570L, -648347465L).subtract(new Rational(52775009L, -690841861L)).toString());
        assertEquals("-429776142584346027/708211683995477981", new Rational(1953487647L, -1984242233L).subtract(new Rational(539165376L, -1427671828L)).toString());
        assertEquals("-666385458329713653/10054424255982541901", new Rational(431398996L, -2411846783L).subtract(new Rational(469356473L, -4168765747L)).toString());
        assertEquals("8580128052725139/235809827897174168", new Rational(1344174948L, -1965407316L).subtract(new Rational(1037063901L, -1439761576L)).toString());
        assertEquals("74554939735097659/26395675400224712", new Rational(430472405L, -596089901L).subtract(new Rational(1727567109L, -487095032L)).toString());
        assertEquals("-1951600220502454/7676379646600844075", new Rational(2023505443L, -4172418025L).subtract(new Rational(891779467L, -1839791603L)).toString());
        assertEquals("-54409966642607299/369013721949315212", new Rational(294883095L, -1330256620L).subtract(new Rational(308858331L, -4161006039L)).toString());
        assertEquals("-212292515830972549/490642181543658465", new Rational(1979663954L, -2241590940L).subtract(new Rational(788792499L, -1751049838L)).toString());
        assertEquals("-455891358628627949/101160126377041284", new Rational(1765518086L, -369849944L).subtract(new Rational(1022311507L, -3829233429L)).toString());
        assertEquals("-215995502688035357/49449032616930432", new Rational(1753487898L, -355871163L).subtract(new Rational(1631940205L, -2917993344L)).toString());
        assertEquals("-310270372042820153/526955036793641456", new Rational(1989834753L, -3282110832L).subtract(new Rational(58896288L, -3371627693L)).toString());
        assertEquals("-530644825633214277/2844951437996332720", new Rational(1424030609L, -3907957615L).subtract(new Rational(647440825L, -3639946640L)).toString());
        assertEquals("-3692814275968757454/11256267926634961103", new Rational(2054107835L, -3388101751L).subtract(new Rational(924274051L, -3322293353L)).toString());
        assertEquals("-1109560604459271974/305909366001793227", new Rational(1752980871L, -389220201L).subtract(new Rational(2067230229L, -2357863481L)).toString());
        assertEquals("378292959438438477/1790135651503752683", new Rational(5010575L, -2395119446L).subtract(new Rational(638027323L, -2989639042L)).toString());
        assertEquals("991613628273919909/70453816949365245", new Rational(155511688L, -3504255485L).subtract(new Rational(1135465412L, -80420868L)).toString());
        assertEquals("1518010474150894741/5555513655209912758", new Rational(1043926255L, -4283575478L).subtract(new Rational(2011343346L, -3890801283L)).toString());
        assertEquals("97642971417383636/495154529805538917", new Rational(822604494L, -1299040929L).subtract(new Rational(1899222172L, -2287015838L)).toString());
        assertEquals("88378554047512021/129608509297022700", new Rational(850079011L, -2773006242L).subtract(new Rational(1385976265L, -1402180500L)).toString());
        assertEquals("1771369772819457966/592001575219613507", new Rational(355531705L, -1224822443L).subtract(new Rational(1586524877L, -483336649L)).toString());
        assertEquals("582969115880736259/312702959828585289", new Rational(845468191L, -3424090583L).subtract(new Rational(578414292L, -273973149L)).toString());
        assertEquals("4549966941224616853/11041227236704655190", new Rational(607255723L, -3353433110L).subtract(new Rational(1953032912L, -3292514529L)).toString());
        assertEquals("-840538242284506524/3988624769058098743", new Rational(675256615L, -2269512451L).subtract(new Rational(305098442L, -3514961786L)).toString());
        assertEquals("-643410733088294212/573741791543789985", new Rational(996910009L, -834875695L).subtract(new Rational(99856762L, -1374436446L)).toString());
        assertEquals("152923980299888187/4431565008931445", new Rational(1764508686L, -2255529540L).subtract(new Rational(1664079035L, -47154142L)).toString());
        assertEquals("-5408637000249488104/4515888526069128651", new Rational(2135282198L, -1535161801L).subtract(new Rational(568401194L, -2941636851L)).toString());
        assertEquals("2302431263220993857/1048455948504310849", new Rational(552823845L, -3529586279L).subtract(new Rational(2096545764L, -891143493L)).toString());
        assertEquals("114982099520725478/808611778399937127", new Rational(2055738871L, -1813425053L).subtract(new Rational(568891639L, -445903059L)).toString());
        assertEquals("-1398020556515966888/2352832157435789715", new Rational(1443604838L, -1449994551L).subtract(new Rational(1302685364L, -3245297930L)).toString());
        assertEquals("-9811999197820403/626272900493805", new Rational(614577758L, -30124755L).subtract(new Rational(1476185755L, -311839665L)).toString());
        assertEquals("79681981253067405/1677781045168308452", new Rational(475657057L, -4033944037L).subtract(new Rational(412770126L, -2495494776L)).toString());
        assertEquals("214784632620030835/1174655414382379866", new Rational(1331783213L, -3782290959L).subtract(new Rational(1661407830L, -3105671740L)).toString());
        assertEquals("3693164023249739/5266215861666259", new Rational(774762274L, -2917770596L).subtract(new Rational(1451841320L, -1501657328L)).toString());
        assertEquals("85239754745320442/129685859299814575", new Rational(48201638L, -321999473L).subtract(new Rational(650020008L, -805503550L)).toString());
        assertEquals("22515715461253483/5053252932378959160", new Rational(712375934L, -3282995920L).subtract(new Rational(681705989L, -3078439971L)).toString());
        assertEquals("-62742576957275369/66931225365314460", new Rational(2011390949L, -1077831135L).subtract(new Rational(1557149687L, -1676647692L)).toString());
        assertEquals("-2301412691995882061/3992074611788463460", new Rational(1569555949L, -2342095988L).subtract(new Rational(319266726L, -3408976090L)).toString());
        assertEquals("-169928878125975753/3661778947956088234", new Rational(1596340359L, -3438567854L).subtract(new Rational(444963234L, -1064913971L)).toString());
        assertEquals("32586048872750585/129849891000386373", new Rational(985902794L, -749977479L).subtract(new Rational(813159091L, -519415161L)).toString());
        assertEquals("150732370669353605/472484392332186598", new Rational(351458798L, -4041898708L).subtract(new Rational(1423712505L, -3506899305L)).toString());
        assertEquals("274101390029291177/209044402758826207", new Rational(1602709836L, -3191388242L).subtract(new Rational(1662964061L, -917037169L)).toString());
        assertEquals("414342445998904539/135745497933433780", new Rational(1843870445L, -3570051076L).subtract(new Rational(1085592712L, -304187240L)).toString());
        assertEquals("450455887193532253/530331172614262068", new Rational(2018641530L, -3355832088L).subtract(new Rational(1375755196L, -948196141L)).toString());
        assertEquals("2181862078744545172/4787949477630845981", new Rational(1702884167L, -2661424181L).subtract(new Rational(1970892519L, -1799017801L)).toString());
        assertEquals("-199290577590431/1132316788155046", new Rational(482083985L, -1371486142L).subtract(new Rational(168080520L, -957711080L)).toString());
        assertEquals("3305411128976979219/559537493191011412", new Rational(319861479L, -2451675116L).subtract(new Rational(1378001517L, -228226607L)).toString());
        assertEquals("-1617353259483201423/473236090830577690", new Rational(1304987366L, -348913054L).subtract(new Rational(874836781L, -2712630470L)).toString());
        assertEquals("939145325909654653/518330265222665556", new Rational(443376398L, -2130887336L).subtract(new Rational(1965368954L, -972984834L)).toString());
        assertEquals("-506311584928733681/8686538826002405602", new Rational(603989899L, -2902085026L).subtract(new Rational(448489517L, -2993206177L)).toString());
        assertEquals("-4676575827143190331/2145078381394670384", new Rational(1962338254L, -697824689L).subtract(new Rational(1942542837L, -3073950256L)).toString());
        assertEquals("1187003523821153996/2110684344025167933", new Rational(510876184L, -2487247341L).subtract(new Rational(1303074536L, -1697205026L)).toString());
        assertEquals("-4334940653525724271/3469447897572961275", new Rational(1382621342L, -988264425L).subtract(new Rational(525117875L, -3510647363L)).toString());
        assertEquals("2075843239609270667/10228420495315406035", new Rational(1105116741L, -4116668795L).subtract(new Rational(1171251688L, -2484635273L)).toString());
        assertEquals("-4219510707496815/3574094244875593", new Rational(1840277413L, -1004600402L).subtract(new Rational(240971654L, -370003636L)).toString());
        assertEquals("-78561531989066537/151059374588172922", new Rational(156775737L, -268457577L).subtract(new Rational(107896155L, -1688080958L)).toString());
        assertEquals("-1067464858568079157/165252529995166438", new Rational(1771201177L, -256671071L).subtract(new Rational(1703835714L, -3862979868L)).toString());
        assertEquals("-1410783393843230789/4279904885629956558", new Rational(1551893084L, -4224487944L).subtract(new Rational(152887134L, -4052472103L)).toString());
        assertEquals("1991293357457387315/1245416567981546364", new Rational(1307015465L, -2390797263L).subtract(new Rational(1117679545L, -520921028L)).toString());
        assertEquals("-177800471395613039/449961148475421933", new Rational(1084821014L, -1810927419L).subtract(new Rational(303971366L, -1490820042L)).toString());
        assertEquals("37098446575941945/502214127616585826", new Rational(2100413252L, -2400621626L).subtract(new Rational(1587950276L, -1673613608L)).toString());
        assertEquals("-280902006434571625/2394627420479849401", new Rational(1363444066L, -2030200534L).subtract(new Rational(1307540022L, -2359005803L)).toString());
        assertEquals("-17655593796216283/147362884698559743", new Rational(1410743698L, -3883880763L).subtract(new Rational(387907330L, -1593571362L)).toString());
        assertEquals("-70446595971325325/5226862123094475198", new Rational(1691379215L, -2922433006L).subtract(new Rational(2022039590L, -3577062066L)).toString());
        assertEquals("7147759460734364/15760523737702827", new Rational(1004840178L, -3079193976L).subtract(new Rational(1149582235L, -1474097076L)).toString());
        assertEquals("1090892842657199520/331967753834652097", new Rational(1849557754L, -2262361261L).subtract(new Rational(602153098L, -146735077L)).toString());
        assertEquals("-946910060914554515/4187134224352428862", new Rational(2130712959L, -3604411606L).subtract(new Rational(848001776L, -2323338554L)).toString());
        assertEquals("1495340212703097931/201617509074196572", new Rational(674568642L, -2796270904L).subtract(new Rational(1104312281L, -144204561L)).toString());
        assertEquals("-99034055634103423/2739445965082185", new Rational(1201578384L, -32991480L).subtract(new Rational(537555555L, -1992838853L)).toString());
        assertEquals("-589146663718683137/2164692280638646296", new Rational(1823201875L, -2663208648L).subtract(new Rational(335225956L, -812813627L)).toString());
        assertEquals("-347457010714302171/652478333660410900", new Rational(797320225L, -635352626L).subtract(new Rational(1483757783L, -2053909300L)).toString());
        assertEquals("-14041246145539303/55194946525033876", new Rational(343238185L, -1187748430L).subtract(new Rational(64293492L, -1858809328L)).toString());
        assertEquals("-124664839759694089/47408069629607784", new Rational(1995902893L, -694462056L).subtract(new Rational(800890104L, -3276762672L)).toString());
        assertEquals("-2034882840542841392/3871218676815322665", new Rational(1708812746L, -1933599570L).subtract(new Rational(1433900717L, -4004157569L)).toString());
        assertEquals("-120280430012531/38338634023245260", new Rational(184254561L, -380366660L).subtract(new Rational(1794856988L, -3729373807L)).toString());
        assertEquals("67061205498698819/610318720609603592", new Rational(1028504233L, -4176040744L).subtract(new Rational(1093109367L, -3069101553L)).toString());
        assertEquals("-179408810289721845/982701929135147507", new Rational(1120985015L, -2905155913L).subtract(new Rational(756430280L, -3720874729L)).toString());
        assertEquals("-1301203892997747/952065264465980", new Rational(2124539262L, -1447758640L).subtract(new Rational(402830514L, -3998288560L)).toString());

        assertEquals("-1134723563007667357740112957075301637469922535281056697351637704745172171035/4506931699818650010153225965581318979984523517834700716415941281970155437588", new Rational(new BigInteger("105339910464758280435164341842544166471"), new BigInteger("-86383977137284412945599314574198054742")).subtract(new Rational(new BigInteger("100972441433591559524007738510655403429"), new BigInteger("-104346473713662843209717446940353607228"))).toString());
        assertEquals("-1286834156427712925604856487036147384250286175335329123913136869710842880983/13152577669837124202903883137250697647139402118452379011410464271561401161485", new Rational(new BigInteger("41764741336857961699636340955035757096"), new BigInteger("-286343616268623792708106759798327904395")).subtract(new Rational(new BigInteger("2205529664443975466686113866936820451"), new BigInteger("-45932847539015741447821371658176985543"))).toString());
        assertEquals("-5002718884147740898861936525208484890210989476109384234538447765988692478926/6293680361172234101379194510617463323122095464114551725245934909986830797981", new Rational(new BigInteger("236204524332717303925782641246367020074"), new BigInteger("-146045224983647278148213736715843309838")).subtract(new Rational(new BigInteger("141772274009269280653942155418761946846"), new BigInteger("-172376203655461905842942890502873038198"))).toString());
        assertEquals("-35563946068167195840274420299201452859509164472132616604063382674439795803535/22281242604203522763017076872258431924770583857798661383953066828344780008796", new Rational(new BigInteger("308754791482567415912842043806932271841"), new BigInteger("-102567763743020237402925036767707495273")).subtract(new Rational(new BigInteger("307194020617704340514521457357802210789"), new BigInteger("-217234360885827220055067819298734400252"))).toString());
        assertEquals("1640296309261115859068496609129919715587372268445346048962123235582831067033/946545720212550670824951366573873098492555831115976549433559203492371099243", new Rational(new BigInteger("22125501768929007794685392860653609852"), new BigInteger("-259212729730663588288731416995942082506")).subtract(new Rational(new BigInteger("199190469404066209711221129969657588945"), new BigInteger("-109548522697484518358182032221566602465"))).toString());
        assertEquals("-147502469237117652793860129886872089869462165244189137335437757982467522776/7804567044796761032520239912148718674638691005453382601329810629464620196065", new Rational(new BigInteger("40034742104666547479822867133956707821"), new BigInteger("-330534211049841813481841454654378614415")).subtract(new Rational(new BigInteger("21722935652924744533606800608933227373"), new BigInteger("-212507816301590259137033384355561262599"))).toString());
        assertEquals("12541676338551476787976718780293772151246871990642414727654871152644461839893/124405017160486896187871082661820129681175716184788069313348898818767017038", new Rational(new BigInteger("215737037289170082316537916052603331645"), new BigInteger("-90246982341881265528414920222157620586")).subtract(new Rational(new BigInteger("284531813482023043511350185055198384196"), new BigInteger("-2756990071739025440211714882007018966"))).toString());
        assertEquals("7912991615825600674229266521712667585469705584097721741490510559562387079759/2604650708630548491085542349359156523228716255523637662751234453447187692990", new Rational(new BigInteger("93691313044507843911383089514672431627"), new BigInteger("-145050129809561209613079430773656702855")).subtract(new Rational(new BigInteger("66152282584813845357544939820372894787"), new BigInteger("-17956900225116922329234939002850473938"))).toString());
        assertEquals("-5122113938100175099449067696005223056433328191127653800888631109416830040459/8282253166252524443009278160270753279184276489771693453606415074115438163340", new Rational(new BigInteger("192792399806368255105646125984336889002"), new BigInteger("-254264533119011978462824785109078955816")).subtract(new Rational(new BigInteger("36427717599792700807833543008020271048"), new BigInteger("-260586974192768065626171441550475979420"))).toString());
        assertEquals("-150999446828334604872269442510658286505138605700891178338831855727159612207/188173534919074030398579225071955945892851136137511590420935080244635765720", new Rational(new BigInteger("268895015983121230781734536752393838216"), new BigInteger("-86879346325754526615680851410990153660")).subtract(new Rational(new BigInteger("119173574151261799142716675559449632666"), new BigInteger("-51982030586698879654020014211544717808"))).toString());
        assertEquals("14965684149601200664911084205806177864264082868988579947331504498490077261082/2286427605957171050958210881275260060954460570075012888861633117230042422365", new Rational(new BigInteger("54155734375902365484027299333059944844"), new BigInteger("-164014789773732267858598688104182865295")).subtract(new Rational(new BigInteger("191697777914963688012839784758207633220"), new BigInteger("-27880749158187843817882941659097174694"))).toString());
        assertEquals("3264414617116312309104762550717615372261083972743282861367059057700377672729/7244091138657544154027939989317535867492666695925531819646015168665296395610", new Rational(new BigInteger("18382073813598999061959922291692297990"), new BigInteger("-169301403152717226646829214798929291301")).subtract(new Rational(new BigInteger("71782321600754519779168374946457226787"), new BigInteger("-128364402251109383601011232999748307830"))).toString());
        assertEquals("-46498709680136411126195427004327337167737118882174267879948027877851809506386/31398581677406871811426153889746095423500566428851679035818609864472592399213", new Rational(new BigInteger("242063490702977671196304431547361670435"), new BigInteger("-124863283847283036420585701258045512887")).subtract(new Rational(new BigInteger("115097630310914850307429140272759565817"), new BigInteger("-251463686601496421315429556054921858299"))).toString());
        assertEquals("31552239392137977006433462035116120889074266431929105881655709536791444932576/24172523122888483006727391159805896853349534445188348541014341613715236465165", new Rational(new BigInteger("185817806958933204602596966091090134579"), new BigInteger("-249544498400893758471045843161378859547")).subtract(new Rational(new BigInteger("198568896213772795377781292318393518223"), new BigInteger("-96866584027251420569453681201177640695"))).toString());
        assertEquals("-46597751730710938922822562260423837635673022007548649610296512623060059484768/106909402723740945338771970275338090212145210389302479191628299345628914167215", new Rational(new BigInteger("172165122714937050864828499913309804281"), new BigInteger("-328871701525231130729366430603093131191")).subtract(new Rational(new BigInteger("28490065816772390700846304399091150567"), new BigInteger("-325079361428544272220239692846675857865"))).toString());
        assertEquals("13003186742080749457074451807753421207250614713477239540960456820123003475297/1640574394422962730814796974677118272741874747995735653351611924963393659850", new Rational(new BigInteger("147858491115440037037012098400690384209"), new BigInteger("-78175465073179686386649746807631512534")).subtract(new Rational(new BigInteger("206025188584517925697947386714672387008"), new BigInteger("-20985796411792737412252359286789969775"))).toString());
        assertEquals("3933306550635882568955250451583212678677005579089146168701056957994965859535/10496924433782284381800982773473210899553993492210691868564197785428748766314", new Rational(new BigInteger("33063724630696417703919870275119829815"), new BigInteger("-54430166851343818640218567305726370261")).subtract(new Rational(new BigInteger("189411258378208720997596731359260603145"), new BigInteger("-192851226461436564729051388231029147074"))).toString());
        assertEquals("5166766505749695447819249132322747849744385584558370845307420062649868520723/1451046266421392551943998071599880780649115983668276495918832631005557931777", new Rational(new BigInteger("239332215274603505874854304152286199704"), new BigInteger("-314754473417737158675427973846256198022")).subtract(new Rational(new BigInteger("199206363935671893002720744165859829585"), new BigInteger("-46100894156175721710053324795278608535"))).toString());
        assertEquals("12568862025816726431229567924585191982456391090749378517139230975765736505902/42165907932481360020597507395920402631051673011311041985873788900640287024313", new Rational(new BigInteger("280315717258364690913955389628561658678"), new BigInteger("-315868112482040261221010495176845517427")).subtract(new Rational(new BigInteger("316516944433838309534119507781281509984"), new BigInteger("-266984265053844862860801008684709063238"))).toString());
        assertEquals("3028355390542053963142241723981754406199217853260239510314945427445386470537/1965866742853004076388461407226462221099113119557122494885554867238136854168", new Rational(new BigInteger("207299903941521578711101697604288044432"), new BigInteger("-86350044137049203625092729847986450831")).subtract(new Rational(new BigInteger("89725454426310192535543692902125152743"), new BigInteger("-22766250585036268935542630376807293928"))).toString());
        assertEquals("1175065213071592438233459289315922586893919841835367123961738371956812153539/1856806927402634378297703604709383651333130715598259291157731370103898095765", new Rational(new BigInteger("39053842236416957944373146811250742188"), new BigInteger("-241445708609700708114470715149115039970")).subtract(new Rational(new BigInteger("232206825576904977214646775120753283923"), new BigInteger("-292234074681189959719698561531974620031"))).toString());
        assertEquals("-8525802531999449240925199028121259241872294758031632433036308357242212843873/11034703513665493524972784590565235339342163333561486347981084279243597848220", new Rational(new BigInteger("235984525647922257642585905819567844367"), new BigInteger("-224363517335018445905505590742072418580")).subtract(new Rational(new BigInteger("13729720418244471057532675520881346001"), new BigInteger("-49182254070248556498730524013664734459"))).toString());
        assertEquals("33455776237791282465463415115619758177763139163479308637212123616906166469267/83199050267853794590092120814069788086564048144716942574687797340407512704704", new Rational(new BigInteger("207012222169714501659207723632429272394"), new BigInteger("-311420258176712894902590516028667971343")).subtract(new Rational(new BigInteger("285020542339444418380887281671307202493"), new BigInteger("-267160045255126497232404277447428369728"))).toString());
        assertEquals("-2078774421682743133340080963984781058880158782754427793453914852102750524581/3787907618747750501883587676868517658489160846748396123795845497681581906295", new Rational(new BigInteger("172389315964322171462390849534906976535"), new BigInteger("-205052493671547721475957214007472543325")).subtract(new Rational(new BigInteger("80887870109668098832070938094574286656"), new BigInteger("-277093017811468757807617303175883707469"))).toString());
        assertEquals("-19813978325302308915705894453382954528334666660671254635569586398210797457/36387164222694208740089634712392558509594730715184882425719396688287977934", new Rational(new BigInteger("247365031737091255361059979396447948700"), new BigInteger("-272550824376200569434957331871652116472")).subtract(new Rational(new BigInteger("99461897400136422484553232982974547713"), new BigInteger("-273954265799272599307356789636357484569"))).toString());
        assertEquals("-5702488429514048318161318762896710366363954128188703172892075769702399041567/65703116718469234120307510608852353633295115842133271033934611127294273371602", new Rational(new BigInteger("184732340246119005045841682228460649915"), new BigInteger("-269496502548792470728377311104710976241")).subtract(new Rational(new BigInteger("145957985449932366488552123041585854743"), new BigInteger("-243799515381739150408645578256920942322"))).toString());
        assertEquals("2536181397313577563183878599737531521056643680039619113358396054328092760041/6007763016750075004874948447839869320297950718480862722900468460457447300879", new Rational(new BigInteger("57861353119215293389598101127876707768"), new BigInteger("-181760838567304389632579865626606286392")).subtract(new Rational(new BigInteger("195803661413362370201403713585680372568"), new BigInteger("-264424969167402024752289223870237420921"))).toString());
        assertEquals("-20815194562719733062207745008027013617273459800991612928257170736364382330/671909160252898589862497397524111846987064518278796458762827222881175584083", new Rational(new BigInteger("47776969416823002778648866640570746032"), new BigInteger("-135642415190205791559090300457500242678")).subtract(new Rational(new BigInteger("108209311341526128021516940741152686132"), new BigInteger("-336840234178432614457592079332564488498"))).toString());
        assertEquals("32802308592159490300520528153338287576689810122828012319157936000318083381482/40897399698550389387520115888819997256799055827255932136668033146372707446415", new Rational(new BigInteger("108728375391865470399069474517441867215"), new BigInteger("-212268188780434027391381916086900358257")).subtract(new Rational(new BigInteger("253221384960274570937394300755171269451"), new BigInteger("-192668529059970650438085044530930916095"))).toString());
        assertEquals("32891828462402603338893563826397630825968657078217042629532882092398892832726/13575783509024074597508603564454404092011737856771704435684034353164342112593", new Rational(new BigInteger("243969324294772448408577216271735666428"), new BigInteger("-277999944754698006470228234343862919758")).subtract(new Rational(new BigInteger("322343723811256763002837952518106957816"), new BigInteger("-97667526668058111269820608466007303367"))).toString());
        assertEquals("27438646251238743535006111386677017878556110468263917739622214642851205486649/2589602957425142166266965369012764107513013854859664247271068155132197180610", new Rational(new BigInteger("5443106204539828068068760017992200904"), new BigInteger("-285207551710385376041581734656209902865")).subtract(new Rational(new BigInteger("289137520376157066691014536403396994731"), new BigInteger("-27239141550376198439034409300276679142"))).toString());
        assertEquals("4817388678449872023602921479334611996146208341072024281335108862637469421996/16264630106737404126216571794352523196614915164632630459309834366336193667495", new Rational(new BigInteger("160727280187574510551657721115077292536"), new BigInteger("-293004170452897769772003476170188998905")).subtract(new Rational(new BigInteger("93782574894127460999683755941238993576"), new BigInteger("-111019785702006203213520049368317693758"))).toString());
        assertEquals("21133461916850251925653161285393635560770070437787410162540495677599271405103/9961644835001840171617429050737565209290389472912649838008589280567567160128", new Rational(new BigInteger("271927028028188975659837933748611568120"), new BigInteger("-236987643724343339321440146255628775407")).subtract(new Rational(new BigInteger("137407014053068691398921782142721733569"), new BigInteger("-42034448203505984459096011106554765504"))).toString());
        assertEquals("20234518616408069583678508854834793549557465012348393289017121991545965069731/6610817880620639376930188625787380757179767943944359318914989160370997784682", new Rational(new BigInteger("273228090531411446287829417230316204638"), new BigInteger("-256197270933286855746177456066681311252")).subtract(new Rational(new BigInteger("212998313774100322630938198801935929789"), new BigInteger("-51607246685637648523359669465323539057"))).toString());
        assertEquals("1656700380049585426035233808707207771542178939151987855941638442973439236482/1935141573416005573417882880920735129011692708519429901757590783138925943743", new Rational(new BigInteger("75915378073826191487204186995235109276"), new BigInteger("-77128784645171978925466180598862009881")).subtract(new Rational(new BigInteger("323222845464927759472401342508292147770"), new BigInteger("-175628218131918609874645624630607122721"))).toString());
        assertEquals("52399421715136325383212285542959458640879470607949414504872983789399510278321/2486232062468853365235898970882882628935864999763586047386559569175768162120", new Rational(new BigInteger("227447791827616779811001818413504761314"), new BigInteger("-220657880963274017626361711567197400099")).subtract(new Rational(new BigInteger("249083141360677659013845398513068041259"), new BigInteger("-11267361272642051143110386411586425880"))).toString());
        assertEquals("-888146089682508471286260391415406587054769435780887713993517832944250022810/1003443104873655338146099683670612781694951703295365427830921350108117621153", new Rational(new BigInteger("217731402751426524852554605712899088505"), new BigInteger("-198054444203552231563322497024171296555")).subtract(new Rational(new BigInteger("16282670608527643784338302432120990749"), new BigInteger("-75997519942725270504769191253061061069"))).toString());
        assertEquals("387385121262045515811005099910636960807168753643279130212477824792881757043/64526469192467650692692275298359052607860244844996704369999837718232170455", new Rational(new BigInteger("319829549242414803103915833420309799152"), new BigInteger("-17653631865107172958853802497854644830")).subtract(new Rational(new BigInteger("176327050042469927334171689154001473733"), new BigInteger("-7310276965728028529551909313157628377"))).toString());
        assertEquals("-6192183953499278209558373347939504835543174518342606097270803517731400039703/8338709701062766816579865676142618394739062015140511987868119770809888211624", new Rational(new BigInteger("253248978426558027229837347135640883035"), new BigInteger("-274039104576791502912833803135460465590")).subtract(new Rational(new BigInteger("55244122544905129351631101675747781347"), new BigInteger("-304289043490363818482938342078495784536"))).toString());
        assertEquals("-211905862159762720932563304073549452274106833689738491987255744628161603321/177847602170569836886518362352487573589780063506856903391826850868438278433", new Rational(new BigInteger("334106065246707987210028362430973120300"), new BigInteger("-57164703088615448160905855597819996418")).subtract(new Rational(new BigInteger("318483489510575835322832587353857022591"), new BigInteger("-68445159973755796229434425981008681707"))).toString());
        assertEquals("69021109667678734891474350322975953244471777993314848859027584333793098353/809613125391872793565065482505886280798125927832171393071573479520197298938", new Rational(new BigInteger("198614150866942591686413968450733804525"), new BigInteger("-169181178627259646654407288708072955490")).subtract(new Rational(new BigInteger("210909865309215066830312315713693255047"), new BigInteger("-167491795592383824481860517679037530567"))).toString());
        assertEquals("-121752772058018588485972319708052784317719950006551330274270894683714752132/105048644030743041943479247367039226974219953115084695837997343871788541511", new Rational(new BigInteger("44968625732214388601010167730706121460"), new BigInteger("-24248335907148776322291325246329898220")).subtract(new Rational(new BigInteger("120520129016411606578506790846915401062"), new BigInteger("-173288005301465841559170963308088201202"))).toString());
        assertEquals("1950328931406275274076064170829109558333714008999192497746826088623203643298/2736840312774120047842187741088404832343557002739685531795253318831245149045", new Rational(new BigInteger("119796999594479191829215744000963579292"), new BigInteger("-239407078510388039885953829166450697195")).subtract(new Rational(new BigInteger("27733662037691912703197714209670531620"), new BigInteger("-22863486992974325447396375182397209662"))).toString());
        assertEquals("6362220889130422970922614103222554130302348242814866972316447395974470110541/10903189979561678400405598753154515446455737165190440853555189013370917685636", new Rational(new BigInteger("41875942262817801414973863466577256821"), new BigInteger("-153514765080976523331686873776773951532")).subtract(new Rational(new BigInteger("243270571685703863010998506155807973828"), new BigInteger("-284094887519397220938291948060496218892"))).toString());
        assertEquals("13382523392390341815577921849717480469444126897235886279089276572294425272241/4952955920050251242636051410441709415584850328114616470414229111758913546225", new Rational(new BigInteger("215486498944760974831925174418544976752"), new BigInteger("-300983108096211510616418192187267704300")).subtract(new Rational(new BigInteger("224976790211592452534992622889460887871"), new BigInteger("-65823706205691805010277508679072103043"))).toString());
        assertEquals("-3003016539494217656602283932660774435559625305352961430312078997836394554963/4898418700969933351817691090641736795645985359971348062884215056303759655217", new Rational(new BigInteger("270295191930041440414636214196868370487"), new BigInteger("-140499712876285546769440186759115157019")).subtract(new Rational(new BigInteger("319889476517049675355383865564965197434"), new BigInteger("-244049829034042401372606324844729680501"))).toString());
        assertEquals("7291949266904216180237188005974926934657794442189885171197123218553331569153/36275681729019075498781193965266762150551811725286500288851898709196210364930", new Rational(new BigInteger("165113607682320398773493890872734983368"), new BigInteger("-213618270764486377886245748369933535670")).subtract(new Rational(new BigInteger("330784346482087148755302929545810349915"), new BigInteger("-339630890178049667507670950879562888358"))).toString());
        assertEquals("6502689554841454634067800913222085960993501256553967863093964323723926096399/975498952284486552645592351299595491113614678108814661852254889724652297010", new Rational(new BigInteger("245297239526295836365264729980345424703"), new BigInteger("-81895219081605247633619782231764596554")).subtract(new Rational(new BigInteger("115080707525063997111161418009409671761"), new BigInteger("-11911549455804515396735869482245486565"))).toString());
        assertEquals("-1328307626103699472603196615140388775344787007784804741168244474127040499443/16614416209164958087933962687477192914602425706341555699630837413621048762833", new Rational(new BigInteger("47464147971117551511549608741769328480"), new BigInteger("-213897743521368589805293032919045348471")).subtract(new Rational(new BigInteger("22052124828808525455728318404365530614"), new BigInteger("-155349148949812665673857422324738776046"))).toString());
        assertEquals("-15952217172655163366417920053274562461658904948505504617715546752385668554881/795992947479752820634523607727408097979586643405621131631623040950729225305", new Rational(new BigInteger("316373687657474685068637761774035824482"), new BigInteger("-15015186012750472512204443117080070987")).subtract(new Rational(new BigInteger("109162996738539293283348463794270000254"), new BigInteger("-106025053143373389817445452975541283030"))).toString());
        assertEquals("27010048586756742321098111770822427391575566674285274751227141945870517968883/5953801942235428463237939142642722681685677344157247694990426146014501398860", new Rational(new BigInteger("82004365338765337957195009674590477863"), new BigInteger("-295121294585886494520876302566228620879")).subtract(new Rational(new BigInteger("291382683429658093018515650948739495571"), new BigInteger("-60522253576345170136606193848337101020"))).toString());
        assertEquals("5694774001463087776546280089881595638741547874339626642478077104932506777935/4734010583711496317607445914000527707584178673050035519018084752573697528821", new Rational(new BigInteger("247697193656409983986522596607609598928"), new BigInteger("-250991965412278681227660100159876222626")).subtract(new Rational(new BigInteger("247816089418317672439440094636922125813"), new BigInteger("-113167222128455565533053383738191381551"))).toString());
        assertEquals("-375058320351826959350248608915055567845735391455062830269109354151567307710/51888891626494504303909823995926762015504731704738942892810883442851106811", new Rational(new BigInteger("174492578532529684628376444357303132904"), new BigInteger("-23340375531602657915882547876212376659")).subtract(new Rational(new BigInteger("46292397212098532489267472438051877656"), new BigInteger("-186743649035292628565570519734214163636"))).toString());
        assertEquals("29808652747754869143134932844660761221511105020333516548173707675393081640087/1629733322067351252566369317297146183192878105783170996399398680794097434152", new Rational(new BigInteger("248190425064803299706155870315880688623"), new BigInteger("-150551534660146875959087844542084560791")).subtract(new Rational(new BigInteger("215841941010398038468172202830467142873"), new BigInteger("-10825086079303612378508736780001589272"))).toString());
        assertEquals("-12215414604400065920309117566870150961892360633816931455021491314992047378836/4485722845504030736873159459905101837483733722727429242470191872097799947919", new Rational(new BigInteger("201343223617460576983691028374146119700"), new BigInteger("-72421290882118641362378795137023672035")).subtract(new Rational(new BigInteger("17649529586074187812425160379773926192"), new BigInteger("-309696415989430345371801808439021409017"))).toString());
        assertEquals("-1299178773038339215099934060071896408770051023158712049955152779851618623280/506528465324818210182609228813602757933758931758379001983464762709865593067", new Rational(new BigInteger("175568156062395696480414085408312982801"), new BigInteger("-48437180842891309431566667862028362244")).subtract(new Rational(new BigInteger("177322645104320344235702640715810201307"), new BigInteger("-167318892308872051016539266779498818988"))).toString());
        assertEquals("23216096179087667776623966852631242462640817707354732212298954499384657249090/32792683008023231845070150113257712947294005052029707838237036256312463434903", new Rational(new BigInteger("110495135436490841838496119149645860091"), new BigInteger("-170250094816976151117886487797821519867")).subtract(new Rational(new BigInteger("261374840490025866679533655730876026427"), new BigInteger("-192614770894996144147930375114196588309"))).toString());
        assertEquals("-2035496711744094515456354967591963904501933930148068912494128828412901071671/2734523786081918247962971571573327197216978898425378736036667347280205762574", new Rational(new BigInteger("215957221682698113719773737051528868230"), new BigInteger("-87369729467320343653162279211182304185")).subtract(new Rational(new BigInteger("270322266666681435827024367455870984633"), new BigInteger("-156491487541158969410170483372422115702"))).toString());
        assertEquals("-5625082491154326240009906211851520076511312640834781990330610153300665198657/3824433034311811700749437638586184136985586662413050446160565946773716754630", new Rational(new BigInteger("325538106639922290076640466761133623982"), new BigInteger("-136997621249484837367573783843853187498")).subtract(new Rational(new BigInteger("151651843596750381605521183232000994711"), new BigInteger("-167496325823665774434967896932915673610"))).toString());
        assertEquals("16246840175052434592680381042016184282106143498465221826159938212939311477587/29402829767705404671794057451474448262679358614966521163998596947047657923325", new Rational(new BigInteger("1590041786942760021496114200296869443"), new BigInteger("-224939105422871997063587960865871352383")).subtract(new Rational(new BigInteger("146303434902018624916645408356445990728"), new BigInteger("-261429240704321750707304260518481692550"))).toString());
        assertEquals("-95258442279316126825250310179552538286574503951838202420396942922549448711135/99631567373763756309977392825055952627432674947698936462929148341387671604809", new Rational(new BigInteger("295909474436035269322988604249936885465"), new BigInteger("-302108517898857407236355366620801434473")).subtract(new Rational(new BigInteger("7708352606927073270983882087280717770"), new BigInteger("-329787349481881553227920206287274686433"))).toString());
        assertEquals("-21905183146027962214899304508621523026168139259094555697614602424417391724641/11207567024655577776102400211715731986317495606630051490722101791706384604265", new Rational(new BigInteger("333657987255186669655497399223868400957"), new BigInteger("-113264217122854679489251331166443944605")).subtract(new Rational(new BigInteger("294280645459513846513121766745646571736"), new BigInteger("-296851926654797649140728102723078781879"))).toString());
        assertEquals("-3403425467387263602407318423391902189466858061854524776321544048900851558587/8125337088818780414274351993807121941604074435820447872293750324057034260090", new Rational(new BigInteger("84560315507117922487330727964556589011"), new BigInteger("-191595498455063534546244077251313525870")).subtract(new Rational(new BigInteger("4767254112879536455761025265909219185"), new BigInteger("-212044049947355168140892312623924408535"))).toString());
        assertEquals("-27193210584430294853508960873867451260107939364790648758431515752864127239537/20221112892604498253655435587388191828035710061427454668404034693232962564357", new Rational(new BigInteger("300175443465120455212099119430545415694"), new BigInteger("-176843968741217069470205170070743035458")).subtract(new Rational(new BigInteger("80637893670917974179428734315758894866"), new BigInteger("-228688747900640823483373462705823461733"))).toString());
        assertEquals("11259053222466414756599373965390808528328333985625370649735205390702358249407/2279957505087278245422335407500981158917900310794118230634746772689332466150", new Rational(new BigInteger("97084302776163813316193668069938555401"), new BigInteger("-334751545657238872442637297658577973483")).subtract(new Rational(new BigInteger("320484129208396458144960431753856171611"), new BigInteger("-61298051680382959366044491230674816450"))).toString());
        assertEquals("28762801484463532687425568331950709239533101221946161331725119503447176385541/1965719485121536686461163211232842041367035843903429724369045501119799048990", new Rational(new BigInteger("268688963147624517077422435236821828263"), new BigInteger("-137867010861344274094033393681900534642")).subtract(new Rational(new BigInteger("236414724674761386193165284248464520803"), new BigInteger("-14258084460092499846129765846357449095"))).toString());
        assertEquals("-11630009473166928242380603030120901269985093465537092532330568344499940688863/18185631944263093773753555142917174355707959172047913273903841130041035473826", new Rational(new BigInteger("260469684491564500740085530166473838298"), new BigInteger("-112661314147494601734579910858535471891")).subtract(new Rational(new BigInteger("269965279182814462198682508134463400015"), new BigInteger("-161418603021572437975776414187631243286"))).toString());
        assertEquals("-3026749109046976428540836063829004120165335588257549051503322922171007465321/47612826397944958729091194293346730930489376593170205463321231289515151999176", new Rational(new BigInteger("233082024734607952222791883883616264764"), new BigInteger("-315401202241045287439038311053441077231")).subtract(new Rational(new BigInteger("101962866111140690404212629215402421433"), new BigInteger("-150959558998626988233851719716790535096"))).toString());
        assertEquals("1092937341467375302124456459352140605057688523815375356980975996225394920615/3252863549922557125973040270875568772032850335992493703985239073007716935912", new Rational(new BigInteger("121200885694349009307158918891899501591"), new BigInteger("-166931992490695126113398297399435355053")).subtract(new Rational(new BigInteger("331121881787677868296677866376174547888"), new BigInteger("-311778563367126731134210933579856910464"))).toString());
        assertEquals("-2634277765804090183587400809640993280765723785699952763705224146085210912693/653924607727335858807020358542380577301944977960774246045491067496024611274", new Rational(new BigInteger("92499057423655115671059323332263918322"), new BigInteger("-20251406465095294460184555801292118086")).subtract(new Rational(new BigInteger("139268299967922876148416674821280185740"), new BigInteger("-258322643952426844618530999592233958072"))).toString());
        assertEquals("-1292121244610726466020435877926117433431464966193612536845317969322354322223/582376894708714082190187757199005672219701093724099206714886313068914467690", new Rational(new BigInteger("57061929511566900831211898515781669436"), new BigInteger("-21053631997906099065526846160068436395")).subtract(new Rational(new BigInteger("135987150031901052740379141441763354222"), new BigInteger("-276615880227523074023541502725525146220"))).toString());
        assertEquals("2115294512203259720545910488240825865563215352017088449029844958495192013263/6656619759676005936726631804553771188764120443081164622378878876945820994937", new Rational(new BigInteger("117844648091347416046175695130151441251"), new BigInteger("-320583637902312216324979864184869292866")).subtract(new Rational(new BigInteger("170772104481488596779162891532934083515"), new BigInteger("-249168789894551069030244861604575917334"))).toString());
        assertEquals("-631497757927015169214348578732012142111433007206816119779997684454905929986/7372921982814463166180341541239833450170523787297269104070481919836119799405", new Rational(new BigInteger("64155134194895888785792865659307846513"), new BigInteger("-325618847738469416077088800722770992121")).subtract(new Rational(new BigInteger("5043651675259709824000859390004678198"), new BigInteger("-45285597157669739683815163568837805610"))).toString());
        assertEquals("110210998345719470281994482939645428971305832220434426135795294653035820341/430525644727957880767513672419593212652475614089206760929631735607588430008", new Rational(new BigInteger("172680177835311710275617888434624713977"), new BigInteger("-170232848272762964688034385791959988312")).subtract(new Rational(new BigInteger("77107473783411082252436999198073193218"), new BigInteger("-60696954661271412421395486244427210616"))).toString());
        assertEquals("-29759677454472332180879298430334564378312897332692495233282627672326582684532/2584980427575524371265284144774750272436462831368120597020001363814316652737", new Rational(new BigInteger("308655646644218723921598815171509329752"), new BigInteger("-24934408659470503824356478235664286293")).subtract(new Rational(new BigInteger("269390180500357259150243746961606174556"), new BigInteger("-311013643380755180441440652136175043127"))).toString());
        assertEquals("-13101363610065347413807088654244551102647259398550634573676370216068461111523/23564241656587677550573278436006816218647296773538028652429656173097793762890", new Rational(new BigInteger("312286355519886055498504223603754205208"), new BigInteger("-208784915521547408255697997796599882478")).subtract(new Rational(new BigInteger("212126774032103612864929163595921299203"), new BigInteger("-225727434357256110863715576606520229510"))).toString());
        assertEquals("-4335040345683055476990743109165077017367274769052198937857996949486421549251/172861958208606399460893875743067589338050570237661750152696503333215719528", new Rational(new BigInteger("219164591960640312542149798618251594375"), new BigInteger("-8524948482416060132482124481857837960")).subtract(new Rational(new BigInteger("191791157853295778808693712718502345591"), new BigInteger("-304157776258400627274062815242227155827"))).toString());
        assertEquals("527009530615913806898348148228993834506188005596378285367903542326932106781/425550799814514373239408893168991733906105101464477789029063748817993924885", new Rational(new BigInteger("2152267603798946051898776469087993263"), new BigInteger("-89996956465988343416545260071103408870")).subtract(new Rational(new BigInteger("334260701741511326354724454430582574734"), new BigInteger("-264796118951188750075191279306627609988"))).toString());
        assertEquals("2013659294032266737549472948758859469766195321298746099897167904353386087979/17777424294981043442251727440447567558033266311229859344066576527398120251728", new Rational(new BigInteger("209853743913271538862054995219305319225"), new BigInteger("-285147714924907528422007841227179438352")).subtract(new Rational(new BigInteger("211776692847578381581679722848190685858"), new BigInteger("-249378457052165466124672201062438587156"))).toString());
        assertEquals("119019213795401167569707602015286805055827282966083009719780959003109250061/607603278333171523143493381837742117300916227967379978951740131490396817441", new Rational(new BigInteger("57306558212221347521218957875930656612"), new BigInteger("-59404773995926787413676407955011413236")).subtract(new Rational(new BigInteger("142445429140869879822622772510157319686"), new BigInteger("-122738272524999377225041933054283465247"))).toString());
        assertEquals("-7941225695481465707609848754883815624182992698931545443940989053616526313061/12415682315752950486700623031301114503540367660779769133607439391611500646368", new Rational(new BigInteger("279865532063345335955207121499577979570"), new BigInteger("-94563417933721991023641180333614218213")).subtract(new Rational(new BigInteger("304596173826193040615335862574578190143"), new BigInteger("-131294771139246537247803182398359523936"))).toString());
        assertEquals("-71205768806567223062922072801231806119754025680359558608875471263915123646286/28321976655474710509629751707536318063623605995114421361165324638782381437739", new Rational(new BigInteger("274981216375931084211950194399333684579"), new BigInteger("-94357279165412610160096570209785152411")).subtract(new Rational(new BigInteger("120093611358288534359491024335225347135"), new BigInteger("-300156775460057456972064939721720393649"))).toString());
        assertEquals("30164016341174424334022835462819456926806247165859118952734708865361204172810/7617065600866876287152522981784878480240513905023695211298764418679645438281", new Rational(new BigInteger("10516707605241073172284126782067199538"), new BigInteger("-91342542992439194022523498909562917831")).subtract(new Rational(new BigInteger("339830760466167353792119566401498844808"), new BigInteger("-83390119776908037290184165988385251951"))).toString());
        assertEquals("-372437892097269969689001402074382571670619685827414867258488060572226581351/8705582965736006568702571259205884218023646706461613830081034401358468240340", new Rational(new BigInteger("50844390515887929991085432696644229707"), new BigInteger("-203566210879340321544597309626535041283")).subtract(new Rational(new BigInteger("26555599764322356469074135446386549069"), new BigInteger("-128296089927655944157962972607246505940"))).toString());
        assertEquals("-1120078600609641981760303173302528610629522943686622973600132134507823604171/1404014181031283875937578179930280994871040946784633573797515616067274556810", new Rational(new BigInteger("338827102835309108810176508994398541814"), new BigInteger("-156421326980132731150728024714219403940")).subtract(new Rational(new BigInteger("49128396567317372792612544837828745444"), new BigInteger("-35903395224606667026160959176521965946"))).toString());
        assertEquals("1658431237549532390701382055669823475240501783644921762799126964070691064531/900322580838192591105023230819232929239290410507094424327219150225956800480", new Rational(new BigInteger("3974769267821720143406233337636145042"), new BigInteger("-311842399990166204385954641115083775040")).subtract(new Rational(new BigInteger("171359053100233417746903373898141164653"), new BigInteger("-92387445029061738131441995702554950384"))).toString());
        assertEquals("105629663091473422888024741448548238555479845612872823564126787776561337059/139263943692735228887203632575883495463041422049823516353939118772570658976", new Rational(new BigInteger("27404040310406085774515998227514596511"), new BigInteger("-107513315704877428208839434335954524882")).subtract(new Rational(new BigInteger("338661920921145329482697948589872509083"), new BigInteger("-334192069486102652362125892151542640544"))).toString());
        assertEquals("21275206463521099294341474442141171983942777258676795845936125104206052739127/84751549146718032771060705343869795839318614599799151027480787411666478444879", new Rational(new BigInteger("294479464907745878637926418360912003446"), new BigInteger("-335526038002731428860404441519166269943")).subtract(new Rational(new BigInteger("285100603870182641422656307803321490955"), new BigInteger("-252593061484033298163838191426880085353"))).toString());
        assertEquals("4929156651178929801296268453267528970093385698318977701242620189812043163138/1505992347320958157454326281530202034346493107846173776912208958564810345295", new Rational(new BigInteger("167119916233834944551752404102459911314"), new BigInteger("-227866675422625166320019950349012533890")).subtract(new Rational(new BigInteger("317747275347454058247637074633055494454"), new BigInteger("-79309131685594055910682697705795556186"))).toString());
        assertEquals("-25960064926301926024398560396604714406314313813023736506144682728282176250773/95807954772133222624769328899383246934611856017606964386682845998552159003942", new Rational(new BigInteger("260007410729650518649404521598336731197"), new BigInteger("-291856224466939262855345429573924588959")).subtract(new Rational(new BigInteger("203500356469819554893239823355353437507"), new BigInteger("-328271068904292312415659737512085216538"))).toString());
        assertEquals("60109539923274729919934396015885194239716743205698460113497819992620511438/316911626677864655201865055232003503118458270008489918467392811066280530985", new Rational(new BigInteger("41653171727551790514114354966102613625"), new BigInteger("-157011068206554011819000426320961637438")).subtract(new Rational(new BigInteger("44078145310961776677410522337028351548"), new BigInteger("-96883348761922051790993070914849419560"))).toString());
        assertEquals("64857081218669817467267933532284890472361317149222005038000219591376545868921/13436346418805247949073993819572124178794375533299760156613944312721137509950", new Rational(new BigInteger("289331407015166109625453897261995661789"), new BigInteger("-254922300721196247313337106470358530450")).subtract(new Rational(new BigInteger("314241042582163778501145533852598966338"), new BigInteger("-52707614754741793805866082239680441511"))).toString());
        assertEquals("-4028931549032306034077348137313228426227116969064745454118384759163554209370/7553932559058630606195640180358561761992193090573215790907147656105121095581", new Rational(new BigInteger("29099632620024939853811934534598874756"), new BigInteger("-46681909039734012479038207050235440613")).subtract(new Rational(new BigInteger("14564260741148372201833246547801449154"), new BigInteger("-161817130328345970821522946996006293337"))).toString());
        assertEquals("35399640963601378215227103733248584962866512388998331675331497265346790045454/31057051864732434714720217938983533544919857961188036092283989694293172142377", new Rational(new BigInteger("152332144339811794692497376138273847742"), new BigInteger("-224279126658472397651967409431935764063")).subtract(new Rational(new BigInteger("251890737035545218116596145615629629344"), new BigInteger("-138474999111377266714502769697980437879"))).toString());
        assertEquals("-968015457572612988280829598884630175276071225291366397288330612713884760501/5448861829735944834940812885535588924403824211112980389269596804562467114140", new Rational(new BigInteger("309656218217229325836652144022256925371"), new BigInteger("-313380363500617136836887762152681069092")).subtract(new Rational(new BigInteger("98642596783410246653240803281342059224"), new BigInteger("-121711623479167038231670449791896949065"))).toString());
        assertEquals("43111022434073431576240936047506705236634679714011858739281423243917927462272/20662359216159418944564869229168018323692028340457379634357531249955560587765", new Rational(new BigInteger("147048063795955601988558257136162604617"), new BigInteger("-193487991751260990391282444837008214135")).subtract(new Rational(new BigInteger("303967780306743569242789995360192845901"), new BigInteger("-106788845287732225567227694917377789939"))).toString());
        assertEquals("4533824547758735621472904284419199554326950495352519434685189571172720709861/5280596768440768277718731447383149439174795934107448454689871654921346753638", new Rational(new BigInteger("219898233387871957785550602087886594332"), new BigInteger("-249456736983840557564738244198347334999")).subtract(new Rational(new BigInteger("110504718152467204052121097157847264865"), new BigInteger("-63505161243043569637508618555745549086"))).toString());
        assertEquals("-7627114208661196574642493391445886201247503089535378942199045514642379762549/3794416606463147200809732566915105985646037747146818647000729994119182465780", new Rational(new BigInteger("298593847118573848922291380767370184073"), new BigInteger("-132964396995466289096799308742917625335")).subtract(new Rational(new BigInteger("73950090955518214174719954922391572779"), new BigInteger("-313907960433331541763959149416236264548"))).toString());
        assertEquals("2986083170168823608315812272342308628304914334991019482089054600199567322071/2735753350606465398098980337620650888629076266789278029281942820363282464892", new Rational(new BigInteger("248558290149999745771863825357637883507"), new BigInteger("-335894445710887812795797700915529663422")).subtract(new Rational(new BigInteger("208836911521910231202979157773614699701"), new BigInteger("-114025544028961675671016913343643013404"))).toString());
        assertEquals("-657343803148823384984946129079333383867112942902280741435644037201743240495/10047096790116291813381061957751647653592661156632268961426037483825292919778", new Rational(new BigInteger("107725135192356008674583555168609589576"), new BigInteger("-148652090405832635895953249424182063468")).subtract(new Rational(new BigInteger("178230446988085262138368080436036613703"), new BigInteger("-270351981265433335494173454053263300934"))).toString());
    }

    @Test
    public void testMultiply() {

        assertThrows(NullPointerException.class, () -> {
            Rational rational = new Rational(1, 2).multiply(null);
        });

        assertEquals("1", new Rational(1, 2).multiply(new Rational(2, 1)).toString());
        assertEquals("0", new Rational(1231411, 21112341).multiply(new Rational(0, 1)).toString());

        assertEquals("1083323472364435569/193342153841288746", new Rational(1017284018L, -975518147L).multiply(new Rational(2129834841L, -396388636L)).toString());
        assertEquals("535076379872998978/55448105266073375", new Rational(1740235273L, -191752185L).multiply(new Rational(922420758L, -867496325L)).toString());
        assertEquals("198509954070856597/142538246449437777", new Rational(1489742566L, -496637049L).multiply(new Rational(1865516513L, -4018096222L)).toString());
        assertEquals("10224110465836416/661620465822137585", new Rational(21832128L, -417271609L).multiply(new Rational(468305722L, -1585587065L)).toString());
        assertEquals("128514071635190776/380893725418010217", new Rational(1096011428L, -979365303L).multiply(new Rational(1055305278L, -3500270551L)).toString());
        assertEquals("2435169057806575135/214338840137076342", new Rational(1998803467L, -539624742L).multiply(new Rational(1218313405L, -397199801L)).toString());
        assertEquals("166614872772626766/843187620762251815", new Rational(2014881471L, -1837674142L).multiply(new Rational(330768584L, -1835336530L)).toString());
        assertEquals("2132698376050974251/1595977486943470400", new Rational(1146765061L, -2359379650L).multiply(new Rational(1859751791L, -676439456L)).toString());
        assertEquals("36807629850841892/81256237278700315", new Rational(1357786878L, -3049331365L).multiply(new Rational(894582062L, -879358623L)).toString());
        assertEquals("1256991335067292624/2447621558690188425", new Rational(2104675576L, -1413421365L).multiply(new Rational(597237574L, -1731699845L)).toString());
        assertEquals("52425899344363926/498361709295965837", new Rational(715247626L, -3407999768L).multiply(new Rational(1172760816L, -2339726494L)).toString());
        assertEquals("60716606077901980/11193591819869903", new Rational(1897690230L, -1697694483L).multiply(new Rational(1727730204L, -356044014L)).toString());
        assertEquals("682160089440373551/1475151167783181205", new Rational(2057610627L, -2757730165L).multiply(new Rational(1657651065L, -2674574885L)).toString());
        assertEquals("212562490597774749/1049697929791907290", new Rational(209693217L, -990353570L).multiply(new Rational(2027366394L, -2119844794L)).toString());
        assertEquals("21995918093698889/318964770759103280", new Rational(406063116L, -3199919128L).multiply(new Rational(1950073819L, -3588444360L)).toString());
        assertEquals("37159578075222051/1003670109976651370", new Rational(1609626136L, -1894774970L).multiply(new Rational(184686753L, -4237632968L)).toString());
        assertEquals("848953293282812692/6481018576013424709", new Rational(536778674L, -3730086221L).multiply(new Rational(1581570458L, -1737498329L)).toString());
        assertEquals("122276773976572731/421719613927791034", new Rational(788673636L, -1804166003L).multiply(new Rational(1860492377L, -2804972136L)).toString());
        assertEquals("143788064765148/921082772269439", new Rational(719066520L, -1819473236L).multiply(new Rational(1147798526L, -2905794385L)).toString());
        assertEquals("3860024864239995859/8202154309809129628", new Rational(2030826221L, -2080652294L).multiply(new Rational(1900716479L, -3942107162L)).toString());
        assertEquals("300312271138357661/13767038709918085", new Rational(2010341786L, -997322783L).multiply(new Rational(1792604262L, -165647940L)).toString());
        assertEquals("36572361101472825/46694801267129417", new Rational(938551800L, -271763728L).multiply(new Rational(623468814L, -2749141049L)).toString());
        assertEquals("475327826400803281/505125749839693360", new Rational(871477822L, -453990880L).multiply(new Rational(1090854671L, -2225268269L)).toString());
        assertEquals("434252859052383257/929187658005804665", new Rational(1531286035L, -1596833825L).multiply(new Rational(1417935151L, -2909468861L)).toString());
        assertEquals("79211780319983927/298360536030296973", new Rational(1000076722L, -1595009671L).multiply(new Rational(1267291256L, -2992940208L)).toString());
        assertEquals("105162822743068279/357013396449832056", new Rational(358864156L, -1285234577L).multiply(new Rational(1172174161L, -1111122912L)).toString());
        assertEquals("67833105803685038/52762416174311925", new Rational(1983837117L, -904689711L).multiply(new Rational(307735926L, -524889075L)).toString());
        assertEquals("9164389884316264/342692704386459091", new Rational(1073437612L, -2021302921L).multiply(new Rational(93911642L, -1864945481L)).toString());
        assertEquals("87457127879590889/363366336901740633", new Rational(554339758L, -2750685363L).multiply(new Rational(946608573L, -792601746L)).toString());
        assertEquals("543796034901189245/1771188890890110957", new Rational(1304125814L, -3606243918L).multiply(new Rational(833962535L, -982290123L)).toString());
        assertEquals("5604816928211771/522901223691757560", new Rational(449119383L, -938086749L).multiply(new Rational(37438711L, -1672237320L)).toString());
        assertEquals("85998970280328817/10528165291932736044", new Rational(1827492197L, -3367774281L).multiply(new Rational(47058461L, -3126149324L)).toString());
        assertEquals("296387507898815904/66840164022295417", new Rational(2112717366L, -257621110L).multiply(new Rational(1402873440L, -2594514247L)).toString());
        assertEquals("216020369165710347/220735147169911690", new Rational(1068560668L, -446410915L).multiply(new Rational(808640541L, -1977865144L)).toString());
        assertEquals("61352591677851232/263684050238842945", new Rational(566797352L, -1494431071L).multiply(new Rational(1515420424L, -2470222130L)).toString());
        assertEquals("1163195437741350465/645859004568139936", new Rational(1674623785L, -1174475717L).multiply(new Rational(694601049L, -549912608L)).toString());
        assertEquals("665095249090739261/604450393539879549", new Rational(1501287962L, -1928785092L).multiply(new Rational(1772065762L, -1253536013L)).toString());
        assertEquals("78106698105833532/293648832363892031", new Rational(154611861L, -4238834119L).multiply(new Rational(505179212L, -69275849L)).toString());
        assertEquals("1593761749861237/53492943144530880", new Rational(241233397L, -3743244480L).multiply(new Rational(1519545830L, -3286821630L)).toString());
        assertEquals("110075594725232864/885372081391201899", new Rational(494652032L, -2668432668L).multiply(new Rational(1780250966L, -2654358394L)).toString());
        assertEquals("7413573733779500/68899289593495517", new Rational(353023118L, -4198018737L).multiply(new Rational(2079024750L, -1624821159L)).toString());
        assertEquals("46028822643377127/277502714962412170", new Rational(105002934L, -3502439270L).multiply(new Rational(876714981L, -158462542L)).toString());
        assertEquals("565749038948150380/3178924303558916633", new Rational(1539558716L, -2263051299L).multiply(new Rational(1102424415L, -4214121401L)).toString());
        assertEquals("1601477297791206736/953180428853231127", new Rational(1155735103L, -3102134613L).multiply(new Rational(1385678512L, -307265979L)).toString());
        assertEquals("4246632600416559/51162601510150016", new Rational(60289235L, -400054972L).multiply(new Rational(2113129782L, -3836667840L)).toString());
        assertEquals("62441855921653039/313694154481652241", new Rational(1309119149L, -1947990290L).multiply(new Rational(476976110L, -1610347629L)).toString());
        assertEquals("1390960165825072600/1188199396184376279", new Rational(2079531550L, -1731313221L).multiply(new Rational(1337762984L, -1372598998L)).toString());
        assertEquals("91018389949562588/137530233532348891", new Rational(693791330L, -919429426L).multiply(new Rational(1311898636L, -1495821535L)).toString());
        assertEquals("168597249022898991/3771387696420808225", new Rational(96933663L, -1260232439L).multiply(new Rational(1739305457L, -2992612775L)).toString());
        assertEquals("139824581154831233/7017628496588321508", new Rational(145018763L, -3465260409L).multiply(new Rational(964182691L, -2025137412L)).toString());
        assertEquals("2080007066523495125/7625833872896344924", new Rational(2115458717L, -4014109976L).multiply(new Rational(1966483250L, -3799514173L)).toString());
        assertEquals("506893648413960039/40145643350160032", new Rational(1640169955L, -128965960L).multiply(new Rational(1545247329L, -1556443396L)).toString());
        assertEquals("854204079168812097/1828671308767380521", new Rational(2005794846L, -2307378938L).multiply(new Rational(851736239L, -1585063709L)).toString());
        assertEquals("33039181606240285/4875394043850141198", new Rational(61910909L, -3328550826L).multiply(new Rational(533656865L, -1464719723L)).toString());
        assertEquals("2587081636892145096/4601085519380369785", new Rational(1527921747L, -1559752835L).multiply(new Rational(1693202968L, -2949881171L)).toString());
        assertEquals("14451518227866960/2391901896156562361", new Rational(1088240990L, -3661586357L).multiply(new Rational(13279704L, -653241973L)).toString());
        assertEquals("242835799207337904/293140900194169675", new Rational(1685360532L, -522908095L).multiply(new Rational(432256116L, -1681792095L)).toString());
        assertEquals("262475641390141943/1297921727273568978", new Rational(1398077452L, -3619267792L).multiply(new Rational(1501923322L, -2868915597L)).toString());
        assertEquals("86418419345346/4508598601805621", new Rational(139128506L, -4288836195L).multiply(new Rational(1760934735L, -2980267013L)).toString());
        assertEquals("18916730320764964/7769521332681459225", new Rational(648128617L, -3266356065L).multiply(new Rational(29186692L, -2378651065L)).toString());
        assertEquals("1429164584256452381/284649028017977088", new Rational(1058603533L, -3926464768L).multiply(new Rational(1350047057L, -72494991L)).toString());
        assertEquals("1062772819638554860/5348109130268029517", new Rational(663947020L, -3345787789L).multiply(new Rational(1600689193L, -1598460353L)).toString());
        assertEquals("15971782887491777/130720865143913904", new Rational(1437485935L, -1170049756L).multiply(new Rational(388881997L, -3910286940L)).toString());
        assertEquals("14064889513174568/400125993290175665", new Rational(161170499L, -3592133945L).multiply(new Rational(1832610072L, -2339179437L)).toString());
        assertEquals("319807300423629512/1791417438722510277", new Rational(909102038L, -1578411958L).multiply(new Rational(703567448L, -2269898463L)).toString());
        assertEquals("67814511426757161/1090595566803245038", new Rational(774673496L, -2182753186L).multiply(new Rational(700315803L, -3997137464L)).toString());
        assertEquals("1940194993056988521/396049875963540695", new Rational(2099971167L, -119768857L).multiply(new Rational(923915063L, -3306785135L)).toString());
        assertEquals("378830339710794993/1464827047281517945", new Rational(1549883063L, -4220551031L).multiply(new Rational(244425111L, -347070095L)).toString());
        assertEquals("37254467280409088/125613435363825717", new Rational(292450240L, -4208408639L).multiply(new Rational(1273873712L, -298482030L)).toString());
        assertEquals("309817847836704253/3720196317127974780", new Rational(1627720673L, -2830412070L).multiply(new Rational(571015383L, -3943096862L)).toString());
        assertEquals("395025430954555569/4597079814344456753", new Rational(1201075309L, -4046547441L).multiply(new Rational(986679423L, -3408149699L)).toString());
        assertEquals("4937888998180045/364221279517685128", new Rational(39355570L, -4034981104L).multiply(new Rational(1254686185L, -902659195L)).toString());
        assertEquals("16561150130635291/33512025506756115", new Rational(1645472481L, -2842573245L).multiply(new Rational(332134363L, -389047791L)).toString());
        assertEquals("215908727477890048/1510303226617400725", new Rational(1110086656L, -3576284091L).multiply(new Rational(1750474647L, -3800796775L)).toString());
        assertEquals("358938979584940096/463245016296959877", new Rational(1190208408L, -2159460477L).multiply(new Rational(904729736L, -643556603L)).toString());
        assertEquals("9359368222176044/13769732986228635", new Rational(1207622512L, -834472080L).multiply(new Rational(1488046704L, -3168217124L)).toString());
        assertEquals("611773952123710201/334273826561939388", new Rational(2102325169L, -944321812L).multiply(new Rational(2036991103L, -2477880693L)).toString());
        assertEquals("25933056924702145/217003498426819497", new Rational(170285124L, -768860674L).multiply(new Rational(1827503635L, -3386884086L)).toString());
        assertEquals("57295169823600847/2308143930127040655", new Rational(888135146L, -4235118823L).multiply(new Rational(387070617L, -3270005910L)).toString());
        assertEquals("180219663812933567/3276174457020091120", new Rational(299687039L, -2678627120L).multiply(new Rational(601359553L, -1223079701L)).toString());
        assertEquals("152599539252258325/1808216377045892688", new Rational(546501775L, -3885388116L).multiply(new Rational(1675378338L, -2792333208L)).toString());
        assertEquals("46646545094266872/2197288748405196593", new Rational(437594358L, -2125731139L).multiply(new Rational(426390736L, -4134650348L)).toString());
        assertEquals("232917130609845211/1733970145179622362", new Rational(1813643263L, -4247044114L).multiply(new Rational(1284249970L, -4082769330L)).toString());
        assertEquals("3740538976461998/486224084565710943", new Rational(908499792L, -4254916086L).multiply(new Rational(98814481L, -2742563612L)).toString());
        assertEquals("1332611891791893641/1099116280190668691", new Rational(1945285773L, -3232862927L).multiply(new Rational(2055140551L, -1019946999L)).toString());
        assertEquals("97495156272886189/1523133527126578050", new Rational(2004467909L, -769205134L).multiply(new Rational(97277842L, -3960279150L)).toString());
        assertEquals("105804841251052859/8750330432462093667", new Rational(1261186739L, -2672093967L).multiply(new Rational(83893081L, -3274709101L)).toString());
        assertEquals("35374836021961271/20393649211773716", new Rational(1640359781L, -390797599L).multiply(new Rational(992003386L, -2400495464L)).toString());
        assertEquals("356024056278472907/6726347937567255151", new Rational(1566430627L, -3841447841L).multiply(new Rational(454567282L, -3501985822L)).toString());
        assertEquals("166660435728177110/2002479907851934203", new Rational(472525580L, -1282092042L).multiply(new Rational(705402809L, -3123769343L)).toString());
        assertEquals("782046582215731153/247475737672385114", new Rational(986253514L, -529314263L).multiply(new Rational(1585893629L, -935080556L)).toString());
        assertEquals("21424019350071195/978904158537296704", new Rational(947212110L, -3727638069L).multiply(new Rational(271415694L, -3151284992L)).toString());
        assertEquals("20540957900756176/7767869782313543523", new Rational(26904632L, -3835653538L).multiply(new Rational(1526945836L, -4050350067L)).toString());
        assertEquals("415264909573721663/407021234476534260", new Rational(1649143999L, -659431484L).multiply(new Rational(1510838022L, -3703383090L)).toString());
        assertEquals("966569347229850781/466418723284678230", new Rational(2074679588L, -954835485L).multiply(new Rational(1863553973L, -1953922872L)).toString());
        assertEquals("118896272659353867/629535017380396078", new Rational(467339919L, -1399767726L).multiply(new Rational(763232079L, -1349227459L)).toString());
        assertEquals("9647769519260645/5012473686363748", new Rational(656408305L, -89979016L).multiply(new Rational(617308338L, -2339699901L)).toString());
        assertEquals("153918984052556679/126049435024271162", new Rational(786509463L, -2664712629L).multiply(new Rational(1761289497L, -425728802L)).toString());
        assertEquals("965548281140544825/8525711039879028352", new Rational(616679705L, -2110199708L).multiply(new Rational(1565720865L, -4040238944L)).toString());
        assertEquals("351751970847462372/251473989553851905", new Rational(2134995043L, -3375765669L).multiply(new Rational(988532424L, -446963470L)).toString());

        assertEquals("13912826794627771132624644851447880186683577907358298775740839595783833630056/1752525109744346193674664153626432833140789673763791870132552928743492129829", new Rational(new BigInteger("249066438245509992859427758267206715658"), new BigInteger("-12451688685433750017856020086446287578")).multiply(new Rational(new BigInteger("111719803700839107260206650714982101064"), new BigInteger("-281491957278772525451501414644903198361"))).toString());
        assertEquals("4897532997247648692438746595442118883596696590216695088316355241839194748741/27828608637871690967736754601626351826275400381672955894271917233379351891920", new Rational(new BigInteger("280896616390060641087105265829634692229"), new BigInteger("-319017377399421462101716096567739551786")).multiply(new Rational(new BigInteger("17435357749011835269942025723441492929"), new BigInteger("-87232265730243440147517407984817371720"))).toString());
        assertEquals("6361344905208585637705129526876265364154235262418153197471608672250011231909/5464898140161788352353276837700953045044511729365061725409339873261479579270", new Rational(new BigInteger("172053893673009476445657434096262727563"), new BigInteger("-157417010433418052817326666907049112910")).multiply(new Rational(new BigInteger("332756806164965920524293731606687028487"), new BigInteger("-312444526331919256724334292516040048173"))).toString());
        assertEquals("18053451654621964054077509776189935762022544350356962836799983001581095293158/144846810440527408041473087424514464184720334236586172707232123171916725021", new Rational(new BigInteger("306112177183705985576574582266386403597"), new BigInteger("-179267125965995639753689622324439629185")).multiply(new Rational(new BigInteger("294882938351511770963645120721451662070"), new BigInteger("-4039971346112915768200358684913865233"))).toString());
        assertEquals("15040263508053602909404533740495456640631555401907101204322879885236459458403/3748053353243219153502956885310146321817509794682822377378252148401965472340", new Rational(new BigInteger("148858289115686665397775093278625401277"), new BigInteger("-174117523654340694887366456925936989804")).multiply(new Rational(new BigInteger("303112381528815960449247979209339895517"), new BigInteger("-64577992058120705420139338460156217005"))).toString());
        assertEquals("2695629201781406978354692748108069223047409791835206519276765367172205784625/5246697360269198680613458335016905016367968141523799872493206974719895156239", new Rational(new BigInteger("17932993784007926411536030052134198325"), new BigInteger("-83714239951382552770332191824650456597")).multiply(new Rational(new BigInteger("300633484207782794154346315819687633690"), new BigInteger("-125347787026824669045065739134777671974"))).toString());
        assertEquals("2741629975421307289185772357744550486325388431488558784832825937613067466875/3742242571710036854303970649791511197554162119067540988690404460749105194787", new Rational(new BigInteger("48384439988288030688494032588706820450"), new BigInteger("-154158060477464556192915781493634210091")).multiply(new Rational(new BigInteger("339980784246127231124448433118016556225"), new BigInteger("-145652166099628357288149040483534893942"))).toString());
        assertEquals("39743702784029477120776755845347500765882848450773403120939583324381796070230/959203857784813691118538500551637639872362677540459966144821324873973304197", new Rational(new BigInteger("309279368670410088522469436272962042370"), new BigInteger("-100955437082777466648221520218755747786")).multiply(new Rational(new BigInteger("257008431922810669495292524663036015958"), new BigInteger("-19002520032642193545285495730124004129"))).toString());
        assertEquals("3226908133441461682013518142678607164314272396892001376368212862537319137675/2859132469394399859394692644850030018355627397922313994198837309992568150926", new Rational(new BigInteger("171688663929345400428564930093916251659"), new BigInteger("-298492294856979178496928421271064567477")).multiply(new Rational(new BigInteger("112770688276871546485320632970579250950"), new BigInteger("-57471482888983844129545611021878890628"))).toString());
        assertEquals("9592989862975514320838033852573520682052207115847498894616561420565834927825/2839160416146082843990258466009205421892550284673996368214672303753081442594", new Rational(new BigInteger("77684459841150102933180904031826264759"), new BigInteger("-47359895758332993647031342044637326362")).multiply(new Rational(new BigInteger("246973201141936189314252036854714410350"), new BigInteger("-119897240932863808953599240847455551274"))).toString());
        assertEquals("1293811012389032018299697095345686071353793842029500452653843097935896068166/268230458752881420945088841312859112695408029898476057790135426698976219397", new Rational(new BigInteger("33908611408771689520387351891398849414"), new BigInteger("-103242607084675754533397293379116281078")).multiply(new Rational(new BigInteger("228934944600121426836099766614751599814"), new BigInteger("-15588358314095386253541130126392499069"))).toString());
        assertEquals("8298668350711884712103388526654285925889825871340193113016974404048616460851/27139226644781153514265084161801315350485724679299987407272343520201987205477", new Rational(new BigInteger("101594593517229136652960346764314637909"), new BigInteger("-254694656891901485394295928623633124307")).multiply(new Rational(new BigInteger("245052459882263437747349868996869380917"), new BigInteger("-319667797227874609832925955158578634933"))).toString());
        assertEquals("3603466333164366151641942630842491676776588888713344861491149618396083289806/46159471316089830941174033301081275677443900712489914649592039236545616983719", new Rational(new BigInteger("50325652709942091703610181849879620078"), new BigInteger("-259931672220663934162349803876985784773")).multiply(new Rational(new BigInteger("71602972621803329966247705572153212177"), new BigInteger("-177583096825936802941156490491640807803"))).toString());
        assertEquals("1561960154957646983852648483914372204855965925242319285284327810561678403769/26645818462585317346240025285314137154990178786412558899960962211071149679905", new Rational(new BigInteger("18442366644563907986570554965443375173"), new BigInteger("-159970537594963062475577802503609485242")).multiply(new Rational(new BigInteger("169388255321130604982590059549885890506"), new BigInteger("-333134074101208810408999176693300470805"))).toString());
        assertEquals("3043209749103404937704311663836778747857656184508000191428453887361042489999/34379705785140557310133908767347682142913281261505427245513194432595698104880", new Rational(new BigInteger("140728370624354692612065014240031127442"), new BigInteger("-248164299041797220463607300441055703776")).multiply(new Rational(new BigInteger("43249413541873863655351690401206503319"), new BigInteger("-277072132598332645783725212160076668885"))).toString());
        assertEquals("395843206219643780152651188736977911088307432532388604467261546786109525/3209610351854096618483315245616766348252394258516483281613969370889452846", new Rational(new BigInteger("69404372775003526908238812478505772081"), new BigInteger("-336082199995899454061156563998007421329")).multiply(new Rational(new BigInteger("49157891037607411988672026609853657975"), new BigInteger("-82312099905820609665415728574590657306"))).toString());
        assertEquals("15850341030018585163074935124430358619711004161178929363057341001206768604912/10577436922712140793658271102624745989007625070080709040156819630164289654333", new Rational(new BigInteger("88951104148670474676477570668968416104"), new BigInteger("-184507447012493114135586007607142149327")).multiply(new Rational(new BigInteger("178191616413515822889716196708748432278"), new BigInteger("-57327967483046556666796257647100022579"))).toString());
        assertEquals("10478408293904408924997481280017365837767810256823265858628460279591530843166/63270382127784085304803391191696023751159155529802483146930809317756990988589", new Rational(new BigInteger("331903899565161284829302761869174100222"), new BigInteger("-266835552375005296115602059926220078731")).multiply(new Rational(new BigInteger("31570609166184947064429134169957808753"), new BigInteger("-237113763756881872000583315142086151719"))).toString());
        assertEquals("12185883454073690037659702497158545462109747182926381812554025708034487572440/12062801676096225560852659104390928324932131843087250582326654979031718062849", new Rational(new BigInteger("204365901206406528336459975838982239080"), new BigInteger("-168634169873904732336563956630829615201")).multiply(new Rational(new BigInteger("238511089807807585932173799239865759772"), new BigInteger("-286129476253030303039622750567333272196"))).toString());
        assertEquals("6070947862447964429659676364736444552216021185087993268513512683783568994636/11209485295898207827384271102684216060512180740248050188991999470996078791811", new Rational(new BigInteger("38067834912315166599099833396452365196"), new BigInteger("-66826053940063898475804735848059956961")).multiply(new Rational(new BigInteger("318954197234052698460658882156750949282"), new BigInteger("-335482484300268992291220851236133877702"))).toString());
        assertEquals("7896022192335110260961804672510755542040070277206044737344845124991163007779/71517805872806196730904501013627625163207378598580909510799020882005180520", new Rational(new BigInteger("141273425740177068386745017470642201667"), new BigInteger("-14861043609522393950835019456438488670")).multiply(new Rational(new BigInteger("167675317936801670318449139453199415011"), new BigInteger("-14437304892971371500015119198073733668"))).toString());
        assertEquals("56766392118521564730754474456541385820288969384649132156084504573162209/61684890939577936821638348209450714007986001103357284016199035202414400", new Rational(new BigInteger("98108352843463587420052899781234360226"), new BigInteger("-139629362172362976243109699053258186720")).multiply(new Rational(new BigInteger("26013110840179852556810809126324051647"), new BigInteger("-19861362135552702688000163225637188660"))).toString());
        assertEquals("779559318199679843308417754571080691325594036119125182777114527937762777/74649367988603325676085889525230552527899927766367220767147811502740287406", new Rational(new BigInteger("60658421347098384935395141636638303303"), new BigInteger("-234161819419836831536159129905395939954")).multiply(new Rational(new BigInteger("10756810593527656197640669980117683483"), new BigInteger("-266830524127572231508977569412588975243"))).toString());
        assertEquals("72033534696906255068258330345324826328201568806242014452344589666466859631858/48484950550098234954254103606579322851430502526528067419406002033410661985271", new Rational(new BigInteger("231052542491776693262957623024387533433"), new BigInteger("-170650470631213736489010753801685630267")).multiply(new Rational(new BigInteger("311762571058788389308478255265480372226"), new BigInteger("-284118469587331075973570362217696055413"))).toString());
        assertEquals("33081195622023049917289212426469093270693231379669024380138652052741360904449/7625164298105386655724527828188949722323875463922572691730753489443563561526", new Rational(new BigInteger("321658545246641814869734341953260947127"), new BigInteger("-50670229732256193909078695391630024778")).multiply(new Rational(new BigInteger("102845691839640081162547556715938977287"), new BigInteger("-150486081045953467325389304190731106367"))).toString());
        assertEquals("29702582540923200545888803405914668955493782931567596040173079697333034778673/1465783389627601837257635234567553654088342441478767530784918276104839396556", new Rational(new BigInteger("324549886947894539060243369607720630127"), new BigInteger("-237711856018302093050125994666661999819")).multiply(new Rational(new BigInteger("274557937643267672846972307039058663197"), new BigInteger("-18498657334719734651899185845689203372"))).toString());
        assertEquals("73202983847060038440206907427823342461870368569910538238177588781676831410247/24262594635869997825306592573847051263730868101936826977560174258860356993044", new Rational(new BigInteger("318254673453763929634005404084487079993"), new BigInteger("-177106052115232886355231220559813950639")).multiply(new Rational(new BigInteger("230013853536372263697388218678299415679"), new BigInteger("-136994723478358042916899496555597860396"))).toString());
        assertEquals("158008985656582504250144247447205719545761114488230969218674180368055725199/477180916901240163794713612144241563865161799370908046468853185560026288885", new Rational(new BigInteger("16288033990299137608523165192426536142"), new BigInteger("-38627839860411038500853047492969917399")).multiply(new Rational(new BigInteger("58205546139217232664062932187281852107"), new BigInteger("-74119741402929563542474672304338072690"))).toString());
        assertEquals("40556487512662003073823591690453526224796134206253707224931542001273031616363/716730831607728849006321699329294523092497912065746683346356775385018994725", new Rational(new BigInteger("246040938067828188930692231574618147959"), new BigInteger("-327203056025206547439762553733595698133")).multiply(new Rational(new BigInteger("329672678304302780045228134136214010714"), new BigInteger("-4380954385416953329021459877967791650"))).toString());
        assertEquals("196530842656942182883695168447838677245697548073758503614617907301395083391/62602268263212968932940724827108280042935086194956425138541657963566505656", new Rational(new BigInteger("270978266654109036235903518457186346745"), new BigInteger("-80127290888383916708155466370767378720")).multiply(new Rational(new BigInteger("246589836625730352114774303628974521612"), new BigInteger("-265636975536110015550531599452827420107"))).toString());
        assertEquals("995809033483808770990689529010031797587038411133193123891087283167570784955/1115476743407212957915951240309944705713435598076286615792350880784246490038", new Rational(new BigInteger("104146378785693982576646006868252278868"), new BigInteger("-275618717415568421766986317968338912948")).multiply(new Rational(new BigInteger("229479095502592188470139563890875065690"), new BigInteger("-97132161751583989225453937578496319444"))).toString());
        assertEquals("15717290251205360287480880069158159762613093663590997413119388142898142522620/23052821389647552234214527866586425320596795628937456194254964692588018243761", new Rational(new BigInteger("152159572912489153929098972279911643685"), new BigInteger("-134999732477712232509939099826612898387")).multiply(new Rational(new BigInteger("103294784221330420330508306284703064652"), new BigInteger("-170761978313204846557766766815587997803"))).toString());
        assertEquals("12661633217739654678199833403239506836134360807939432250736581341739681508251/2792973984908791726243930422833363302260941653236530324736781253153784350343", new Rational(new BigInteger("92872342245549400115001924406763385622"), new BigInteger("-95602615064834604680389882074778805694")).multiply(new Rational(new BigInteger("272667468303167977433803362796757973041"), new BigInteger("-58428819818677282181059478608018663769"))).toString());
        assertEquals("898643207077377990492923729541131949065799577182683278696466999790723892785/1895153909680843800957724007984817904099335548122007782113621057357617664094", new Rational(new BigInteger("197114603375944513960957136377793492610"), new BigInteger("-259905159046461007874024219988745189932")).multiply(new Rational(new BigInteger("191477516383019850485847523211326900677"), new BigInteger("-306251959363248595403268504951464559089"))).toString());
        assertEquals("1151665839202855817305952258858712614335040526228078238834847915536597384813/953625888781506519706862255089540494332962464283605949780263736260228242544", new Rational(new BigInteger("317347199159692036874160100037079444043"), new BigInteger("-99321141635087889570685891602743874924")).multiply(new Rational(new BigInteger("32661364525262258664602252023874535519"), new BigInteger("-86412951540233913060872443944273306804"))).toString());
        assertEquals("30619851909369065058234434965323357353037124010934875393109625095430254537/1251076541663787340857485918429237821528707248609281204473331678499854701829", new Rational(new BigInteger("64943472083858781881905234737693929412"), new BigInteger("-237125739312496123652834856414812069792")).multiply(new Rational(new BigInteger("15087509639684646084952842425740217032"), new BigInteger("-168832153984269928788273290962267991209"))).toString());
        assertEquals("297038787732581038740904900282343514303582665684294618733393074414009302512/10028268015006055183041480856331129505578194654789550366348110576501687578625", new Rational(new BigInteger("125367864019216591685846748535591133808"), new BigInteger("-136175464073753501088166296493892974850")).multiply(new Rational(new BigInteger("4738675099179331100105456451117858578"), new BigInteger("-147284506547738749413361836144141734785"))).toString());
        assertEquals("6678692921076364827499405774275067673625837820520618971042485761427923982383/35155741044365916476669513051033442848896390057522068847431755394962690898280", new Rational(new BigInteger("25936122017350682877916035181160954999"), new BigInteger("-193379685513082574528270275284345685510")).multiply(new Rational(new BigInteger("257505455773552781909310060884045252617"), new BigInteger("-181796453702411005431759710101336250428"))).toString());
        assertEquals("6221364581473788720588597572136568645588191871060176512687523746401078482733/14117240019554974074996481905120946208585222936795596208266496697963998612109", new Rational(new BigInteger("55695325571805335903474882696702377769"), new BigInteger("-309741026069952581118039043711385481677")).multiply(new Rational(new BigInteger("223407063971746752238243371953279834314"), new BigInteger("-91155118833800893735810826031084533634"))).toString());
        assertEquals("12017447862140619723081550771496311219898381079068186122645074226792881644129/35429359793112078440103317504310007839805235023225541461279026211117455558213", new Rational(new BigInteger("333898657297232324862437976564851309489"), new BigInteger("-182620178229957599981007059153075381939")).multiply(new Rational(new BigInteger("35991303347598792391206039071998307761"), new BigInteger("-194005723444749834238852030095473449767"))).toString());
        assertEquals("10966247206125085313337743895804518921070978841038365703541393592165115587621/10532666998484561300525279737916105221903286233995001610248666851674661037132", new Rational(new BigInteger("37448675454782319615865017334575784991"), new BigInteger("-271518912331721835786775917297414414844")).multiply(new Rational(new BigInteger("292834047478297641736461823770519471931"), new BigInteger("-38791651410331680621530258495080076653"))).toString());
        assertEquals("24303745951463295809061574262667783487282820772395636057727334939708580785179/47895314636951351172249511430259449588489274940362880089070921845444648921419", new Rational(new BigInteger("339750363595220029293120288588721203758"), new BigInteger("-282609251688779384714020055456123161594")).multiply(new Rational(new BigInteger("143068255729191083313363251246294092701"), new BigInteger("-338950790540258660491793218856321706727"))).toString());
        assertEquals("56935072051527466333751412655762669105015548596622668869005933469905725265625/4612904254669025474484681767622900994692563015246432084463863181983461558119", new Rational(new BigInteger("273903098097520081502180447800293791875"), new BigInteger("-132309855824169093399422325369374341257")).multiply(new Rational(new BigInteger("207865746853496274653625301387104476275"), new BigInteger("-34864403909556558069194301432504902767"))).toString());
        assertEquals("44002801532422360658262301910271241940878616461242752853257482452855435937016/14440257933185012007278819897099384277222710573149249759479449256207362750345", new Rational(new BigInteger("181542804260910573012971135884031888936"), new BigInteger("-54744949632197680342042386805082112785")).multiply(new Rational(new BigInteger("242382515305768879175783232350015392531"), new BigInteger("-263773334895756712643877397272441453817"))).toString());
        assertEquals("10339542638611485593578225164890427658012941834739207265802462343590515774283/14483223057112673665247503719142053748242808166920314575609218793823746462080", new Rational(new BigInteger("258847174869254454226824992389683337683"), new BigInteger("-173613734750104066697684228278519697606")).multiply(new Rational(new BigInteger("79889167373250737531659922584840600402"), new BigInteger("-166844208241467971788537186356696031360"))).toString());
        assertEquals("47371063380233257063642645433557934784532933864151481430428011900860118539610/5070147291170575871312323799766178666400331765520945071203741462533985384387", new Rational(new BigInteger("291264683088781043755906215849694243139"), new BigInteger("-81737664878117028550635117040410444959")).multiply(new Rational(new BigInteger("325278457229186118603906569457988977980"), new BigInteger("-124059019761108097548467767900259609786"))).toString());
        assertEquals("612063253835341706846347250543098852594635497163413765618659846728416873475/1514815416659198989234196320024337514984058973737355583087949186113111645611", new Rational(new BigInteger("86526334632475548081525955389123981195"), new BigInteger("-9090300713120137271720548961564963657")).multiply(new Rational(new BigInteger("14147444392163555291804446977821133010"), new BigInteger("-333281695394927517055094698865705659046"))).toString());
        assertEquals("636619638146298683272210303687332150084622515537633776273635526491487806255/2583601710487662424145097402805846665838997673712007124783821807735984751709", new Rational(new BigInteger("77572812546779228082210687033846038300"), new BigInteger("-305827945267120064876527990489204881074")).multiply(new Rational(new BigInteger("328269463099533167553136033521003785594"), new BigInteger("-337915713782278560507226974982320807140"))).toString());
        assertEquals("9802092670286311539617920066863189774699721075605219500626502961243731335635/16605204803366251683014032778857853303578036504444252287120009153069229014844", new Rational(new BigInteger("264322021499331662696398800120448497685"), new BigInteger("-115041322235978060217580408963840105642")).multiply(new Rational(new BigInteger("74167809512693940232518846047609600142"), new BigInteger("-288682440024548580467087259325114828364"))).toString());
        assertEquals("41258448088299609003592665211725249165952184025937456027638555123972262602243/1963483752826333772983226874248578592099052959888716197593289120142648984880", new Rational(new BigInteger("302202766973111718068100410148369097779"), new BigInteger("-12726926169459587344846884681012477890")).multiply(new Rational(new BigInteger("273051425051780223130400879576925720034"), new BigInteger("-308555848707293556290771285610194414384"))).toString());
        assertEquals("13741137636713645911616462144734996565899224745075871621016422540821235404258/6854421487054416378798568563572451844572879451821548544690760668879926264273", new Rational(new BigInteger("339039752075105653191831909825403768088"), new BigInteger("-166461744781451428012881156762120960898")).multiply(new Rational(new BigInteger("162118306807511416299448844394710875739"), new BigInteger("-164708630107262791334376114131603230754"))).toString());
        assertEquals("555128385080494235549954330628252489747997109260360217316963848737725834336/1433331653704907183282645284506106479528853521357149795259812695517365157525", new Rational(new BigInteger("184614175229418557833740907228908478452"), new BigInteger("-229791048347755422058287746190631190659")).multiply(new Rational(new BigInteger("153355220984101964968834906888657425768"), new BigInteger("-318114717107361591548124929758548634725"))).toString());
        assertEquals("903279084558198493083203843254133773720904806889719712367782280724763770623/1271478839542637823809236699869617232198457261742411751382223692554346223561", new Rational(new BigInteger("158005811976146722982730838131400961658"), new BigInteger("-167998505518912165303173764363717525823")).multiply(new Rational(new BigInteger("240103329598860502316110138573961088327"), new BigInteger("-317872537590991430716791674875427471494"))).toString());
        assertEquals("3260566304348012855829782594796430392465553414127697843406934483372710269500/694069619852485350790092732750871788623013283157672211081907349708263470851", new Rational(new BigInteger("94758430879206448096298443020530717000"), new BigInteger("-83130304073991841792068986317293555271")).multiply(new Rational(new BigInteger("137636990148324768449047643648805425134"), new BigInteger("-33396707859252595525966150245233003924"))).toString());
        assertEquals("4971435867923034621688224519916208100690651479148036288041511529198405493227/9406040829049446081135431537047704101080109727393560741904966779237554216130", new Rational(new BigInteger("40465497056481432020770674825085613599"), new BigInteger("-74234559263990322613107856164714661261")).multiply(new Rational(new BigInteger("245712334188503473545465262000074999146"), new BigInteger("-253414068118866720348822268450312000660"))).toString());
        assertEquals("5108314192874412158069074020224036429770414018739501223009709952604356958174/53228476127875998791684645554520669487528401130144557974792355720749476004415", new Rational(new BigInteger("70099925491771203645030503198213591343"), new BigInteger("-176440815041925737096741903979353533135")).multiply(new Rational(new BigInteger("72871891903423779195652623064864998018"), new BigInteger("-301678929080144451403967179437949898129"))).toString());
        assertEquals("784879837558301754484426363938486774654421310302895587767986321363880660/57425780684617468279433585169136173279598037252208676259853225857592988459", new Rational(new BigInteger("5593692235302725729965060579249274100"), new BigInteger("-269229045583687973296254583932187507315")).multiply(new Rational(new BigInteger("195739652332619890441697718576423663227"), new BigInteger("-297549485722706151459181005522966255147"))).toString());
        assertEquals("442944261104979742986390931531371778520972603272376497280869558304353161127/42009482545006024159738845245924080252117127493671615367670237780286463931800", new Rational(new BigInteger("31784479989681414534907815311658376181"), new BigInteger("-259182888147340809348326775405403235580")).multiply(new Rational(new BigInteger("27871732446072936831993737583760994134"), new BigInteger("-324168642808890909968821141413969274420"))).toString());
        assertEquals("306465697813966175142438559068844540921133091045943381303669633038433040393/393330840268680501987554847460648593405501158777731412288628632897073429943", new Rational(new BigInteger("223028839041710490505423423651159319298"), new BigInteger("-176546916956574276911173419608621087256")).multiply(new Rational(new BigInteger("98935771433930591618305793767153187652"), new BigInteger("-160409600957862657296299678572083683941"))).toString());
        assertEquals("16128611325872885054346625751514175830895322057176414756203706197336709278881/3072895092177778533359446962522879733562356169525930003202110814685274210235", new Rational(new BigInteger("164129896645447909743017133935717426361"), new BigInteger("-121697671108253861612156965453094696061")).multiply(new Rational(new BigInteger("294802074250624472156300991435623491963"), new BigInteger("-75750712339704746440329431518808766405"))).toString());
        assertEquals("30216863769489765156776545602605058306087944253994955635894690380657982354373/3662520685637463833153653026558175452971838088215894762329914618424156439267", new Rational(new BigInteger("230543785374584906348923727409406604669"), new BigInteger("-39707213656984959395226650772243632094")).multiply(new Rational(new BigInteger("262135574120063574175585444431074350034"), new BigInteger("-184476338091941838768507717441600733261"))).toString());
        assertEquals("41450304385482172234434756490989750625613604588928179419504792518381408246608/28420450068268375864752358497932855195832223628941401150917292673631203077715", new Rational(new BigInteger("266203439040026266784348364108997759856"), new BigInteger("-205793400979187282727497747250674225830")).multiply(new Rational(new BigInteger("311418248651924570241232100828502547686"), new BigInteger("-276203706562414512911448629714595301121"))).toString());
        assertEquals("30768300371486191245327911926863965299495802576269869061358832350478418125393/35532090677863894521238291539276428390736880188606238897667888850849816938110", new Rational(new BigInteger("103769820814929724528847704867084714491"), new BigInteger("-262519861183251769882084462906436740049")).multiply(new Rational(new BigInteger("296505285735825892531027234817884473123"), new BigInteger("-135350104627172373425047807323113231390"))).toString());
        assertEquals("20959268444704082503816077187614605820249283415940002588048843714903780172285/3380537062245871350058901293235121130940324001468773942184902660214166732646", new Rational(new BigInteger("208190267848643771831850804806607775626"), new BigInteger("-333204318622465093364947419129179185636")).multiply(new Rational(new BigInteger("201347245106977452851312412638791753945"), new BigInteger("-20291075915352502232557116411188663947"))).toString());
        assertEquals("28821816968211500510167626961111617730038715308148693298446780206795791408009/35339694990533310740017791381572239525272077354447695861598211295666798352002", new Rational(new BigInteger("272239708134210595633815268817415644698"), new BigInteger("-337126654783201905788023074891554841563")).multiply(new Rational(new BigInteger("211738523860029439990641984688784063341"), new BigInteger("-209652333858083241467694546667418130508"))).toString());
        assertEquals("23669393116957294374963969340337631805864449982061261012889826431632621307915/43798156892344653074310035206967136345279734905248854911861424110659184664336", new Rational(new BigInteger("319087355377335862003281392111168751063"), new BigInteger("-335131728471039127138312571199134364266")).multiply(new Rational(new BigInteger("74178411391348051290141612195172180205"), new BigInteger("-130689377255217216812616671757201377896"))).toString());
        assertEquals("13835917880634807367478184543629809731262868576810068813078271662581947685/5535696759692329109823360514007340248172065121213704170760278031995188161", new Rational(new BigInteger("30253468828111853781259265395025447045"), new BigInteger("-7533550652568678874884017595760319211")).multiply(new Rational(new BigInteger("63111991500075797583177669845864421834"), new BigInteger("-101403201235139921213286979721856654238"))).toString());
        assertEquals("548069739198778733075541773210125109335973233148672535457932264803988998432/2892090868312635499663665136860909064253381056239963905436653581122804130365", new Rational(new BigInteger("82323227112290774839203000626969703578"), new BigInteger("-27508785036174168321799532017143926255")).multiply(new Rational(new BigInteger("19972604030131095530628507172196203632"), new BigInteger("-315400065598265115574269787035722070969"))).toString());
        assertEquals("17307285740072912226884733965256323037545878273365762473584589429560994828343/37872006820751444993378515796172558105772435733992939244140600381938270056426", new Rational(new BigInteger("70126225469523842013494744528985119313"), new BigInteger("-140976101585845022150676622982647704083")).multiply(new Rational(new BigInteger("246801900775259691487050621508452194311"), new BigInteger("-268641325690864876405020233400873250222"))).toString());
        assertEquals("3017199604504909453384484996385930779236342593327233564027566975516851106791/6804428063778253710451739036056046089612533241828615486255480731541523972300", new Rational(new BigInteger("155636394575079802170476508771221667362"), new BigInteger("-229279402511816556481812393818475896900")).multiply(new Rational(new BigInteger("116317251350206397257036316740658616933"), new BigInteger("-178064701562389193068842696012766531602"))).toString());
        assertEquals("10365428224460973775058092908341440528408538100226045238431865997975325605817/13674103172671609331505476113719272989876180257767908504746994781988657724000", new Rational(new BigInteger("260315681431782546121782527119381488295"), new BigInteger("-329398666985109014045131674498024183200")).multiply(new Rational(new BigInteger("199093427016176570792654096563693588763"), new BigInteger("-207561604572154639581408107278709988475"))).toString());
        assertEquals("361509645571864919778785427242057051163150301001293840462766428454738854378/8735371228754924186067488859660190667251413161475744506366262505419893928405", new Rational(new BigInteger("99164913067360447271391559957686648866"), new BigInteger("-187258210125572888827002853443617650239")).multiply(new Rational(new BigInteger("14582159531619806804877102707687709332"), new BigInteger("-186595209318664304592284609913933425580"))).toString());
        assertEquals("975463532182187791715483777493769409393781389102882596103564462663709824692/664123298470511695522274486648562742873361214990017304432982615585035513127", new Rational(new BigInteger("324271236141245324094136739588400318892"), new BigInteger("-102381383647443452223120456538488588220")).multiply(new Rational(new BigInteger("120326865100954882751930261278478646040"), new BigInteger("-259470335254487607519768361616550519514"))).toString());
        assertEquals("490539274710533043327241289778259786939159096156181318494076168600183517369/3454861610276436332137140072058286870442974217732562885635072539065183068877", new Rational(new BigInteger("129081453437716074720376219749924781879"), new BigInteger("-235181926853751936009845503940644538512")).multiply(new Rational(new BigInteger("60803687798229054190084179798412916976"), new BigInteger("-235042660394552832080472559234046279461"))).toString());
        assertEquals("3533442555204609091198269918469676071537224804759584451971511640518356987/226160077855853559314098140940654454687102778695299682157558064585113885256", new Rational(new BigInteger("339514767698261026228966718925251657601"), new BigInteger("-103841770994284374200122431212661450668")).multiply(new Rational(new BigInteger("530773879254613835477899670335115137"), new BigInteger("-111074415047133501963951584305250415042"))).toString());
        assertEquals("1773453982409376362496943964274205603227150936958307075960896549646862851888/22138060797442546679995160814296095147446037125393347682795049703167376382295", new Rational(new BigInteger("35769076286944730147943574940801977192"), new BigInteger("-279979730867449883092538011285623289237")).multiply(new Rational(new BigInteger("49580648048679554585319005642366343614"), new BigInteger("-79070226722674129849725235095431807035"))).toString());
        assertEquals("12565428605810229089324233956415739165616051687207098746393260088344309157051/23225954763597194082957377265403027525744751494407360063226451170174647039612", new Rational(new BigInteger("233309392481526919425551816298910736769"), new BigInteger("-301216330747034968188701594825784556182")).multiply(new Rational(new BigInteger("161572088532249817066455342615680220337"), new BigInteger("-231321668775348955263886117980881871598"))).toString());
        assertEquals("4259963209244950334057617957466100367221314749374381996199459121414729728803/10144093568165534219054134415642750521537330301855589607638227851211877528776", new Rational(new BigInteger("254560880872352530814325603604076699634"), new BigInteger("-71808401375695041410104533715407476888")).multiply(new Rational(new BigInteger("33469111158372161680943654205071108859"), new BigInteger("-282532221128069874745007150107543581254"))).toString());
        assertEquals("607184319830234436483973730212023700053746296176367645373816092465388941867/4697642392638283583608892325030572217722887928746133960994931220050037344480", new Rational(new BigInteger("180126241202480680621859106658352573303"), new BigInteger("-184182137657746603522457604877571162912")).multiply(new Rational(new BigInteger("37079702954688624795106883627213503279"), new BigInteger("-280559597017185208335457727302982412565"))).toString());
        assertEquals("3575673294526577350970764212535617897138671868771092010517264207074913482908/14116138002415683598148232703188877321318173510388140212245637874964088031399", new Rational(new BigInteger("53169409296237678791700891083820642424"), new BigInteger("-307553847225932422162294729169104546734")).multiply(new Rational(new BigInteger("134501148004275293380372212046205116009"), new BigInteger("-91796204988102874414794302922134104497"))).toString());
        assertEquals("15014099964758240525694870929199927345970363090220177066890414436547192523166/2870967522947224931199541892766083792406877808022332904961807216067023137047", new Rational(new BigInteger("126767399941067291322305385967899010766"), new BigInteger("-71664954821172973337004866039469384751")).multiply(new Rational(new BigInteger("118438178677941830518246478620923341401"), new BigInteger("-40060968853063660982299853341547366297"))).toString());
        assertEquals("85456126944206354460495057053244257288385860768201126261625298883701722538589/38879561428995594329960221777059881883542448188612962544929021922381243447680", new Rational(new BigInteger("327511053946150008441592800517340284241"), new BigInteger("-117048661894122670707424206808459829186")).multiply(new Rational(new BigInteger("260925931856508310978528259908013111629"), new BigInteger("-332165791559107452442240940798969074880"))).toString());
        assertEquals("3052345762070594990986569638450685961268817022574737524513992208323711392097/12248318777404456165192091255854999022259228013284839635527730248155287946889", new Rational(new BigInteger("173951355918587497374657154798402624947"), new BigInteger("-273690690186743439374523771055221955431")).multiply(new Rational(new BigInteger("52641367684983441335260768800542310353"), new BigInteger("-134257238735967635483308318532346698157"))).toString());
        assertEquals("151066420757772758479108435341373311635157863719102574499241336371877717930/83691840182694275988756160974891074633679588694248977883954292852155562577", new Rational(new BigInteger("221407185543325065195166734444839287300"), new BigInteger("-267931425102223251898910202395049833820")).multiply(new Rational(new BigInteger("81876161545739178282422359734446016492"), new BigInteger("-37483549449608692975070516722634344882"))).toString());
        assertEquals("906426055983252656394996783540308358654297781045439333068129860297292968374/20777424431334751313205402140364687707943143242674848290989167538122387559", new Rational(new BigInteger("317473802349779815740255989247981960660"), new BigInteger("-34806525427061394103356405892885661580")).multiply(new Rational(new BigInteger("171307247894033605268488820701735684034"), new BigInteger("-35816429551191069572616461024548195363"))).toString());
        assertEquals("7651941187721926845467758697555367656184703577263781064869095846497233438/112989418131911260167291215900924085308420351138134518024726520083905936163", new Rational(new BigInteger("8580045411014749179714524178439082882"), new BigInteger("-240359605721024046737956352350265293019")).multiply(new Rational(new BigInteger("262197995630909055011430726107102665146"), new BigInteger("-138204956823476279390108903323461878838"))).toString());
        assertEquals("20493375251195795824331760918705839222603949891812716882697213014645598013932/2978176992960749917011332955001285852211489480835757559912739034391673875631", new Rational(new BigInteger("297186530662160183601318159487249539382"), new BigInteger("-231813785549774848226283129504479208164")).multiply(new Rational(new BigInteger("275831817889385283110261860763871780104"), new BigInteger("-51389126593962263263888635562294733991"))).toString());
        assertEquals("75579152471444103523897821158995162775169645646273862740479751512853507166072/74277622329844938833656243406514973464712384681757515076625746497722606235961", new Rational(new BigInteger("247793077599969198396100660853592605851"), new BigInteger("-321528461414743161895225750480700681081")).multiply(new Rational(new BigInteger("305009135862371234758360875357640464872"), new BigInteger("-231014144138342397786056909874930156481"))).toString());
        assertEquals("7122687821242155049066667052300803360865219619982301311580266489024337450154/2048605270735876409821178553128772405765083954033817756078504501680979682223", new Rational(new BigInteger("140959002879633702752959823040086751939"), new BigInteger("-113706644441608896205490477584426610807")).multiply(new Rational(new BigInteger("151590625835888378668706886601278742058"), new BigInteger("-54049750939257149977942480332929811867"))).toString());
        assertEquals("28172597316577038028338562888187347099621695331055371863950239059809970952/10494137690706058517964437185944631476226745397684447515031462649212194103", new Rational(new BigInteger("76467335655446411089527564057975503020"), new BigInteger("-5240203153101743487990533891847868755")).multiply(new Rational(new BigInteger("58948249367065134372484838959231585216"), new BigInteger("-320419262661431551844986431194485131296"))).toString());
        assertEquals("12540988993779192502820502151073115055893449154538708801761049949780350991/90960690744521155992683842224487931373082187632957065812085974702865519072", new Rational(new BigInteger("31050872103905172584644629324085714984"), new BigInteger("-332551152994337713868472550087374251403")).multiply(new Rational(new BigInteger("268179800683346842824705922147114253561"), new BigInteger("-181619874447978327338527121533829691136"))).toString());
        assertEquals("118989724531569287796699977341408752528075274994590184312745266570524860811/88144509155491807498846413953591940315186410782712917303719358670331087024", new Rational(new BigInteger("241675622306663060595045543104607150090"), new BigInteger("-197563121854908673470055919715382787928")).multiply(new Rational(new BigInteger("280641226184295065942963115109952546803"), new BigInteger("-254310469215649333600293709834506051060"))).toString());
        assertEquals("1066993840507426000608951164584280517388406489307457751636295851543604238455/1219213050761298804163270355332220967283806487253748611910370316556187062299", new Rational(new BigInteger("227177466239702166929200432946932148889"), new BigInteger("-198007879182768996623295339042846783558")).multiply(new Rational(new BigInteger("253624042653098223322870244125785689130"), new BigInteger("-332499418774843551945271608030371288787"))).toString());
        assertEquals("687052282122798334358242525040210374450854246203279751205011163726640785225/235125295717321033584744854365278018954555002111243434745258434787129047704", new Rational(new BigInteger("256095241135574061907622424986306635048"), new BigInteger("-215070073509131857618079991885025731712")).multiply(new Rational(new BigInteger("85849596151966635865805300915014658900"), new BigInteger("-34983990753296526177271727501120523894"))).toString());
        assertEquals("25137953935775759884700842268908518964279358911776560760381091371511013064163/2348127433078752897487093925116680569309689598485984026211853398211440871576", new Rational(new BigInteger("259439413855319133551392701515467898539"), new BigInteger("-66634647307182366331726363716137496038")).multiply(new Rational(new BigInteger("193786700040837848321406044287809502034"), new BigInteger("-70477672741449467102342902403302730504"))).toString());
        assertEquals("36979718654156421540285081618845653144024567747453376747376544678086736142641/2224260382651855628172312308396760407382883839600848426777780306199381486008", new Rational(new BigInteger("131920414444503431248019503728095194859"), new BigInteger("-83281387880007906187384737662580550244")).multiply(new Rational(new BigInteger("280318393554722575107126194095128412499"), new BigInteger("-26707772760182349539348734908747751582"))).toString());
        assertEquals("6257932636518388816164045220811786508136646731752234750732071783722055131/10652393710593018268805780335565037619828491733237463592388770730235944870", new Rational(new BigInteger("130176464809398981303023763834961749791"), new BigInteger("-84476592728894443791426481239746199980")).multiply(new Rational(new BigInteger("108355839770001296575093941025668910214"), new BigInteger("-284226608200594404693696374438622823151"))).toString());
        assertEquals("5217238703120933192598574665982891173143398449308497762804057040398844321265/449601433901221746203984606617853240692736013306000643738872586025171236738", new Rational(new BigInteger("136095132692283605462275550547064818231"), new BigInteger("-22744851533919667293371383605307744223")).multiply(new Rational(new BigInteger("153340934386457833395415213790034695260"), new BigInteger("-79068695301127956226960676639455167224"))).toString());
        assertEquals("38204884961083620410139066077136428082213009618529409323083996773742844526/20211199130430851957631331943205778877450383405808065575402889744147996519", new Rational(new BigInteger("10007759688916757253244738976654731307"), new BigInteger("-338415497042529737674230334322669402199")).multiply(new Rational(new BigInteger("148883522366386696452559068355601637702"), new BigInteger("-2329198198591192288012297164746965559"))).toString());
        assertEquals("35987592332891885066648884225066105931890111756666633421217019545510046444373/9408451565107044067057176230643819768906490706100251545952726542501640497986", new Rational(new BigInteger("306334891928101781204172584033701346546"), new BigInteger("-240936102331840955666259071125005044133")).multiply(new Rational(new BigInteger("234955881821900586929860233877469760701"), new BigInteger("-78099143084408304473475679322652773684"))).toString());
    }

    @Test
    public void testDivide() {

        assertThrows(NullPointerException.class, () -> {
            Rational rational = new Rational(1, 2).divide(null);
        });

        assertThrows(NullPointerException.class, () -> {
            Rational rational  = null;
            Rational rational1 = rational.divide(Rational.ONE);
        });

        assertThrows(ArithmeticException.class, () -> {
            Rational rational = new Rational(1, 2).divide(Rational.ZERO);
        });

        assertEquals("329652284818538240/3152159897675064849", new Rational(87591920L, -3471730033L).divide(new Rational(907950753L, -3763501072L)).toString());
        assertEquals("80460032041839597/1161536797993907215", new Rational(656644988L, -2527133099L).divide(new Rational(1838505140L, -490128051L)).toString());
        assertEquals("66544534192190977/451776278515465156", new Rational(1458946914L, -1367595141L).divide(new Rational(1982061496L, -273668083L)).toString());
        assertEquals("300838561257403059/17959766522187692", new Rational(1271181615L, -108927110L).divide(new Rational(824393786L, -1183302833L)).toString());
        assertEquals("75474808597007887/1491835924875069", new Rational(857066326L, -266450281L).divide(new Rational(212759262L, -3346348631L)).toString());
        assertEquals("271865541746716991/2268661033779558033", new Rational(1547016403L, -2309818533L).divide(new Rational(1964363002L, -351470794L)).toString());
        assertEquals("423874760392981785/534428943630308966", new Rational(2018670482L, -1928172364L).divide(new Rational(1663011939L, -1259863155L)).toString());
        assertEquals("19999911337333942/126596547051978609", new Rational(398891689L, -1415412129L).divide(new Rational(1520505057L, -852357926L)).toString());
        assertEquals("791124084726097391/5301301137235811812", new Rational(499285291L, -3743926852L).divide(new Rational(1415973481L, -1584513101L)).toString());
        assertEquals("6081105634707369/12518973692999890", new Rational(1428664377L, -2013128260L).divide(new Rational(1778538679L, -1217358142L)).toString());
        assertEquals("478218260397449474/1061242009083719", new Rational(1605548357L, -139269161L).divide(new Rational(106681106L, -4169949548L)).toString());
        assertEquals("970202741446347297/6083304850243584868", new Rational(623681079L, -3282951058L).divide(new Rational(1852998946L, -1555607143L)).toString());
        assertEquals("134630206677995321/67994931860867736", new Rational(1199927236L, -1826730272L).divide(new Rational(1339999443L, -4039151121L)).toString());
        assertEquals("2830384534234052565/1369436860905620312", new Rational(1378264335L, -2797862392L).divide(new Rational(489458261L, -2053586139L)).toString());
        assertEquals("10295300077020052/38398105002476255", new Rational(384386513L, -2112569816L).divide(new Rational(2035713910L, -2999776448L)).toString());
        assertEquals("85939153400251644/8149914799497235", new Rational(1912930682L, -148099965L).divide(new Rational(2146163081L, -1752090138L)).toString());
        assertEquals("342100773017613821/305157423226223700", new Rational(847271153L, -1662257637L).divide(new Rational(1468640800L, -3230142056L)).toString());
        assertEquals("26498479654666891/30216580424475470", new Rational(837073240L, -2767488400L).divide(new Rational(436736507L, -1266244261L)).toString());
        assertEquals("177140498354767247/426552164569216730", new Rational(1773446593L, -2052873474L).divide(new Rational(1246697870L, -599309274L)).toString());
        assertEquals("3340219522130968100/128792159358014851", new Rational(999488575L, -253123399L).divide(new Rational(508811749L, -3341928668L)).toString());
        assertEquals("410579355932171760/74500544085622129", new Rational(1655338395L, -558010564L).divide(new Rational(2136175876L, -3968535808L)).toString());
        assertEquals("73069140873032683/268915733970313265", new Rational(599591060L, -3666644255L).divide(new Rational(1466822060L, -2437299211L)).toString());
        assertEquals("490270907089636816/405277099111792883", new Rational(316062448L, -3884437829L).divide(new Rational(104333527L, -1551183667L)).toString());
        assertEquals("6145455598038755/122249996172590286", new Rational(373142995L, -3694469922L).divide(new Rational(1886129791L, -938757993L)).toString());
        assertEquals("109805957651101860/914242728727298201", new Rational(1098399240L, -3837437246L).divide(new Rational(952972174L, -399876306L)).toString());
        assertEquals("127217360248127767/760730863710990945", new Rational(200063042L, -1589547670L).divide(new Rational(957166467L, -1271772727L)).toString());
        assertEquals("102806468807768276/521313115216123659", new Rational(1112523031L, -721540567L).divide(new Rational(722500077L, -92408396L)).toString());
        assertEquals("94145195443632711/301626522622429120", new Rational(1707967878L, -986539430L).divide(new Rational(1834451904L, -330727047L)).toString());
        assertEquals("2774620394208721851/2314238485461541117", new Rational(1830207602L, -3723958753L).divide(new Rational(1242891578L, -3032028051L)).toString());
        assertEquals("249344178039186357/538697236413145150", new Rational(891039527L, -3379574275L).divide(new Rational(1115785702L, -1958846037L)).toString());
        assertEquals("44856991516483908/128652855399676675", new Rational(103546416L, -818854490L).divide(new Rational(628452830L, -1732826427L)).toString());
        assertEquals("163932312429451958/184034066564641971", new Rational(420640780L, -1447595693L).divide(new Rational(1271308470L, -3897204461L)).toString());
        assertEquals("3399818506599059813/6823630911134122330", new Rational(1004302267L, -4287285419L).divide(new Rational(1591597070L, -3385254239L)).toString());
        assertEquals("72110222740798335/26442254521153768", new Rational(1457061602L, -659168488L).divide(new Rational(722062098L, -890823015L)).toString());
        assertEquals("24103295452743789/72737246361094829", new Rational(849875357L, -2971678649L).divide(new Rational(1615470186L, -1871824482L)).toString());
        assertEquals("1609588614410537651/160042882726610014", new Rational(1393119849L, -1085636714L).divide(new Rational(442255353L, -3466152497L)).toString());
        assertEquals("929768150131764434/2275712358528116625", new Rational(800177302L, -1159817335L).divide(new Rational(1962129975L, -1161952667L)).toString());
        assertEquals("208095199578424116/30984077687830445", new Rational(1324843440L, -3070799135L).divide(new Rational(201798140L, -3141430803L)).toString());
        assertEquals("2008433389747165952/120360685080242151", new Rational(2068498976L, -192681631L).divide(new Rational(1249321842L, -1941923504L)).toString());
        assertEquals("424300519677611735/377920786123199391", new Rational(959912455L, -245306121L).divide(new Rational(1540608871L, -442020017L)).toString());
        assertEquals("97946995970120177/1317710502770267154", new Rational(913815458L, -3743155348L).divide(new Rational(704064021L, -214369313L)).toString());
        assertEquals("226370953814704400/37943786564146863", new Rational(1986588500L, -1032537525L).divide(new Rational(918702363L, -2848739860L)).toString());
        assertEquals("271092969890618748/656923046057105933", new Rational(1333787298L, -1086364853L).divide(new Rational(1209396722L, -406501052L)).toString());
        assertEquals("25210436184013108/1728434637438431", new Rational(1205522140L, -256541155L).divide(new Rational(1313803839L, -4077930129L)).toString());
        assertEquals("15309465674880186/15148710002955401", new Rational(1946736351L, -1396194599L).divide(new Rational(1291149881L, -935836234L)).toString());
        assertEquals("554749931382213563/281713834024517351", new Rational(1794598831L, -672748645L).divide(new Rational(2093752519L, -1545609865L)).toString());
        assertEquals("726543105517231753/5286231179499156582", new Rational(1335360113L, -4025689158L).divide(new Rational(1313124529L, -544080281L)).toString());
        assertEquals("566260910967311820/1448194561674305977", new Rational(894624240L, -2996990038L).divide(new Rational(1932865366L, -2531837997L)).toString());
        assertEquals("103373068049480887/19226894186852250", new Rational(1723040305L, -4176156536L).divide(new Rational(92079375L, -1199891468L)).toString());
        assertEquals("1582408500299641016/1153941704172965697", new Rational(891776029L, -3812529102L).divide(new Rational(605341847L, -3548892208L)).toString());
        assertEquals("18526037875811501/19737316844674", new Rational(1851739118L, -178725318L).divide(new Rational(38430964L, -3481624986L)).toString());
        assertEquals("368110873106417280/121589810700019691", new Rational(1808403128L, -910153357L).divide(new Rational(1870297282L, -2849780640L)).toString());
        assertEquals("155542919601439880/5670547378988315337", new Rational(464734862L, -4204108641L).divide(new Rational(1348810857L, -334691740L)).toString());
        assertEquals("3178256944052052927/6942024737116510565", new Rational(1213252767L, -3234834635L).divide(new Rational(2146021519L, -2619616481L)).toString());
        assertEquals("5839181677720215/22193396182317632", new Rational(87967341L, -908297672L).divide(new Rational(171038392L, -464652805L)).toString());
        assertEquals("240428640658164229/14087650908204700", new Rational(1873361209L, -178280580L).divide(new Rational(2133527805L, -3465201087L)).toString());
        assertEquals("2028216695273709/46322506804468510", new Rational(640974498L, -3946510535L).divide(new Rational(633829644L, -170870607L)).toString());
        assertEquals("3201153572724764184/955028026653525727", new Rational(1366508154L, -3400634327L).divide(new Rational(280838201L, -2342579196L)).toString());
        assertEquals("6638110617378078522/234349619033765821", new Rational(1650036669L, -206243879L).divide(new Rational(1136274299L, -4023007938L)).toString());
        assertEquals("974409912731391682/117222505299672567", new Rational(1306911116L, -2875782534L).divide(new Rational(163047802L, -2982329558L)).toString());
        assertEquals("99751846821240978/2107655511534941", new Rational(1775826906L, -288638671L).divide(new Rational(416217147L, -3201807141L)).toString());
        assertEquals("5681434300001603788/1946167853209683825", new Rational(1866920507L, -3194080675L).divide(new Rational(609304539L, -3043211684L)).toString());
        assertEquals("2859402797773844215/240449895650749482", new Rational(1248454591L, -112208886L).divide(new Rational(2142877487L, -2290353865L)).toString());
        assertEquals("207052691134182038/23670868385771387", new Rational(125656252L, -148675781L).divide(new Rational(318422654L, -3295541413L)).toString());
        assertEquals("55578331642390791/59167962928923887", new Rational(1693017381L, -1557451585L).divide(new Rational(2089463321L, -1805538605L)).toString());
        assertEquals("6420086699527928255/2147068654597303563", new Rational(1584252115L, -3618163927L).divide(new Rational(593413869L, -4052440037L)).toString());
        assertEquals("149037959420719433/593481238820986572", new Rational(205325006L, -1362335877L).divide(new Rational(871270072L, -1451727311L)).toString());
        assertEquals("6256352074579103/22136015481900224", new Rational(1034204962L, -1751850704L).divide(new Rational(1541566232L, -738030643L)).toString());
        assertEquals("304235544597825527/214109545646957922", new Rational(915023953L, -4132623898L).divide(new Rational(51809589L, -332489159L)).toString());
        assertEquals("131570072993831418/846091228660659395", new Rational(217907567L, -547908997L).divide(new Rational(1544218535L, -603788454L)).toString());
        assertEquals("7991593672740251590/552849942362636061", new Rational(2142219395L, -300975683L).divide(new Rational(1836859167L, -3730520642L)).toString());
        assertEquals("76703321688561527/32094713755435458", new Rational(1148558877L, -618601077L).divide(new Rational(1400833758L, -1803120177L)).toString());
        assertEquals("61891466064927109/73736667009931246", new Rational(1946205339L, -1589670508L).divide(new Rational(1113236988L, -763226344L)).toString());
        assertEquals("73609212678594826/98770146420168083", new Rational(331820204L, -479261426L).divide(new Rational(2060882455L, -2218346315L)).toString());
        assertEquals("85780255979619666/260919559100947397", new Rational(609452089L, -1473813859L).divide(new Rational(1593332847L, -1266748146L)).toString());
        assertEquals("186119018107443963/272967778312878637", new Rational(1618474338L, -4018450846L).divide(new Rational(1766143847L, -2989911151L)).toString());
        assertEquals("1886009321486319207/2297652790596342485", new Rational(1475335479L, -1699341535L).divide(new Rational(1352084171L, -1278359633L)).toString());
        assertEquals("466389957719153215/197230361267363877", new Rational(360955573L, -1943949879L).divide(new Rational(101458563L, -1292097955L)).toString());
        assertEquals("838340935949968271/1894109581247974", new Rational(1772424657L, -8658918L).divide(new Rational(1968720137L, -4256919127L)).toString());
        assertEquals("2145201031469017469/569323059466389760", new Rational(2000347729L, -1527498964L).divide(new Rational(1118147520L, -3217242183L)).toString());
        assertEquals("6924570610311446858/1715978433768612003", new Rational(1714670099L, -1222293621L).divide(new Rational(1403900343L, -4038427342L)).toString());
        assertEquals("706321304149512884/2473895682535036023", new Rational(603888278L, -3963800367L).divide(new Rational(1248244338L, -2339244956L)).toString());
        assertEquals("3628926006017952800/4317322991119719419", new Rational(898184032L, -3998173031L).divide(new Rational(1079823949L, -4040292275L)).toString());
        assertEquals("272175767508668976/140192811652975991", new Rational(1951195001L, -3109657299L).divide(new Rational(946743889L, -2929328496L)).toString());
        assertEquals("6651301665112420/2032433100806429", new Rational(1595233320L, -386489598L).divide(new Rational(1041222729L, -825558063L)).toString());
        assertEquals("3124012703537441619/1919280100018650910", new Rational(2105158749L, -1921073249L).divide(new Rational(999066590L, -1483979631L)).toString());
        assertEquals("13600495566980477/20717285297153096", new Rational(227641599L, -899465846L).divide(new Rational(1036479420L, -2688534535L)).toString());
        assertEquals("94381796452882505/544318216506779796", new Rational(1219132180L, -3542224572L).divide(new Rational(1229325144L, -619337578L)).toString());
        assertEquals("5860241711986046440/4237181408661769179", new Rational(1443116260L, -3640933987L).divide(new Rational(1163762217L, -4060824394L)).toString());
        assertEquals("288325574387296992/2242906212343736833", new Rational(1710607808L, -2205081938L).divide(new Rational(2034306457L, -337103073L)).toString());
        assertEquals("23362165290168693/4783719979904075", new Rational(1816960761L, -1186593947L).divide(new Rational(310423325L, -990052601L)).toString());
        assertEquals("2338990808835014025/2448687726116982328", new Rational(1828540885L, -2957295209L).divide(new Rational(828015992L, -1279156965L)).toString());
        assertEquals("115859053214444428/368447609949515797", new Rational(93919084L, -4156854521L).divide(new Rational(265908471L, -3700815051L)).toString());
        assertEquals("585863457685770799/3362005421281552920", new Rational(637926371L, -1754168920L).divide(new Rational(1916580201L, -918387269L)).toString());
        assertEquals("17072795839150000/520505982187545717", new Rational(1153372460L, -3425374843L).divide(new Rational(1367603271L, -133222500L)).toString());
        assertEquals("115265691355804986/3109920848113985", new Rational(1382796362L, -49834093L).divide(new Rational(1185704255L, -1583782107L)).toString());
        assertEquals("27132705379006472/658099759444521", new Rational(1658167336L, -30247001L).divide(new Rational(1000845966L, -752701142L)).toString());
        assertEquals("21372247610832953/126389530818078534", new Rational(70428846L, -741676776L).divide(new Rational(2044926333L, -3641504666L)).toString());
        assertEquals("226630984063068075/2177810623910729216", new Rational(95112643L, -3377270272L).divide(new Rational(644843453L, -2382764025L)).toString());
        assertEquals("2049641494901200654/1980663223832584053", new Rational(2026355516L, -3619217397L).divide(new Rational(1094525698L, -2022983113L)).toString());

        assertEquals("54007337339404873915144119562820908394680236490611054035181746154567483550400/51552633068799912950423505858976844239069570226514819916575360888982843137941", new Rational(new BigInteger("161330413104126482864719100296079400200"), new BigInteger("-161547816538226858574970552827516185927")).divide(new Rational(new BigInteger("319116866903620932632110737326256278083"), new BigInteger("-334762282574378922806754354463997873752"))).toString());
        assertEquals("8669459641228574646299270090448770151127798358803851267156960697671281732893/6561898259485534720821141270309885934723161570261898046329507035969857414097", new Rational(new BigInteger("290821726780665226654322169077624266357"), new BigInteger("-119012739245565097911393533467961555154")).divide(new Rational(new BigInteger("330816598344788938616685428696984444283"), new BigInteger("-178861319692946995301203793778054781494"))).toString());
        assertEquals("4434828070426135669931717727389568541267520486738544451375244780397731787028/802351341863372595930073047516851057624534516782922026866165714265232376545", new Rational(new BigInteger("113780688634283044738785875325336064344"), new BigInteger("-35833985006185022447640327190529442935")).divide(new Rational(new BigInteger("134344758205075718772534869721425217642"), new BigInteger("-233861903473656037621355479497991010797"))).toString());
        assertEquals("11224540583311118685471353566003322625273807277281880290236812529415405249066/26495557712585538283739702520120611055437897405303772584025958409482536664541", new Rational(new BigInteger("170984856401514613788114945451360211172"), new BigInteger("-173395182713555965448176394258654266853")).divide(new Rational(new BigInteger("305608925207056819443682381438442713394"), new BigInteger("-131292803579670576489490041234961333181"))).toString());
        assertEquals("89932214281503629532650722046201966062470935539342052203681786802685373501100/612692107267923284090268391652237803419615936549645427607137374156756274769", new Rational(new BigInteger("316625092536737332843093850815826651476"), new BigInteger("-301535624102317384982892617585412031201")).divide(new Rational(new BigInteger("2031906210391989883465513044658841969"), new BigInteger("-284033756014043602369539591824716862975"))).toString());
        assertEquals("6778046959876834860844158306532959150441084491743210965653975867554678503269/277672653924532303842931935856655887977382460163874781606527437088356925948", new Rational(new BigInteger("217935668964082039456897656155709380198"), new BigInteger("-6895054618500337765766331426806959816")).divide(new Rational(new BigInteger("322170215365082189257754831670759954524"), new BigInteger("-248809090943031422717729752779063479324"))).toString());
        assertEquals("338612514754329128627159580984671616596632087701491461443144235878786911674/2418264501984331788330974631792046364985269721081659196041749341814272845185", new Rational(new BigInteger("57367324429473903211822704301388340662"), new BigInteger("-41224603907262066590743907001242096305")).divide(new Rational(new BigInteger("175982127621485804874523035230582356851"), new BigInteger("-17707598434572893267217706483665569781"))).toString());
        assertEquals("2092716337148362571823655354382997599149879795718064435544238801624908780604/706723622223623565021125475748136847190088246589147535777823683609268353533", new Rational(new BigInteger("329956591242424079849961501788324539088"), new BigInteger("-27917658118538558209328068448622607674")).divide(new Rational(new BigInteger("303774887946347273932982055755726922054"), new BigInteger("-76108787374790607271287647200349640321"))).toString());
        assertEquals("921312772979159608804694335978075653926602532251232126164576361037377175201/212382226124020922685336722842614373810572521986411879264809816044830792783", new Rational(new BigInteger("196387574132378497323932772408962004409"), new BigInteger("-152864437899310842413102294841210740554")).divide(new Rational(new BigInteger("80582307333684621648801818988751441591"), new BigInteger("-272095325118541802663200920203516178762"))).toString());
        assertEquals("10022130492371928398916587262748435716984511643543333491902088937432842403/171105176121848108553841176647742001960277667936073625668504653411593218", new Rational(new BigInteger("312233306020472172263677656568901244992"), new BigInteger("-233468476221634396224020364446576786704")).divide(new Rational(new BigInteger("4409026675497921423448735503253004272"), new BigInteger("-193102836499307625799739576698027079194"))).toString());
        assertEquals("859138316656093847750091034754500317545869316598182171073637071260523741513/11830027895463546073361089073277300576490579711287882379321965122983537811677", new Rational(new BigInteger("25938775824482217375648403908030769068"), new BigInteger("-201480165883578167767592151214051780132")).divide(new Rational(new BigInteger("234862381487204517533757896671830866869"), new BigInteger("-132487103087602049967976974796192989339"))).toString());
        assertEquals("3066466543534893626665430919691444380482520482982915907671674718208213168107/1838765475997765650037186648952122430501846201814788360093304685419099881797", new Rational(new BigInteger("192685855803301614538170976330534395348"), new BigInteger("-252533121767853344178824913470487424226")).divide(new Rational(new BigInteger("116500550145693219276973811147000336552"), new BigInteger("-254629300588847945039349623064489342844"))).toString());
        assertEquals("718331636531608721730303607293562813829252633424887100136523364896117885689/86869989960715458605023535583370653184128816554626505474083196693208021651", new Rational(new BigInteger("46422579163749928777345062940585854998"), new BigInteger("-4187793346984251198109682061805912283")).divide(new Rational(new BigInteger("290410667070241668382127503666430192958"), new BigInteger("-216632576056770848600962834515754217677"))).toString());
        assertEquals("46801707009825020917717104097032030444730328076354014975944764569509855885/409564018749752696278784229915298587549108119227965603654542066008305798836", new Rational(new BigInteger("107478619186175196237241628341933091067"), new BigInteger("-334876044879751709302565061627398455152")).divide(new Rational(new BigInteger("278851227798258899806298449846658241379"), new BigInteger("-99282901837025753342889833280560137340"))).toString());
        assertEquals("24519089044455678112730572510097494170500164548633099268194740510981559367808/51846914628004981017269360838633746049391469588699028559062404691546955071215", new Rational(new BigInteger("333747223486840588541976775484119180864"), new BigInteger("-154867491781691363991506761100707273763")).divide(new Rational(new BigInteger("334782426134277914349240654646777284805"), new BigInteger("-73466046513559829051272328832564156722"))).toString());
        assertEquals("8072890991486802263687121656247839944241626721563096345204772551129637438825/561949284594432133714401019414153360413381066514970432618168013889320363596", new Rational(new BigInteger("246482853273531629508103424707442748485"), new BigInteger("-34018906206127532640415451613959408677")).divide(new Rational(new BigInteger("132149877174643092548951198954546178784"), new BigInteger("-262018745215611423359345011337942369960"))).toString());
        assertEquals("749768095946231095629852000414789053021994919324431222740417378291795234264/902674624122007236669399137660321408839408413330069659126140693265561795547", new Rational(new BigInteger("167739557243171482927080435001015666781"), new BigInteger("-293295211330608438387038378921977214481")).divide(new Rational(new BigInteger("212361288756978937785604700282955505303"), new BigInteger("-308418595294676606415302536226977322136"))).toString());
        assertEquals("40693264565103199391633504555375540774811358869121638333470186702396685491126/74959229247697264151158080869397122424923927039130355909020965703276350265", new Rational(new BigInteger("183039065985733236407409824207293765834"), new BigInteger("-322849091352938696711711591270978741195")).divide(new Rational(new BigInteger("232180394045934663866141282692748427"), new BigInteger("-222320106071099531216081781446439685439"))).toString());
        assertEquals("1061237431014970107950419888227291851067721638615672998617181605880773268271/42905256053675828420591305750471476779327815929540288730423813868802718880", new Rational(new BigInteger("218338510204914656781501443080844488692"), new BigInteger("-25035864360931323503107999601798710528")).divide(new Rational(new BigInteger("41130041705095517923249511453389290915"), new BigInteger("-116652340993146413674073386215266771362"))).toString());
        assertEquals("2413152231119800906369584714826358769625411228645873632347463647091319114424/2060689831401265788809357562925695535387616399154321204023267597490142294577", new Rational(new BigInteger("275209396885387300362568993175701425653"), new BigInteger("-306246186829410150377336095329803709564")).divide(new Rational(new BigInteger("242239208587335386359483165156777373223"), new BigInteger("-315663205193868597273147117947724590688"))).toString());
        assertEquals("9324256744031310680215063776991914935597638570043688030043243586616912702499/25616982762814286126769944487177110895399133936964277193939865487821436396982", new Rational(new BigInteger("207747069539820398187488579762338678442"), new BigInteger("-238882762277307619465518112029021064492")).divide(new Rational(new BigInteger("214473263107002682019957741758320112817"), new BigInteger("-89765470720577960175988743719192871319"))).toString());
        assertEquals("4910656185164424017327067041826943192352772031532574448195202263516456408558/6571729994154541244497059435935114534048084398532548094295828580847754761089", new Rational(new BigInteger("78155865552164049814772897714166517309"), new BigInteger("-33167857182529949934621155499215658889")).divide(new Rational(new BigInteger("198135500825057169012405164659437919801"), new BigInteger("-62831575729743208729741039320478550662"))).toString());
        assertEquals("2236490711223406233274147673758511385963418797475078179361317092309113710292/2049156537084418394999130282011631136486336644458829543843078548002589567475", new Rational(new BigInteger("110364959381975177867755842401465409646"), new BigInteger("-91161535385294292255923171012943232002")).divide(new Rational(new BigInteger("314696230136221337914563449143299772325"), new BigInteger("-283702998963286741901665209115588219028"))).toString());
        assertEquals("14284554794732217408163465713566621176335738493828777682531193022281841065680/9802203102217477152079711637341004307598524819624816906867396205574727436543", new Rational(new BigInteger("264430188123855724745195407687398582470"), new BigInteger("-209093450056913426967673656014571645561")).divide(new Rational(new BigInteger("140638596276680149369624725544456442789"), new BigInteger("-162060408791618538050965064469565731432"))).toString());
        assertEquals("344906904924625923720606987241829984615879303126408756700953559987032267900/2155729305020517049599233100895996866906429778685865416026966317933082010767", new Rational(new BigInteger("296588960551172727009996883199011051318"), new BigInteger("-182074609723558652817965752532043465637")).divide(new Rational(new BigInteger("260475882839774744275658066877888108802"), new BigInteger("-25584067236489619219509234109701559100"))).toString());
        assertEquals("9073864211555256108362816947996453828646440246744153170832044299320549599332/2311834474300774440619629329868267708215954515616109575424385227233125904199", new Rational(new BigInteger("239761424223500352897400778275667844378"), new BigInteger("-56596921047394751837358578858717708013")).divide(new Rational(new BigInteger("245084124526649521844146518371007793938"), new BigInteger("-227072330111706338284741960798469331164"))).toString());
        assertEquals("4147298806185391014150430720844848841129693406849532032330629151381031477613/352975902642859432413730787057922591749593492007567947291024709566539034144", new Rational(new BigInteger("210753543737824812643365802884539547717"), new BigInteger("-47460150824358205146112308288253504766")).divide(new Rational(new BigInteger("44623866108116102096503335633673766304"), new BigInteger("-118070578533509842820160210976292794934"))).toString());
        assertEquals("1178702415720371070972472602058933397601246412854510963444424843506719711547/16096946100461193862005894051480932173781696390981751357874012286554202448098", new Rational(new BigInteger("36040564121476379151802029584154660774"), new BigInteger("-331287353057212182754902405980383984168")).divide(new Rational(new BigInteger("194356300678719924614888300164050788669"), new BigInteger("-130819530099196046019129271906265829362"))).toString());
        assertEquals("161187156993415330368466507464749091885768274564138319981298629017049207270/341803750224481581933592158752591101128212147491628020550351312111872899987", new Rational(new BigInteger("124149420229601836203842039736078255925"), new BigInteger("-162883477589661815590477646975674210428")).divide(new Rational(new BigInteger("83938225112201509918901839933195233410"), new BigInteger("-51933277399222947346782461160110156336"))).toString());
        assertEquals("7027096495618690923008829333576210341135985955873785376728191459160602092/162273860768743664419696383876059173423604859277570917681980906934450444601", new Rational(new BigInteger("42343179679614970590755304963366942820"), new BigInteger("-258233547613246420072983171818823721495")).divide(new Rational(new BigInteger("15709990265457246423600178662127705495"), new BigInteger("-4148895140131448903037215917960475515"))).toString());
        assertEquals("51463032798447227142008023047500175213175608747629331617406530685622367290526/52594279383913264184431749232902464433004203504812570830264210188623589262215", new Rational(new BigInteger("236032838320969570450706892802678462414"), new BigInteger("-188502045753534811792774167872771862783")).divide(new Rational(new BigInteger("279011716682798973167001962851660490105"), new BigInteger("-218033359953351716483857912842666789209"))).toString());
        assertEquals("33888073590935811053968740972440500570001798948700117945901166106707144270700/85416542749975653140067838278265253906457364101390663208216519723061663423881", new Rational(new BigInteger("148287713669231224649553182647431065409"), new BigInteger("-312556445521977235554169862322517107659")).divide(new Rational(new BigInteger("273283574771039670158518958608379208059"), new BigInteger("-228529206853415630486298863897332872300"))).toString());
        assertEquals("9982588427034863687284491917976277151483396632866131250352435057864972276997/11451137251451674684719996202519448866508811607039261918334529876085604245602", new Rational(new BigInteger("49342239865056847179903329487715729249"), new BigInteger("-255161558386024725812400108308272385461")).divide(new Rational(new BigInteger("44877987592973005083823394750647929882"), new BigInteger("-202313240224514537249020027320542473253"))).toString());
        assertEquals("223821605214146280658811789734604248506576657326957116773059841526082651511/242425981570801672763552536119273611446594514794292966837181168718144539022", new Rational(new BigInteger("70263282011655202130333610751435486629"), new BigInteger("-143886320575365603637361955492092020900")).divide(new Rational(new BigInteger("168484384478941762477208040910115594158"), new BigInteger("-318547040226528244496485099831264765900"))).toString());
        assertEquals("63041476996980000242429477072127560052958083142423633897201571289367201102/1136640476890479059671355779605804998275261570980976366268975605058066928525", new Rational(new BigInteger("180377031015497242359781204454173046276"), new BigInteger("-216898753454491072378520899471141451400")).divide(new Rational(new BigInteger("209616783644441725304688640232214702065"), new BigInteger("-13979934505422420310781032029249229580"))).toString());
        assertEquals("718931419385445657015765228011854742276830773718355006907552714033914289881/541061839016562914373190213815752223237090782670801495007509114382266621123", new Rational(new BigInteger("328797328563780184410511627948151827378"), new BigInteger("-216981319190702794963683970045182133644")).divide(new Rational(new BigInteger("29923046336041244188249193521085914979"), new BigInteger("-26238586153694512212666745406409696774"))).toString());
        assertEquals("19168927988801626704815046743562868604026196870558189274908736655017983354891/8297143526327464870878607184547589784322124658917293667823820246844807798880", new Rational(new BigInteger("186106390692755066944171975857146388447"), new BigInteger("-232117515235368120834777511889281587030")).divide(new Rational(new BigInteger("107236330501566764650504370353682784688"), new BigInteger("-308999512334551770422317225816646952959"))).toString());
        assertEquals("4501861222129309754382799275632439562244805368117610438600631311397804445596/20848589849879350244190057516027603252912956747672604587636121365464791276477", new Rational(new BigInteger("80150678518421676522721909661902266811"), new BigInteger("-122056921184964822209101499301911613873")).divide(new Rational(new BigInteger("170810386231891246243548406188326207949"), new BigInteger("-56167474877890281379017836005737756436"))).toString());
        assertEquals("162023907518455131461989313344410366279869841011434385635792391462545696985/30778220974260064270310092297662450734161553591938401729005103922523616537", new Rational(new BigInteger("202633871697782339666310826370413278631"), new BigInteger("-175078769817230092717458743563877171617")).divide(new Rational(new BigInteger("58364411482452152325440810480342588652"), new BigInteger("-265463699851498282172809553748889354420"))).toString());
        assertEquals("22451244513011992945015981769738576639389671673453929944189950503019125463392/41747402426519045923742508798500588762827030292261329728067583499659577499841", new Rational(new BigInteger("257493952608628308586612559728719101432"), new BigInteger("-297648146776919732663700958972840744859")).divide(new Rational(new BigInteger("280515117453815290309720818525086386598"), new BigInteger("-174382693539496190086479343658930790312"))).toString());
        assertEquals("18985197367882885757894314375679823877067751007942442184641729213952260812727/15150462952536644384856230058438231422798794874510687148136709273350742902020", new Rational(new BigInteger("130163261123890165145837740147326098053"), new BigInteger("-332634179539607761609539308917426303830")).divide(new Rational(new BigInteger("91093843534095586021752549215006814988"), new BigInteger("-291713609569334040048024011935919978518"))).toString());
        assertEquals("8636199022432420601738494156506082500497531704050463524026495284562253979155/103569843466415994135047460112110412570069400956966599868992693777197311082", new Rational(new BigInteger("54450989598135293022084676545464318085"), new BigInteger("-2378733138747556241326967519222181418")).divide(new Rational(new BigInteger("43539917016898873934217023457702041249"), new BigInteger("-158604996643223036036637038548970965943"))).toString());
        assertEquals("19283057533872139114633202755232922912757307634948367253013576675339239087197/14975540870328014871818692672487783166957061920965188715774006293854037012012", new Rational(new BigInteger("305898796567713806995427604964459763561"), new BigInteger("-186993952623516130857292426053530276974")).divide(new Rational(new BigInteger("80085696142692847498693753919202000538"), new BigInteger("-63037376250689624356517707649351013077"))).toString());
        assertEquals("22249634994059812079247890985094031920235530646237686856874797858730323221239/17353172798055529790930294337444525689731502484728963952654807263221712953066", new Rational(new BigInteger("186020268322721683828919277468221306058"), new BigInteger("-150097950790348944395659266180055856291")).divide(new Rational(new BigInteger("231224646394990100699713632205050369052"), new BigInteger("-239217319646690370111041086064024296491"))).toString());
        assertEquals("7057687658185670869581182973687960508450305681129346251792464555018679576110/5628891366264625658901376092422988001457327300697664688869669062164486236189", new Rational(new BigInteger("270815128025123085266926852495315481182"), new BigInteger("-188675119256059507357544913823290708934")).divide(new Rational(new BigInteger("238670213156209685864895210656104323068"), new BigInteger("-208487249871238817947671100993186288840"))).toString());
        assertEquals("4490474801044302525319640023411179726607686153117437080644003773841093112174/8968854868750241213314364917120485027456744467029711953374745622217409968035", new Rational(new BigInteger("98115672407106950897966721200632755822"), new BigInteger("-241488788012323985820118291319986858645")).divide(new Rational(new BigInteger("111419519008383905043241059632617490949"), new BigInteger("-137301453199408669494591843423108606851"))).toString());
        assertEquals("85602636229425593355555187657343105532612786399876675635129976190547177177049/10952417230325445053813003195374535352406136236368323899986516869874574645565", new Rational(new BigInteger("262732200728271504922096061306218311207"), new BigInteger("-246267183705022019110665253225016766905")).divide(new Rational(new BigInteger("44473717795239062512261877432708478373"), new BigInteger("-325817071497678260855086927989675319807"))).toString());
        assertEquals("67892780822796965636701501093659841411416249785369525983523944105121504567/98624375408205540129084910979393507668164378812904291942629357822428637502", new Rational(new BigInteger("18558518296680085335983159746939889695"), new BigInteger("-28527717364502148720375504249118501290")).divide(new Rational(new BigInteger("190142820687117654836950978420156091909"), new BigInteger("-201206954432446421573484646592585216783"))).toString());
        assertEquals("153824027460905051263930628321537311888006384250108003486436023349360366491/655803578877003950249268374337471175127032606833152806820756277478072293586", new Rational(new BigInteger("133552124880346147588977405722572057485"), new BigInteger("-67228496343550585600462279197867849780")).divide(new Rational(new BigInteger("292645357792499693353365727971883307011"), new BigInteger("-34553705738202484944142247857153736018"))).toString());
        assertEquals("939643575684149739557935318061901325939964593431396255512961097188108451683/1040613361382671118450715534521891746613307626922175876387445089300515101770", new Rational(new BigInteger("20310671255318919786233213236139478315"), new BigInteger("-169053931719901086331198708834460044925")).divide(new Rational(new BigInteger("30777555741999041589689180894600709082"), new BigInteger("-231317705818826070330090588354522846541"))).toString());
        assertEquals("2100122585128739847485276277068736827492227665684238483957870890730872173663/2384033980841564031879878415674063546839409059558783727676481429058699922132", new Rational(new BigInteger("109063231646732405267285890756458007528"), new BigInteger("-73673056406039442463971206383608797288")).divide(new Rational(new BigInteger("258877163200861020917972165520579154212"), new BigInteger("-154048073098091490966032566160748895243"))).toString());
        assertEquals("220194733336165804192570629829820670917989656324600878103623938836871108629/1002485372437289441640478733222216370176434184713794117449505761159548632460", new Rational(new BigInteger("290748078951312526896541254957625325293"), new BigInteger("-173393867916840304460407475494286824615")).divide(new Rational(new BigInteger("46252402555231372124367985638935452832"), new BigInteger("-6058708532290284340100985729772734024"))).toString());
        assertEquals("199122074782665979839356428759948690718743360551992625711400267932728540168/348486966036383324853115329053779349486240978512154068425354311006170488895", new Rational(new BigInteger("119370224556752635369996882007650356035"), new BigInteger("-50993405752984089219772245760353243875")).divide(new Rational(new BigInteger("170849034738177972326494243006797205229"), new BigInteger("-41702626329566093342907424972323508120"))).toString());
        assertEquals("8465965397466419408402269400072289915313859356843086451926192075512714257491/1980675879235002983500758180023366174152965238634339594666242603273863379045", new Rational(new BigInteger("286175950003959938857597498406020676902"), new BigInteger("-16415320185269783137533118280163871285")).divide(new Rational(new BigInteger("241320407629009143831122366885386843874"), new BigInteger("-59166155628027248474508262406318431041"))).toString());
        assertEquals("60828742428585520635810526224581105255679837072896255334714155880135685760/21854520356594888676902617041411932576752494924189118602757230405548698629", new Rational(new BigInteger("25712179677682783929829866268278171264"), new BigInteger("-2884055648257004526597833755174131714")).divide(new Rational(new BigInteger("318263572872360244260624545950659858537"), new BigInteger("-99361750502158691811377368890230663530"))).toString());
        assertEquals("112157054152751529642500229392234185491442742204815683062149991868389800133/299841046480141775943232414791091843946620641492429988174471114385513692530", new Rational(new BigInteger("266957937626530893502313870119893563761"), new BigInteger("-210123271639554199361934992539779535334")).divide(new Rational(new BigInteger("299665140702943244249830582176287296950"), new BigInteger("-88227312442861304883365728830898499130"))).toString());
        assertEquals("14154071216484464935313229285908378956355096240136774591739404453922771279528/9991856377472713580857126280659168251367211581210749132346064069106089306859", new Rational(new BigInteger("211621658503795884141509606629781803943"), new BigInteger("-249433220064295076543837747590546954519")).divide(new Rational(new BigInteger("40058242341966983480663709511457814861"), new BigInteger("-66883849774906577393776311113033507096"))).toString());
        assertEquals("871937929410662845171509472977903065598245299849362228785952150750336959383/358369420826846267716332032429870868092124669726007012115739925879226704680", new Rational(new BigInteger("24576010761357067559884694499871892121"), new BigInteger("-122730437483020746050283781066294607160")).divide(new Rational(new BigInteger("17519831013871772975946860813139009138"), new BigInteger("-212875377833497123740395876673683251738"))).toString());
        assertEquals("4555726287552441204540918893701338336608216674812758481669165960188068365429/11885262012470224211054098195119808437347460352325634416408583972240723164704", new Rational(new BigInteger("93161895476220769008857155622501868676"), new BigInteger("-159463279365931550438700738825576193456")).divide(new Rational(new BigInteger("298131634059682955333768398788246214936"), new BigInteger("-195604705733591415588546810820592483541"))).toString());
        assertEquals("838962552477933236771535369766337792672399124571012338210390422676090890685/6514530850408376652012531525593104925319097378285560712043346536646402772711", new Rational(new BigInteger("16105372916546568967467655112620611906"), new BigInteger("-146612344413650796207955058498960628521")).divide(new Rational(new BigInteger("177734852449486404626452622563794005564"), new BigInteger("-208368364228558249510626489233359935290"))).toString());
        assertEquals("949643980910914531428783603727258624021904046452185511660634485955713481527/3049286475836945714793019795746666532225154684327641283628991339538643387140", new Rational(new BigInteger("97598219851225748630917257130431555381"), new BigInteger("-226288192890977931674480743585263860004")).divide(new Rational(new BigInteger("242554221958495138211990479023539792130"), new BigInteger("-175142453237908938596755033513730439206"))).toString());
        assertEquals("143577036992646002026045486424047243275454287590006834064443806209055846163/515173982192807697820242132882271497377651627064986469038996590819645236325", new Rational(new BigInteger("98230919311123454548346429104873942165"), new BigInteger("-212524130900245538022032532021675725875")).divide(new Rational(new BigInteger("206046194852775008522992629440331273043"), new BigInteger("-124238358247686178796501891505708136787"))).toString());
        assertEquals("68214043253426629429885201167485181194752893313053792593644465663684145496393/29135174784197637674484749277603746228751148819161295164955964927595019121690", new Rational(new BigInteger("251983134755381757719234876649853747911"), new BigInteger("-329563201503622714289606494643053807283")).divide(new Rational(new BigInteger("88405424668983773296842703630834530430"), new BigInteger("-270708765170521954716908700250143198063"))).toString());
        assertEquals("10385934780919093168739366044912714487060384002483671221415927626496377420288/1403355735299077859674352865186006482346248424928202714080395054284862894917", new Rational(new BigInteger("294006987667724907263480496453942099456"), new BigInteger("-26403638803956226884794388135902738669")).divide(new Rational(new BigInteger("159450265062193327443807405162937627179"), new BigInteger("-105976407533451552339561727798256548969"))).toString());
        assertEquals("1101840633239474995312290544708742828980875029206256515517789820837846561667/658381902300305375230675206802085666657060968980537168466866088497992849124", new Rational(new BigInteger("105683203210472150421147194163863772755"), new BigInteger("-43689432149765516165837853040968697490")).divide(new Rational(new BigInteger("150695916587654470318420111805034801876"), new BigInteger("-104258822572317110467880899975803838634"))).toString());
        assertEquals("123989423798178362064124899544703476587030349589837530160122221833442320810/14833073665792951951216118355433637524780660415749604409690747407132562008941", new Rational(new BigInteger("224461291078463908373103033922430222970"), new BigInteger("-271815641095970636256472245989920077069")).divide(new Rational(new BigInteger("327422077831550563984603910091754065734"), new BigInteger("-3314319984593760858278411515812711638"))).toString());
        assertEquals("3242880109492316650017264598677871978702328283169718625195907557488489049839/51949378866878705830248689380600089054957177005434967188039518077224316935451", new Rational(new BigInteger("40336671771147629276882242647647319977"), new BigInteger("-196608865417808275141671447690797423867")).divide(new Rational(new BigInteger("264227041626441723889298942995837011553"), new BigInteger("-80395331768842479627185163622810530007"))).toString());
        assertEquals("34269517900508332186866186987635691208107348979356470187587521810791993486150/7500682353632932604053480702050384796148252237853308530347881933410960468021", new Rational(new BigInteger("117674814183337972493417059021604041735"), new BigInteger("-64873948156511183812729838695121813779")).divide(new Rational(new BigInteger("115619328972197199328479967648201794199"), new BigInteger("-291222196851029185150186089755303118090"))).toString());
        assertEquals("13962325554378439045444446830556184158144319426743460944454658627777985540876/39789868726382627682635980197962695046176356780825093099725531775799134412475", new Rational(new BigInteger("316739737085460796824778799141825389876"), new BigInteger("-331004063455453230740092634787443363345")).divide(new Rational(new BigInteger("120209608036239643791110901985953465355"), new BigInteger("-44081382660904365649913928566113244751"))).toString());
        assertEquals("1721645066719003010425186762755785960541044654338380086058181687683127546728/1783393323550535249075298790699258254939909033938740073833405682798774681341", new Rational(new BigInteger("113936112996400746161287195205308662587"), new BigInteger("-10856621808613726140531650173837349506")).divide(new Rational(new BigInteger("328535589613258417254978437103209835197"), new BigInteger("-30221235768739801749263247019304773488"))).toString());
        assertEquals("1024814350118905439448317001662020925745836411584723625227935584683362702192/79915669657937769231051546755894698164757667727364777430457718451561447215", new Rational(new BigInteger("309597999637965530938990977031407924360"), new BigInteger("-24473033114919852787269231507790122830")).divide(new Rational(new BigInteger("228582082563572098650808080402569068235"), new BigInteger("-231710167999181029622293740825329019604"))).toString());
        assertEquals("4071931745322991832474975500273605007495067428370442302153712367246602965818/4173747031306744682170183693460259415748422494256533913700788613330974886075", new Rational(new BigInteger("279925301670790216758405471839755394719"), new BigInteger("-230238575192129423863953830990796745105")).divide(new Rational(new BigInteger("235662991580406915174023314289292730895"), new BigInteger("-189104423120186255859064771469778414286"))).toString());
        assertEquals("37150432307902291968878325904201085927518626342836336782227120899782958394364/21325723432565639900760582632688408220551603741782936813092907435935808925023", new Rational(new BigInteger("219562040640927933570736691322017722174"), new BigInteger("-174855374828030087094196717247889855346")).divide(new Rational(new BigInteger("243924139632990366180219036768435796951"), new BigInteger("-338404873624381735455798141610177610372"))).toString());
        assertEquals("12694126117532583809329723131638673831415450626403194998327643522205341805902/37880580715762056678635151239390362414475033951025117587144873295876598267765", new Rational(new BigInteger("190056907210959247051781013927135751351"), new BigInteger("-333452708951699879007747916936807771070")).divide(new Rational(new BigInteger("227202117114898002234001055178316590379"), new BigInteger("-133582370710077541534807794127285966404"))).toString());
        assertEquals("633269267532718387269333787868069433980215372511527243004141767123774257870/5446506839628892653538477395510625322572961170253307195554409090243582844889", new Rational(new BigInteger("191722859847060089122576408535753392678"), new BigInteger("-258308806665184688517895420785574818989")).divide(new Rational(new BigInteger("84341016629581020703271805832105772404"), new BigInteger("-13212180707879818238872974727814988660"))).toString());
        assertEquals("956378305335009570479235319149147092864878547949227356465242926863984197613/521379664379828425439501732648465604583552345167724376091698130115341353400", new Rational(new BigInteger("287181192643592101709388823358350946810"), new BigInteger("-102604028725792674071473077877354685300")).divide(new Rational(new BigInteger("203258944450692366539128981155816123120"), new BigInteger("-133209044301439120812992253617538535892"))).toString());
        assertEquals("80753881326834292289817031686091530527937193769776836076774655530496815642540/2666213470354393801457113426570909700973159977509242957382003582898624193971", new Rational(new BigInteger("253292174865333362684718584208253005245"), new BigInteger("-12662720692169384235539285424968698973")).divide(new Rational(new BigInteger("210556130484910557660495605947765102927"), new BigInteger("-318817118490803442923261088776288568092"))).toString());
        assertEquals("30631466499817827724388045117830740666359007640293196983749534605011190460275/4567945588639104483412115490185838048062822411689726128840541862895482153292", new Rational(new BigInteger("223455316336664196242553916974305689025"), new BigInteger("-38297017915355804246911875928236966402")).divide(new Rational(new BigInteger("238553591756684185830846586172233538892"), new BigInteger("-274161895111661435661137823322881049702"))).toString());
        assertEquals("21378726108087501944702786853604483541067777069941932904760882142312032041516/24789040330216438088638480048450469188766027021550356685289452509225894320707", new Rational(new BigInteger("179767076339903674364572891522177441466"), new BigInteger("-191344004749525565903761462776801497802")).divide(new Rational(new BigInteger("259104437190660420505110735151539318407"), new BigInteger("-237849182880012982376583215276625869852"))).toString());
        assertEquals("1085818244636550328439676274628131157782777544104764346286656820765630958605/96431847342101735576337358382107011155050352578759883021927602321175893436347", new Rational(new BigInteger("332412858552651095971310222815860368195"), new BigInteger("-316871216435808542807023746459768319669")).divide(new Rational(new BigInteger("304325045445195252386652677905074098863"), new BigInteger("-3266474857092710350887392452873328239"))).toString());
        assertEquals("8153371412841866406095521280104655629071526206979125337591755125763144416951/1554364874497553662909946370683440031435989026819648124407184378142958089565", new Rational(new BigInteger("331910084326148868683483807951715235034"), new BigInteger("-50437197585866634224929240799624486538")).divide(new Rational(new BigInteger("308178278908404954061994219381516496925"), new BigInteger("-245650005765718743840198509687550166015"))).toString());
        assertEquals("37126584610216145368551442350052414218770924848992078349786396851841764879/1922042147275486348239056209753646703185169315388546641829349055404961728575", new Rational(new BigInteger("26854765325767385413781217243574493745"), new BigInteger("-156474897739230306831918150494226285093")).divide(new Rational(new BigInteger("184250845507369058470337680917963444125"), new BigInteger("-20737428251472854029446143922528264113"))).toString());
        assertEquals("10425421576467376514085960651084153673926308519771318138684937463109300691173/1774246718879457689847433107798230379770328048355331337034558639882127185598", new Rational(new BigInteger("259979559132353290427401994671630691927"), new BigInteger("-33239113660109695336030130075238610788")).divide(new Rational(new BigInteger("320269680537613169582265051286051248101"), new BigInteger("-240605567866815715623969969441292291794"))).toString());
        assertEquals("7293996455700697766159458157564651051557435852297254111367929061949174188142/10048043104441787923438643765557414687616053936054909511733026816869843525", new Rational(new BigInteger("305002451097228499259195233047801639838"), new BigInteger("-8658509442543318331145098258491225250")).divide(new Rational(new BigInteger("11604818555802502130413008894181512841"), new BigInteger("-239145502911893712319333631583563492090"))).toString());
        assertEquals("1899559579910462451651617700821271821815858219668041153687194673723551833215/873489270593326829348054351477312163564988176277645368524893953899044317853", new Rational(new BigInteger("264202903396780057639198735626466698095"), new BigInteger("-48462510581638444788759068896777919531")).divide(new Rational(new BigInteger("198264222410446779227153120788623580093"), new BigInteger("-79087531251065518230994180616954949467"))).toString());
        assertEquals("6784975043780632854940322626779944107800034524793764234737537813781468448314/4787748345863879794639893642541060838521141517279994543651916384601430507947", new Rational(new BigInteger("82896790254238099235484521837871175836"), new BigInteger("-281635820687017176313305234675781218641")).divide(new Rational(new BigInteger("67999139231433496463783751382029996268"), new BigInteger("-327393860388159042748315667023631201846"))).toString());
        assertEquals("900588699401214327616820686429627919200931013235590196607155033389164593572/25690355855393289801398987324062206705576516555653278482324955577638542355", new Rational(new BigInteger("32773029678716970711037803677304542826"), new BigInteger("-318440840478392204854877219748167230070")).divide(new Rational(new BigInteger("484052657632710429534159528334924059"), new BigInteger("-164877408325675080207322008101938553532"))).toString());
        assertEquals("40907682962297111605111833789780333468207464906298095495058619529786678876796/8126815298364756830469731349376610604105689838019014287492141509494065423885", new Rational(new BigInteger("310054063922190134856357553238933905736"), new BigInteger("-155780002427185866336744159079099953035")).divide(new Rational(new BigInteger("104337080135344892936102639735628916622"), new BigInteger("-263874515591339785448610641374715719047"))).toString());
        assertEquals("9055981732978025727900691984865929795200436215586069285934837812832210274276/268970085339534339877222429982316658495985709599969065591655452039217071045", new Rational(new BigInteger("214547874044371055889962883719598542253"), new BigInteger("-10190935086996213860424586563505186570")).divide(new Rational(new BigInteger("158358433083973347694618111332039158211"), new BigInteger("-253257650022814232238354418825013274552"))).toString());
        assertEquals("30260368095753548285395241494101160211095875695465360338681406678100787356/696349359181174805658457595514556625741153730482640288308132491882402947725", new Rational(new BigInteger("86988804659920975576386209707854957122"), new BigInteger("-199942396012895589986646495175119718711")).divide(new Rational(new BigInteger("330861240244139895377125023291321245125"), new BigInteger("-33047183259216412156199259798055365810"))).toString());
        assertEquals("21276402245234624999324110193183893682735320893603898765804395623268124392856/8808584847080099026747151897357765824236000333105134729498350050726490219729", new Rational(new BigInteger("253995367412256861172402622295069797776"), new BigInteger("-280400597818283169263391620943585869098")).divide(new Rational(new BigInteger("62828573944686121498297643253251295821"), new BigInteger("-167533781911078318714550522740319911787"))).toString());
        assertEquals("110000903526640141606141251666128698092142104170363416995214231278690285497/515198002253594358274136583642818310043100546636416944396454760865375209040", new Rational(new BigInteger("29511908489693509908400782106856248723"), new BigInteger("-126576534703945369431972402783995208144")).divide(new Rational(new BigInteger("248285183434474913631746733882077226885"), new BigInteger("-227367712171797080172664056936630999479"))).toString());
        assertEquals("22067922736420922437951450340851017721976701157071895275438144267098966778167/13184429635663874263337163749025360514494040015439755162004849991080285445943", new Rational(new BigInteger("212187796725395075949555244512583427141"), new BigInteger("-239231148206680223220414554202021378379")).divide(new Rational(new BigInteger("165335029336648679295553743496645369551"), new BigInteger("-312005540520980219573777316828514772961"))).toString());
        assertEquals("263964269973822655459224728869486734774915722128615712964596421438414036525/444527720489073579869938105402289978176638127960676458584522115049586808036", new Rational(new BigInteger("155846944146459677199921260066471630800"), new BigInteger("-213483885160049684077926586207035189592")).divide(new Rational(new BigInteger("199896404990745353919486695041876785168"), new BigInteger("-162599081145105841706909370491625569958"))).toString());
        assertEquals("44676156362620562931581063340565841740082510848297539234442261580568599723040/13925977647668218567825850526615733138832151282807029865433520831274501576269", new Rational(new BigInteger("245676922768807476157835852318588849004"), new BigInteger("-218322319514869303860873660490249595999")).divide(new Rational(new BigInteger("63786321428853087887484069179957099731"), new BigInteger("-181849218311248316439079029181923620760"))).toString());
        assertEquals("12323820758067008280027597656506068874307047852802496855337921378741927931/2669572807396164228854642715941725823828104673579288906713260392414069772", new Rational(new BigInteger("271003231632533265209489870462493008942"), new BigInteger("-177816371858003427126949441287804467634")).divide(new Rational(new BigInteger("80800438673214754701728357231949993156"), new BigInteger("-244745433183071572186197430280410983351"))).toString());
        assertEquals("1197445601667504578971406120025135605710471630448537666653440151919575756724/1378363773508352419226674996274296898812984880139100629706616852880731397483", new Rational(new BigInteger("331855608773139640778260762865197970662"), new BigInteger("-251839656811002015312476236325193395316")).divide(new Rational(new BigInteger("262712640122651833416372117171502535124"), new BigInteger("-173199992287406033441944601419031841696"))).toString());
        assertEquals("9316007235417568424285620023616418844576783923752636825961509096977626384561/19478181145112525943239691137589447432638099434117716894935019538886552383276", new Rational(new BigInteger("124460169005197820741788473328780053653"), new BigInteger("-244258796130250036076947539910080185476")).divide(new Rational(new BigInteger("239232094651680788889886782412412697153"), new BigInteger("-224553943077849381113056550526108629511"))).toString());
        assertEquals("2686740113212080028419473862040463116398217407307789277480168954454211976360/12157432908539523558674116539403438722435299074685760480150718142128090437727", new Rational(new BigInteger("94253692382835884519442285272130976990"), new BigInteger("-215550047337315813942764090551092339091")).divide(new Rational(new BigInteger("282009516089650160614370976781960024985"), new BigInteger("-142527048293195045779498771212896625820"))).toString());
        assertEquals("45472305477527129984665952616426734308158697711395080964863676529929977110/70976758256038073646923280380512932653847944759458244095429551656014608491", new Rational(new BigInteger("318675226909056786406008885911838444200"), new BigInteger("-171687041399536067375418942421369212892")).divide(new Rational(new BigInteger("297653599990834860071416608071588145060"), new BigInteger("-102738014063336208892522209303827292876"))).toString());
    }

    @Test
    public void testMax() {

        assertThrows(NullPointerException.class, () -> {
            Rational rational = new Rational(1, 2).max(null);
        });

        assertThrows(NullPointerException.class, () -> {
            Rational rational  = null;
            Rational rational1 = rational.max(Rational.ONE);
        });

        assertEquals("-772005092/1496367301", new Rational(1544010184L, -2992734602L).max(new Rational(1577052672L, -443343642L)).toString());
        assertEquals("-87239356/657502155", new Rational(1251170211L, -1648243587L).max(new Rational(87239356L, -657502155L)).toString());
        assertEquals("-82336922/575783887", new Rational(164673844L, -1151567774L).max(new Rational(591069462L, -3325115052L)).toString());
        assertEquals("-1787364028/3198897225", new Rational(1787364028L, -3198897225L).max(new Rational(1672348398L, -187592474L)).toString());
        assertEquals("-1891055839/3826451366", new Rational(804081343L, -1494549933L).max(new Rational(1891055839L, -3826451366L)).toString());
        assertEquals("-346208185/1950529758", new Rational(692416370L, -3901059516L).max(new Rational(2038149205L, -575978546L)).toString());
        assertEquals("-1569436042/1225140565", new Rational(1729891949L, -118511764L).max(new Rational(1569436042L, -1225140565L)).toString());
        assertEquals("-1373154453/2924577097", new Rational(1373154453L, -2924577097L).max(new Rational(1823637077L, -3097675216L)).toString());
        assertEquals("-1340369519/4252874624", new Rational(1340369519L, -4252874624L).max(new Rational(896598467L, -1841917197L)).toString());
        assertEquals("-82807929/435108332", new Rational(1513050018L, -84535850L).max(new Rational(82807929L, -435108332L)).toString());
        assertEquals("-1778718107/3879332609", new Rational(633848693L, -1157342319L).max(new Rational(1778718107L, -3879332609L)).toString());
        assertEquals("-446779509/2777840683", new Rational(661213799L, -1660671768L).max(new Rational(446779509L, -2777840683L)).toString());
        assertEquals("-199126637/2130049077", new Rational(199126637L, -2130049077L).max(new Rational(385617595L, -3504630495L)).toString());
        assertEquals("-387123124/1327015611", new Rational(774246248L, -2654031222L).max(new Rational(1110557660L, -1437531553L)).toString());
        assertEquals("-6042071/23631570", new Rational(253766982L, -992525940L).max(new Rational(2025435007L, -2509175776L)).toString());
        assertEquals("-1139663847/4224510572", new Rational(1139663847L, -4224510572L).max(new Rational(1411816604L, -4185502554L)).toString());
        assertEquals("-384268807/721660886", new Rational(384268807L, -721660886L).max(new Rational(559038161L, -18386827L)).toString());
        assertEquals("-546794916/1340452601", new Rational(1537097703L, -3547130837L).max(new Rational(1640384748L, -4021357803L)).toString());
        assertEquals("-544793147/1075739193", new Rational(225910553L, -387428151L).max(new Rational(544793147L, -1075739193L)).toString());
        assertEquals("-246748264/2158790103", new Rational(246748264L, -2158790103L).max(new Rational(975331801L, -127047510L)).toString());
        assertEquals("-979598273/4204812095", new Rational(979598273L, -4204812095L).max(new Rational(1589491269L, -2367144211L)).toString());
        assertEquals("-3725723/100614897", new Rational(85691629L, -2314142631L).max(new Rational(1486057735L, -1316590718L)).toString());
        assertEquals("-1105487371/2179470668", new Rational(1105487371L, -2179470668L).max(new Rational(1345766507L, -1594838570L)).toString());
        assertEquals("-180741259/2559401851", new Rational(180741259L, -2559401851L).max(new Rational(1957015087L, -43358216L)).toString());
        assertEquals("-1073608649/1183372217", new Rational(2147217298L, -2366744434L).max(new Rational(1945007003L, -1959400958L)).toString());
        assertEquals("-61887161/379654657", new Rational(556984449L, -3416891913L).max(new Rational(1308636473L, -710516549L)).toString());
        assertEquals("-19285490/520342511", new Rational(134998430L, -3642397577L).max(new Rational(624329992L, -2509447818L)).toString());
        assertEquals("-308475153/3988452683", new Rational(308475153L, -3988452683L).max(new Rational(346985371L, -3973353984L)).toString());
        assertEquals("-399713522/2438902027", new Rational(399713522L, -2438902027L).max(new Rational(638921912L, -1179817436L)).toString());
        assertEquals("-194639810/4031245839", new Rational(253334877L, -2234362936L).max(new Rational(194639810L, -4031245839L)).toString());
        assertEquals("-2702250/95620727", new Rational(8106750L, -286862181L).max(new Rational(470374232L, -1534947267L)).toString());
        assertEquals("-2144543589/4039352948", new Rational(2144543589L, -4039352948L).max(new Rational(1537934671L, -1468126085L)).toString());
        assertEquals("-502079311/2410073136", new Rational(200448122L, -640927252L).max(new Rational(502079311L, -2410073136L)).toString());
        assertEquals("-354233125/1424450652", new Rational(492839291L, -1087472897L).max(new Rational(1062699375L, -4273351956L)).toString());
        assertEquals("-143810543/4217545813", new Rational(1928742021L, -2549383100L).max(new Rational(143810543L, -4217545813L)).toString());
        assertEquals("-1283461475/1870042827", new Rational(1283461475L, -1870042827L).max(new Rational(1020094953L, -341046355L)).toString());
        assertEquals("-1057961065/2900060566", new Rational(1529779700L, -1500867482L).max(new Rational(1057961065L, -2900060566L)).toString());
        assertEquals("-27545222/19882897", new Rational(688630550L, -497072425L).max(new Rational(1620020127L, -398282412L)).toString());
        assertEquals("-368966723/622872307", new Rational(1020251468L, -459494817L).max(new Rational(1106900169L, -1868616921L)).toString());
        assertEquals("-676932451/2617104839", new Rational(815665538L, -333841683L).max(new Rational(676932451L, -2617104839L)).toString());
        assertEquals("-764380679/3432617507", new Rational(764380679L, -3432617507L).max(new Rational(1243354663L, -3867560512L)).toString());
        assertEquals("-903841694/3193351449", new Rational(1377294109L, -2800607712L).max(new Rational(903841694L, -3193351449L)).toString());
        assertEquals("-1201684138/3314825553", new Rational(2006752630L, -33322355L).max(new Rational(1201684138L, -3314825553L)).toString());
        assertEquals("-601919724/2143359917", new Rational(842135042L, -2479880189L).max(new Rational(1203839448L, -4286719834L)).toString());
        assertEquals("-566656733/1334494995", new Rational(566656733L, -1334494995L).max(new Rational(1445219471L, -826942399L)).toString());
        assertEquals("-246477695/342963136", new Rational(352443413L, -180252822L).max(new Rational(739433085L, -1028889408L)).toString());
        assertEquals("-1575032617/4200182784", new Rational(1575032617L, -4200182784L).max(new Rational(1839159765L, -3605007551L)).toString());
        assertEquals("-32237703/147538112", new Rational(128950812L, -590152448L).max(new Rational(546991797L, -922933674L)).toString());
        assertEquals("-349530759/517112764", new Rational(1398123036L, -2068451056L).max(new Rational(2040854370L, -831651606L)).toString());
        assertEquals("-86951071/1194880742", new Rational(86951071L, -1194880742L).max(new Rational(1607818099L, -2484017229L)).toString());
        assertEquals("-528574438/1951635215", new Rational(1133048805L, -1473426603L).max(new Rational(1057148876L, -3903270430L)).toString());
        assertEquals("-465031860/1924537013", new Rational(1687740609L, -2446565864L).max(new Rational(465031860L, -1924537013L)).toString());
        assertEquals("-106707371/397382845", new Rational(1623803780L, -1180490040L).max(new Rational(640244226L, -2384297070L)).toString());
        assertEquals("-228783279/522093472", new Rational(1138902736L, -1370495928L).max(new Rational(915133116L, -2088373888L)).toString());
        assertEquals("-71383282/288356217", new Rational(999365948L, -4036987038L).max(new Rational(2004915974L, -3727857370L)).toString());
        assertEquals("-96304027/1046059410", new Rational(984960668L, -314919596L).max(new Rational(192608054L, -2092118820L)).toString());
        assertEquals("-112092570/444939583", new Rational(833487928L, -2290418094L).max(new Rational(448370280L, -1779758332L)).toString());
        assertEquals("-1647946895/2932843733", new Rational(1647946895L, -2932843733L).max(new Rational(1149558372L, -1943418697L)).toString());
        assertEquals("-321599890/1800395667", new Rational(321599890L, -1800395667L).max(new Rational(716246365L, -493955437L)).toString());
        assertEquals("-200772685/519535483", new Rational(1003863425L, -2597677415L).max(new Rational(912215162L, -1781988020L)).toString());
        assertEquals("-14173856/51634017", new Rational(99216992L, -361438119L).max(new Rational(1644050403L, -3018425970L)).toString());
        assertEquals("-258585349/569835742", new Rational(1480659954L, -1302467L).max(new Rational(775756047L, -1709507226L)).toString());
        assertEquals("-111445691/1026738702", new Rational(1446045858L, -1268473841L).max(new Rational(111445691L, -1026738702L)).toString());
        assertEquals("-980138823/2320453420", new Rational(1707574998L, -752052980L).max(new Rational(980138823L, -2320453420L)).toString());
        assertEquals("-290669397/2234938999", new Rational(1751742205L, -150091429L).max(new Rational(290669397L, -2234938999L)).toString());
        assertEquals("-1020558235/1854008219", new Rational(810100892L, -96734786L).max(new Rational(2041116470L, -3708016438L)).toString());
        assertEquals("-641975851/3491813360", new Rational(1877774645L, -1959408329L).max(new Rational(641975851L, -3491813360L)).toString());
        assertEquals("-83110227/402039926", new Rational(2137349567L, -4124770552L).max(new Rational(664881816L, -3216319408L)).toString());
        assertEquals("-1518933987/4115082463", new Rational(1518933987L, -4115082463L).max(new Rational(1302102912L, -1253248966L)).toString());
        assertEquals("-468250615/651744263", new Rational(2068965333L, -277948577L).max(new Rational(468250615L, -651744263L)).toString());
        assertEquals("-222097721/261010031", new Rational(1953905897L, -1712466803L).max(new Rational(1332586326L, -1566060186L)).toString());
        assertEquals("-744215/2236936", new Rational(1008176759L, -1661323033L).max(new Rational(205403340L, -617394336L)).toString());
        assertEquals("-407795389/1573263209", new Rational(815590778L, -3146526418L).max(new Rational(1024198846L, -2085613814L)).toString());
        assertEquals("-237982451/248121302", new Rational(1704144004L, -1087967471L).max(new Rational(951929804L, -992485208L)).toString());
        assertEquals("-621619022/1265441197", new Rational(1995980745L, -3121013683L).max(new Rational(1243238044L, -2530882394L)).toString());
        assertEquals("-275858467/501822197", new Rational(600787173L, -768034821L).max(new Rational(551716934L, -1003644394L)).toString());
        assertEquals("-1965832/155986403", new Rational(33419144L, -2651768851L).max(new Rational(1443013884L, -2848589292L)).toString());
        assertEquals("-1354652213/2001889667", new Rational(1229361531L, -1658490331L).max(new Rational(1354652213L, -2001889667L)).toString());
        assertEquals("-1100335155/3771860938", new Rational(1754850609L, -2415611999L).max(new Rational(1100335155L, -3771860938L)).toString());
        assertEquals("-173984721/2872085266", new Rational(173984721L, -2872085266L).max(new Rational(199796777L, -2775990294L)).toString());
        assertEquals("-653763493/849398019", new Rational(1807033082L, -828104684L).max(new Rational(653763493L, -849398019L)).toString());
        assertEquals("-793650818/747520003", new Rational(1245266208L, -278112266L).max(new Rational(1587301636L, -1495040006L)).toString());
        assertEquals("-1075670079/2711609936", new Rational(1075670079L, -2711609936L).max(new Rational(1815586231L, -4189598528L)).toString());
        assertEquals("-1908979853/3435072310", new Rational(1908979853L, -3435072310L).max(new Rational(1332075203L, -309541063L)).toString());
        assertEquals("-455620745/554441934", new Rational(1366862235L, -1663325802L).max(new Rational(1586138335L, -1496055685L)).toString());
        assertEquals("-802317476/1696201917", new Rational(1106769856L, -1180904660L).max(new Rational(1604634952L, -3392403834L)).toString());
        assertEquals("-1314727366/2109816581", new Rational(608021100L, -547806586L).max(new Rational(1314727366L, -2109816581L)).toString());
        assertEquals("-1716782328/3558307643", new Rational(585835260L, -229163298L).max(new Rational(1716782328L, -3558307643L)).toString());
        assertEquals("-1813577489/2100959150", new Rational(1813577489L, -2100959150L).max(new Rational(1474535104L, -1394953915L)).toString());
        assertEquals("-80801192/48646539", new Rational(415854921L, -235261550L).max(new Rational(1131216688L, -681051546L)).toString());
        assertEquals("-22206631/360820068", new Rational(155446417L, -2525740476L).max(new Rational(759752514L, -3366213614L)).toString());
        assertEquals("-802649114/2355600637", new Rational(802649114L, -2355600637L).max(new Rational(1643817132L, -3060311587L)).toString());
        assertEquals("-325340753/2791042755", new Rational(1807268321L, -229978759L).max(new Rational(325340753L, -2791042755L)).toString());
        assertEquals("-211320975/873154949", new Rational(211320975L, -873154949L).max(new Rational(619982787L, -146867758L)).toString());
        assertEquals("-195315133/4075813772", new Rational(1834454605L, -1557060101L).max(new Rational(195315133L, -4075813772L)).toString());
        assertEquals("-90085913/737394677", new Rational(967807101L, -632900703L).max(new Rational(90085913L, -737394677L)).toString());
        assertEquals("-2430103/1988742868", new Rational(1656291079L, -269124537L).max(new Rational(4860206L, -3977485736L)).toString());
        assertEquals("-1077045229/2818607153", new Rational(1077045229L, -2818607153L).max(new Rational(757803673L, -928970958L)).toString());
        assertEquals("-6642281/1117427728", new Rational(1561863417L, -2984965394L).max(new Rational(13284562L, -2234855456L)).toString());
        assertEquals("-1534277787/2567827510", new Rational(1964531860L, -509269921L).max(new Rational(1534277787L, -2567827510L)).toString());

        assertEquals("-231738202695864434779309518948494138514/254603702205449167411194112226315356181", new Rational(new BigInteger("231738202695864434779309518948494138514"), new BigInteger("-254603702205449167411194112226315356181")).max(new Rational(new BigInteger("232888126575589154442274747599340864134"), new BigInteger("-253367819495608368147797907773573766977"))).toString());
        assertEquals("-1839463660882169304674462182913778533/21531538250773149130512189214811503424", new Rational(new BigInteger("203924810965349485005522523256920721502"), new BigInteger("-125086008886264012498239990616730790031")).max(new Rational(new BigInteger("16555172947939523742070159646224006797"), new BigInteger("-193783844256958342174609702933303530816"))).toString());
        assertEquals("-19315821185434156402269708250499870049/59342406815297395167932654169836437123", new Rational(new BigInteger("67775940369532600572589094714086116352"), new BigInteger("-66146730296986869149447749043011985539")).max(new Rational(new BigInteger("38631642370868312804539416500999740098"), new BigInteger("-118684813630594790335865308339672874246"))).toString());
        assertEquals("-7315111075937023025409764540869497307/40922798788048277870465306799404584468", new Rational(new BigInteger("190057178345886356180394249949672055154"), new BigInteger("-224305771153190286299623389514197488246")).max(new Rational(new BigInteger("58520888607496184203278116326955978456"), new BigInteger("-327382390304386222963722454395236675744"))).toString());
        assertEquals("-30650608951129097376831573486012874724/53913857119878415755590632395110725811", new Rational(new BigInteger("222939496942805424397702362230606490203"), new BigInteger("-245056873826807813436349782647297187848")).max(new Rational(new BigInteger("183903653706774584260989440916077248344"), new BigInteger("-323483142719270494533543794370664354866"))).toString());
        assertEquals("-136010258480158944284496101959439812832/335870488707764253678971223441759392837", new Rational(new BigInteger("136010258480158944284496101959439812832"), new BigInteger("-335870488707764253678971223441759392837")).max(new Rational(new BigInteger("160371938191700667931896655208692349814"), new BigInteger("-242458381697025733853613240033871892080"))).toString());
        assertEquals("-19926933893452443429212696112570319283/238599795970655832592436881725104917782", new Rational(new BigInteger("67431902803944593456179341856084125734"), new BigInteger("-199107527557796520457808746194792572765")).max(new Rational(new BigInteger("19926933893452443429212696112570319283"), new BigInteger("-238599795970655832592436881725104917782"))).toString());
        assertEquals("-138467814864117217550955364939891738683/319754304532189138708214184723857169797", new Rational(new BigInteger("133376571457949608125835726771170748099"), new BigInteger("-122992298244610186066693982245263667050")).max(new Rational(new BigInteger("138467814864117217550955364939891738683"), new BigInteger("-319754304532189138708214184723857169797"))).toString());
        assertEquals("-155185996785319062708768755294544110189/174458636198563468126872053640484865802", new Rational(new BigInteger("204894341209964886486118308779427177545"), new BigInteger("-33944020557110945235660969506541340372")).max(new Rational(new BigInteger("155185996785319062708768755294544110189"), new BigInteger("-174458636198563468126872053640484865802"))).toString());
        assertEquals("-57196693443998216173339998424750215042/292428442611711557916744042297334378873", new Rational(new BigInteger("332410570951969320412846847655156881652"), new BigInteger("-169519960712139961502058649251867134527")).max(new Rational(new BigInteger("57196693443998216173339998424750215042"), new BigInteger("-292428442611711557916744042297334378873"))).toString());
        assertEquals("-281745680268956337886181520820091523530/170660289855246412978003907868364080623", new Rational(new BigInteger("262778047709126643385572487231519319978"), new BigInteger("-143626189933920016483618131725014915644")).max(new Rational(new BigInteger("281745680268956337886181520820091523530"), new BigInteger("-170660289855246412978003907868364080623"))).toString());
        assertEquals("-155315068360687511944378061907179508915/149651732709797823905059489117041508438", new Rational(new BigInteger("155315068360687511944378061907179508915"), new BigInteger("-149651732709797823905059489117041508438")).max(new Rational(new BigInteger("148637952536382839189642232060554284189"), new BigInteger("-114172166887881263290040703061930685266"))).toString());
        assertEquals("-168720963322644512460629287412514982904/176391850834620024513003008586630309159", new Rational(new BigInteger("194040379179697363458549483795899766205"), new BigInteger("-28495060637514414621752236244708405017")).max(new Rational(new BigInteger("168720963322644512460629287412514982904"), new BigInteger("-176391850834620024513003008586630309159"))).toString());
        assertEquals("-75806234085861670612192370427518685027/155074581605576115353887347127228918964", new Rational(new BigInteger("310149872780720361823885913419005716524"), new BigInteger("-83197443669148574059481568238797301489")).max(new Rational(new BigInteger("151612468171723341224384740855037370054"), new BigInteger("-310149163211152230707774694254457837928"))).toString());
        assertEquals("-275347712579304404989891595037715461890/233108088177999610963186997862400297003", new Rational(new BigInteger("275347712579304404989891595037715461890"), new BigInteger("-233108088177999610963186997862400297003")).max(new Rational(new BigInteger("199324581521426373284080262886407748873"), new BigInteger("-149599258784872304700531145828188992577"))).toString());
        assertEquals("-1304123143603418976907082016012813967/2025640883368734138384273753068739313", new Rational(new BigInteger("129108191216738478713801119585268582733"), new BigInteger("-200538447453504679700043101553805191987")).max(new Rational(new BigInteger("242585876338056139979588492476516183378"), new BigInteger("-17319785891988237529377997180475242600"))).toString());
        assertEquals("-24121543720739839537476345363864892519/159862993371921303829544141743564560425", new Rational(new BigInteger("108882370735630350464019739550414926751"), new BigInteger("-289076164443568357569631433678877106901")).max(new Rational(new BigInteger("24121543720739839537476345363864892519"), new BigInteger("-159862993371921303829544141743564560425"))).toString());
        assertEquals("-57862054297509441393829165769566562786/78265516949436170346998302451378669545", new Rational(new BigInteger("115724108595018882787658331539133125572"), new BigInteger("-156531033898872340693996604902757339090")).max(new Rational(new BigInteger("121077604671310523353897014172013015214"), new BigInteger("-58394346931121478396255048720522835577"))).toString());
        assertEquals("-45516407869893291785968183084521846611/117106981864819927742451985918180086255", new Rational(new BigInteger("45516407869893291785968183084521846611"), new BigInteger("-117106981864819927742451985918180086255")).max(new Rational(new BigInteger("79723566496818061099977980521198131519"), new BigInteger("-30042077590617015750886066182074316797"))).toString());
        assertEquals("-305129836148080484202333963211777680491/163800346995741248473381433940615055238", new Rational(new BigInteger("292922772585096466983404763470153979629"), new BigInteger("-58282673813085707134461379872168120804")).max(new Rational(new BigInteger("305129836148080484202333963211777680491"), new BigInteger("-163800346995741248473381433940615055238"))).toString());
        assertEquals("-142057613362720818821082098975686023182/272824124370609734743613132750177037855", new Rational(new BigInteger("61058314466005850987926673033642147404"), new BigInteger("-65870986047779612115321398039914256081")).max(new Rational(new BigInteger("142057613362720818821082098975686023182"), new BigInteger("-272824124370609734743613132750177037855"))).toString());
        assertEquals("-87247004911177271826790460506373312537/125292890994601151519119866234286965140", new Rational(new BigInteger("115997933602452925586720434680596420021"), new BigInteger("-120588446937657182238562101198512973060")).max(new Rational(new BigInteger("87247004911177271826790460506373312537"), new BigInteger("-125292890994601151519119866234286965140"))).toString());
        assertEquals("-77474603776681917102783799238701171741/166401991684192635309093990684654477614", new Rational(new BigInteger("154949207553363834205567598477402343482"), new BigInteger("-332803983368385270618187981369308955228")).max(new Rational(new BigInteger("320902036500195735821112308478228583775"), new BigInteger("-242262227748912114563579538407957959367"))).toString());
        assertEquals("-36165597795200143658363506175684401501/162208080667159251493751033039803517537", new Rational(new BigInteger("36165597795200143658363506175684401501"), new BigInteger("-162208080667159251493751033039803517537")).max(new Rational(new BigInteger("234283719143820973277781073636387809510"), new BigInteger("-248832858530876372544002299180393078650"))).toString());
        assertEquals("-38422219718979730592588393153938236917/274747677766805925517928018573239764396", new Rational(new BigInteger("38422219718979730592588393153938236917"), new BigInteger("-274747677766805925517928018573239764396")).max(new Rational(new BigInteger("69735998362858645535443646920841972893"), new BigInteger("-335750333377930265467683218541628611899"))).toString());
        assertEquals("-78669012792860868772605112722826549933/69858158640219986221462332148444871943", new Rational(new BigInteger("320329763782069540327419493205072353360"), new BigInteger("-8000553064070397722377134550663097917")).max(new Rational(new BigInteger("157338025585721737545210225445653099866"), new BigInteger("-139716317280439972442924664296889743886"))).toString());
        assertEquals("-166349508904732306391294702314693794675/197235506059513679043643553097036655106", new Rational(new BigInteger("166349508904732306391294702314693794675"), new BigInteger("-197235506059513679043643553097036655106")).max(new Rational(new BigInteger("237169836245335403401797230015888767283"), new BigInteger("-158840647766949373186480511508901208686"))).toString());
        assertEquals("-24973197806091027766953223530633649198/135121026527528528074196946647672549605", new Rational(new BigInteger("203384999792336588890213137953490844417"), new BigInteger("-239868493946900866841919787365198064637")).max(new Rational(new BigInteger("49946395612182055533906447061267298396"), new BigInteger("-270242053055057056148393893295345099210"))).toString());
        assertEquals("-48082268931374523069856311145805334281/61189509931030107924237210267666497366", new Rational(new BigInteger("307448037225982998813247560376779324158"), new BigInteger("-263380357325099464566031628649902573464")).max(new Rational(new BigInteger("144246806794123569209568933437416002843"), new BigInteger("-183568529793090323772711630802999492098"))).toString());
        assertEquals("-77810397575991673954558229479322484345/306956891238524306724199588915748363023", new Rational(new BigInteger("77810397575991673954558229479322484345"), new BigInteger("-306956891238524306724199588915748363023")).max(new Rational(new BigInteger("304657744865091656484927920422701380590"), new BigInteger("-43011948052169147206542770020667589115"))).toString());
        assertEquals("-23726196730778516155374564678725535869/263762973690119925956706548952761561463", new Rational(new BigInteger("23726196730778516155374564678725535869"), new BigInteger("-263762973690119925956706548952761561463")).max(new Rational(new BigInteger("251647142037466742506968836321685928957"), new BigInteger("-257903954189408574941032922143443790032"))).toString());
        assertEquals("-91627182176878767050853252382746777931/91504709134594001526470539297288611614", new Rational(new BigInteger("274881546530636301152559757148240333793"), new BigInteger("-274514127403782004579411617891865834842")).max(new Rational(new BigInteger("231100184740463456078903789662969177864"), new BigInteger("-223526457987380450754224302977935074449"))).toString());
        assertEquals("-92186496439905440071704363497148728595/327614957098858254419713885259046832366", new Rational(new BigInteger("133709074166891734936675525670283543765"), new BigInteger("-244732381218382591884993715407159604731")).max(new Rational(new BigInteger("92186496439905440071704363497148728595"), new BigInteger("-327614957098858254419713885259046832366"))).toString());
        assertEquals("-82181881973589663727860002506879372309/55521904957263175247526175677298376762", new Rational(new BigInteger("247895927158972191034480205889938382615"), new BigInteger("-74489295271961002747676274127186403068")).max(new Rational(new BigInteger("82181881973589663727860002506879372309"), new BigInteger("-55521904957263175247526175677298376762"))).toString());
        assertEquals("-199125728497047525929406555691811668201/326354092707598868575708254987345713348", new Rational(new BigInteger("158169615414587748228532770527213377418"), new BigInteger("-16718607162431955389357984689669517661")).max(new Rational(new BigInteger("199125728497047525929406555691811668201"), new BigInteger("-326354092707598868575708254987345713348"))).toString());
        assertEquals("-74378278615087523761537341721918268457/298163016387032680737598684451978242054", new Rational(new BigInteger("59542193143669620609919960283391911842"), new BigInteger("-112150220137382372688978766006163498398")).max(new Rational(new BigInteger("74378278615087523761537341721918268457"), new BigInteger("-298163016387032680737598684451978242054"))).toString());
        assertEquals("-107001795827055117653346809394633472673/227928638263821280212076152740205993233", new Rational(new BigInteger("107001795827055117653346809394633472673"), new BigInteger("-227928638263821280212076152740205993233")).max(new Rational(new BigInteger("200627126007967841175561669440560965977"), new BigInteger("-280655197635605975003937844588214054283"))).toString());
        assertEquals("-22252543165766674316025240905083295162/80489910445094005473983084919959394725", new Rational(new BigInteger("22252543165766674316025240905083295162"), new BigInteger("-80489910445094005473983084919959394725")).max(new Rational(new BigInteger("171559400872753012069419579885419203506"), new BigInteger("-83989525074139820083695046019913988015"))).toString());
        assertEquals("-39772437384132528062398876883560048805/77521383324720425671853053821140134616", new Rational(new BigInteger("39772437384132528062398876883560048805"), new BigInteger("-77521383324720425671853053821140134616")).max(new Rational(new BigInteger("169962273805034616105742334798953473855"), new BigInteger("-183561847287219061123335966195750776775"))).toString());
        assertEquals("-33025217446953944586139084809013276728/5167554431546241161580779493201790687", new Rational(new BigInteger("33025217446953944586139084809013276728"), new BigInteger("-5167554431546241161580779493201790687")).max(new Rational(new BigInteger("188478505713612802962317194386052676185"), new BigInteger("-28106058353547385596002725349143737695"))).toString());
        assertEquals("-242179378764137366982058380827690761837/201370572326544141548164243448576478466", new Rational(new BigInteger("198735853737512830957565951614617946185"), new BigInteger("-48638356555209052330175752637884385077")).max(new Rational(new BigInteger("242179378764137366982058380827690761837"), new BigInteger("-201370572326544141548164243448576478466"))).toString());
        assertEquals("-320904166162752866087783899984807706983/197389684188212970175700073946652003670", new Rational(new BigInteger("222017786716274188636435953242884774273"), new BigInteger("-92949312026604831971848308128029107763")).max(new Rational(new BigInteger("320904166162752866087783899984807706983"), new BigInteger("-197389684188212970175700073946652003670"))).toString());
        assertEquals("-235582468743615596932772281452357386067/29490042212487750444618391803648047404", new Rational(new BigInteger("235582468743615596932772281452357386067"), new BigInteger("-29490042212487750444618391803648047404")).max(new Rational(new BigInteger("319298354773386837030858669736696959363"), new BigInteger("-24507923709437794896780662736818933601"))).toString());
        assertEquals("-9787405971219229996923560563503005813/3827323001123589809850526678213639403", new Rational(new BigInteger("225110337338042289929241892960569133699"), new BigInteger("-88028429025842565626562113598913706269")).max(new Rational(new BigInteger("59290229612998334636945450047642685048"), new BigInteger("-9197240104727802870821802395798103429"))).toString());
        assertEquals("-22113904780548721213833455495850610162/62182398326826371823624876402104052781", new Rational(new BigInteger("194459585841850679128414514099436564182"), new BigInteger("-19328349873488141700538447764374813912")).max(new Rational(new BigInteger("88455619122194884855333821983402440648"), new BigInteger("-248729593307305487294499505608416211124"))).toString());
        assertEquals("-91554168513532075388477710666276119343/331766849564204393688069426404829911884", new Rational(new BigInteger("91554168513532075388477710666276119343"), new BigInteger("-331766849564204393688069426404829911884")).max(new Rational(new BigInteger("280859388804389633129531286237080912502"), new BigInteger("-183721914660873940244850225573816737484"))).toString());
        assertEquals("-96718570650588375767578380352960367611/222894513889700367858002084954363320149", new Rational(new BigInteger("233168421190502019642807478201901065715"), new BigInteger("-264914546815864504640801778929013613662")).max(new Rational(new BigInteger("96718570650588375767578380352960367611"), new BigInteger("-222894513889700367858002084954363320149"))).toString());
        assertEquals("-817755003399241464106249539948945059/103194547279038035219603249660812604661", new Rational(new BigInteger("7380010356500886554300665926726138762"), new BigInteger("-207116808449782789806372213657291755497")).max(new Rational(new BigInteger("1635510006798482928212499079897890118"), new BigInteger("-206389094558076070439206499321625209322"))).toString());
        assertEquals("-18710295719280749605716910480667100991/36016803608614166447255369906499245353", new Rational(new BigInteger("130972070034965247240018373364669706937"), new BigInteger("-252117625260299165130787589345494717471")).max(new Rational(new BigInteger("156719890886133130474366840103561911476"), new BigInteger("-21314114915148300658975401124335489030"))).toString());
        assertEquals("-66065462239270748910153863898043359238/246066608919396276829788842786164878541", new Rational(new BigInteger("131920270403253695105331638916443555809"), new BigInteger("-321986433809259365097497466365860939401")).max(new Rational(new BigInteger("66065462239270748910153863898043359238"), new BigInteger("-246066608919396276829788842786164878541"))).toString());
        assertEquals("-67612298254398420419575593693717984365/198319497607104371625180555898780024497", new Rational(new BigInteger("67612298254398420419575593693717984365"), new BigInteger("-198319497607104371625180555898780024497")).max(new Rational(new BigInteger("170600759273143252418304084596378721559"), new BigInteger("-259176948241405481060120352715518781313"))).toString());
        assertEquals("-48064420980260775481969600904214827769/266033160028247256721314301904481237323", new Rational(new BigInteger("48064420980260775481969600904214827769"), new BigInteger("-266033160028247256721314301904481237323")).max(new Rational(new BigInteger("202787433736844887535119818766796218921"), new BigInteger("-143683756478528783816981403891417505978"))).toString());
        assertEquals("-176849453861361740859945930582795400217/286094341841223258743255473162560214925", new Rational(new BigInteger("176849453861361740859945930582795400217"), new BigInteger("-286094341841223258743255473162560214925")).max(new Rational(new BigInteger("164526257906714470358693870568870856831"), new BigInteger("-147487953040558733965553218749605402887"))).toString());
        assertEquals("-327843244094593976587502450509134311503/140053826521377812209937927810693244503", new Rational(new BigInteger("113587033733261185927848843670269949791"), new BigInteger("-1138713842713304316592353591839277575")).max(new Rational(new BigInteger("327843244094593976587502450509134311503"), new BigInteger("-140053826521377812209937927810693244503"))).toString());
        assertEquals("-17488720100447892372738213180603333217/73480452905484138840942928699698013105", new Rational(new BigInteger("88367017017904309096186467910446224983"), new BigInteger("-16383344144186113518331081301040613115")).max(new Rational(new BigInteger("17488720100447892372738213180603333217"), new BigInteger("-73480452905484138840942928699698013105"))).toString());
        assertEquals("-10360381908464694716712399952989812903/64862097179976123021554650946496867524", new Rational(new BigInteger("180427410651382135176601719283616333924"), new BigInteger("-123840102241378368701328879680870923749")).max(new Rational(new BigInteger("41441527633858778866849599811959251612"), new BigInteger("-259448388719904492086218603785987470096"))).toString());
        assertEquals("-36138495069914713558178032808433829327/64713379760684675279847775504543168755", new Rational(new BigInteger("180692475349573567790890164042169146635"), new BigInteger("-323566898803423376399238877522715843775")).max(new Rational(new BigInteger("263242370747837264063971667757070716043"), new BigInteger("-317673093914205716744832436404413452986"))).toString());
        assertEquals("-2421181954828550015493937677639919205/70030429144964222356181143452176649983", new Rational(new BigInteger("7263545864485650046481813032919757615"), new BigInteger("-210091287434892667068543430356529949949")).max(new Rational(new BigInteger("174958501394687789684621371143430476711"), new BigInteger("-106219624987997668767524128686764818577"))).toString());
        assertEquals("-8574271961918184106497078070778069914/22247755692635781493974807496624221007", new Rational(new BigInteger("149629254299688939674338308546684533709"), new BigInteger("-3299860520000505417043547247793512909")).max(new Rational(new BigInteger("77168447657263656958473702637002629226"), new BigInteger("-200229801233722033445773267469617989063"))).toString());
        assertEquals("-81683672602591043766489802188288412139/333884874302802148011624752965505033813", new Rational(new BigInteger("109856127497467645070120502519046697069"), new BigInteger("-277264999762701340535742279304956968584")).max(new Rational(new BigInteger("81683672602591043766489802188288412139"), new BigInteger("-333884874302802148011624752965505033813"))).toString());
        assertEquals("-70930365039337404481030780546969176856/123719552795083803941365610170597073367", new Rational(new BigInteger("255239165776506244194912881889620042952"), new BigInteger("-101136170488566857507913470210949594418")).max(new Rational(new BigInteger("141860730078674808962061561093938353712"), new BigInteger("-247439105590167607882731220341194146734"))).toString());
        assertEquals("-205589439763561693084612869204017481146/316747303731618056915641676745646112543", new Rational(new BigInteger("205589439763561693084612869204017481146"), new BigInteger("-316747303731618056915641676745646112543")).max(new Rational(new BigInteger("325473764785421379119721240774302983416"), new BigInteger("-10461864718306375790928312374814104250"))).toString());
        assertEquals("-45432388257197541027250643873201229670/19713780961044400652123396875706998329", new Rational(new BigInteger("327485950927590423260649727005221768674"), new BigInteger("-102742137789058276825444394049692548248")).max(new Rational(new BigInteger("136297164771592623081751931619603689010"), new BigInteger("-59141342883133201956370190627120994987"))).toString());
        assertEquals("-312922187452568471173553915921756859229/326032760455611693301186146883707246972", new Rational(new BigInteger("78417776053920525365992012043819937130"), new BigInteger("-10137448735476570602063658766819570244")).max(new Rational(new BigInteger("312922187452568471173553915921756859229"), new BigInteger("-326032760455611693301186146883707246972"))).toString());
        assertEquals("-185263877016353240030826915125743328371/249754152696466903560958095748256424381", new Rational(new BigInteger("177819793541593964309829875955849620082"), new BigInteger("-238587782596803499235865758898792641113")).max(new Rational(new BigInteger("185263877016353240030826915125743328371"), new BigInteger("-249754152696466903560958095748256424381"))).toString());
        assertEquals("-250087810069655556300828393767003040772/285680095758175380406432292321663276769", new Rational(new BigInteger("160485377753526546982903033081720039825"), new BigInteger("-136883707530606714199158999209168155308")).max(new Rational(new BigInteger("250087810069655556300828393767003040772"), new BigInteger("-285680095758175380406432292321663276769"))).toString());
        assertEquals("-120795407215508527411230020324099782349/244158552535001346465163761880510613522", new Rational(new BigInteger("89814866769966945131633590306568229899"), new BigInteger("-31705395837314679123237832120177751871")).max(new Rational(new BigInteger("120795407215508527411230020324099782349"), new BigInteger("-244158552535001346465163761880510613522"))).toString());
        assertEquals("-9468974859968757419444104546664675003/47879734091305979563121143045904892941", new Rational(new BigInteger("9468974859968757419444104546664675003"), new BigInteger("-47879734091305979563121143045904892941")).max(new Rational(new BigInteger("106777800248788883995251681985308344678"), new BigInteger("-101503828084195333820137604830904488121"))).toString());
        assertEquals("-5009471148703364566466286173791457964/42403159663741837062611969349048801127", new Rational(new BigInteger("51385119946396282770633047312315937112"), new BigInteger("-97523445747588213047881635020807482915")).max(new Rational(new BigInteger("25047355743516822832331430868957289820"), new BigInteger("-212015798318709185313059846745244005635"))).toString());
        assertEquals("-113012949629738067093251103449369678119/310416707328848244136815578336306240812", new Rational(new BigInteger("276164944260312269197278005640153516843"), new BigInteger("-160346087341660780888044104853458984990")).max(new Rational(new BigInteger("113012949629738067093251103449369678119"), new BigInteger("-310416707328848244136815578336306240812"))).toString());
        assertEquals("-17836312463478018891575278526887245203/336958061106645368398846253146796653220", new Rational(new BigInteger("242514937759815144733626125673832900192"), new BigInteger("-51538638741197190698126784916666109017")).max(new Rational(new BigInteger("17836312463478018891575278526887245203"), new BigInteger("-336958061106645368398846253146796653220"))).toString());
        assertEquals("-28567741807602490855911359886035455388/98633309858541352066674752598212497887", new Rational(new BigInteger("218451706136543846997476026298512872551"), new BigInteger("-93184366372078883593788016708780197838")).max(new Rational(new BigInteger("28567741807602490855911359886035455388"), new BigInteger("-98633309858541352066674752598212497887"))).toString());
        assertEquals("-313072425688467024716334269233410445427/133520840828612886153278710157923548079", new Rational(new BigInteger("96315791117849649266528982135615225136"), new BigInteger("-1854816783719255374289985070815795802")).max(new Rational(new BigInteger("313072425688467024716334269233410445427"), new BigInteger("-133520840828612886153278710157923548079"))).toString());
        assertEquals("-76799292138489911435751879101860342994/100932060904506466304251495744270121861", new Rational(new BigInteger("76799292138489911435751879101860342994"), new BigInteger("-100932060904506466304251495744270121861")).max(new Rational(new BigInteger("134270076362574384414255690624343421690"), new BigInteger("-127194561842920127395577699258782352535"))).toString());
        assertEquals("-335048704879271281909010557080970017897/317229951613879003652656827457611911213", new Rational(new BigInteger("284160699937273059920486450442581315788"), new BigInteger("-168225480276470307580880344455390685948")).max(new Rational(new BigInteger("335048704879271281909010557080970017897"), new BigInteger("-317229951613879003652656827457611911213"))).toString());
        assertEquals("-118865829024892538658657202759852118573/88554319942983587580299214246204517076", new Rational(new BigInteger("237731658049785077317314405519704237146"), new BigInteger("-177108639885967175160598428492409034152")).max(new Rational(new BigInteger("232311641977929225428085808298559256948"), new BigInteger("-134157043366411905237756512631071650220"))).toString());
        assertEquals("-101449088820008929026371729949070453187/180438772029686908187820441639412878256", new Rational(new BigInteger("101449088820008929026371729949070453187"), new BigInteger("-180438772029686908187820441639412878256")).max(new Rational(new BigInteger("192457186573871308990026245238492387871"), new BigInteger("-125873439547639469172359739744420304757"))).toString());
        assertEquals("-71022688753646342702039773522836846031/169909702755591600855434906477427962366", new Rational(new BigInteger("142045377507292685404079547045673692062"), new BigInteger("-339819405511183201710869812954855924732")).max(new Rational(new BigInteger("324926188376413263951058400011327268420"), new BigInteger("-329600727804430655615419382814459035050"))).toString());
        assertEquals("-292627878213255279353912256273770658660/289600940262259298539071921484488385867", new Rational(new BigInteger("272789493917393603766291347763464329619"), new BigInteger("-63875914220598300775171438685773894026")).max(new Rational(new BigInteger("292627878213255279353912256273770658660"), new BigInteger("-289600940262259298539071921484488385867"))).toString());
        assertEquals("-29809671917928737828468866164176077947/63087525092839292694304938256411129040", new Rational(new BigInteger("29809671917928737828468866164176077947"), new BigInteger("-63087525092839292694304938256411129040")).max(new Rational(new BigInteger("194226425416083302990319087171071219019"), new BigInteger("-148162663031027211327564636717631815763"))).toString());
        assertEquals("-23088822053517811254671156499021556914/302203708860093074487306705604024821205", new Rational(new BigInteger("23088822053517811254671156499021556914"), new BigInteger("-302203708860093074487306705604024821205")).max(new Rational(new BigInteger("123481934637984647266515963960657584020"), new BigInteger("-47723470871434628199550833460897865"))).toString());
        assertEquals("-21677496231453489856549300407944527933/17272362285799922563581507510097963997", new Rational(new BigInteger("173419969851627918852394403263556223464"), new BigInteger("-138178898286399380508652060080783711976")).max(new Rational(new BigInteger("107098196760858045404591681281468596959"), new BigInteger("-30931179047234861449689986696146922890"))).toString());
        assertEquals("-220129517097924168858054584721869109055/55748982967824178084837812242351912533", new Rational(new BigInteger("123180296381423873953558619678977733614"), new BigInteger("-26007826311131764719465262125863212330")).max(new Rational(new BigInteger("220129517097924168858054584721869109055"), new BigInteger("-55748982967824178084837812242351912533"))).toString());
        assertEquals("-54780759449109340211171952982195861034/95533419997318140195441115079528783881", new Rational(new BigInteger("109561518898218680422343905964391722068"), new BigInteger("-191066839994636280390882230159057567762")).max(new Rational(new BigInteger("200891241443952381211505950247303692141"), new BigInteger("-280227630959311433732917243866649580494"))).toString());
        assertEquals("-14745112105792657245686388223741185114/247894152530002829793705155510844553627", new Rational(new BigInteger("41863538214032965866985619572186015832"), new BigInteger("-170269648235373455376914036113240468201")).max(new Rational(new BigInteger("14745112105792657245686388223741185114"), new BigInteger("-247894152530002829793705155510844553627"))).toString());
        assertEquals("-320472025180197237979623815873017128827/283783733358633198131946025053396833736", new Rational(new BigInteger("112549598580499243261748859205112801543"), new BigInteger("-32927572439339801292020910407816229974")).max(new Rational(new BigInteger("320472025180197237979623815873017128827"), new BigInteger("-283783733358633198131946025053396833736"))).toString());
        assertEquals("-156059150925951053558337439244408952392/285048591244225400302462933274542450109", new Rational(new BigInteger("151740739853899814409087899591672045336"), new BigInteger("-43769600932493298268268201912721933464")).max(new Rational(new BigInteger("156059150925951053558337439244408952392"), new BigInteger("-285048591244225400302462933274542450109"))).toString());
        assertEquals("-134946990686214083235013194276018554054/118276490909301984619799723763158772179", new Rational(new BigInteger("134946990686214083235013194276018554054"), new BigInteger("-118276490909301984619799723763158772179")).max(new Rational(new BigInteger("282207346073248605702988942625817025311"), new BigInteger("-159792716526015062835040476484264802336"))).toString());
        assertEquals("-11308664736521863605856907578680657149/18721495203892940690149673106435988547", new Rational(new BigInteger("303469986003214456843945829171286949252"), new BigInteger("-6017534145850191038827327286598624183")).max(new Rational(new BigInteger("180938635784349817693710521258890514384"), new BigInteger("-299543923262287051042394769702975816752"))).toString());
        assertEquals("-310339110281493630226572639621169210187/228059745382489128283692077847013528062", new Rational(new BigInteger("310339110281493630226572639621169210187"), new BigInteger("-228059745382489128283692077847013528062")).max(new Rational(new BigInteger("224278877265145111431406527127351440999"), new BigInteger("-13709390955206873524699541268930427363"))).toString());
        assertEquals("-18287721758488653132517667577546968789/31691374039950777406958711686577008627", new Rational(new BigInteger("218491797279817301468914187737557458630"), new BigInteger("-315867326754421414032623203142018303394")).max(new Rational(new BigInteger("146301774067909225060141340620375750312"), new BigInteger("-253530992319606219255669693492616069016"))).toString());
        assertEquals("-212891834197469502237774818409709773611/304033949958760696788072683373820064086", new Rational(new BigInteger("122127103678639911354377885339028796160"), new BigInteger("-66375775782401271699043502964090412428")).max(new Rational(new BigInteger("212891834197469502237774818409709773611"), new BigInteger("-304033949958760696788072683373820064086"))).toString());
        assertEquals("-35035503883973692303847118100571470055/47024424853251539527775205907637608041", new Rational(new BigInteger("339261769105569015772466878697649849906"), new BigInteger("-99454120478349652426485070791368121532")).max(new Rational(new BigInteger("245248527187815846126929826704000290385"), new BigInteger("-329170973972760776694426441353463256287"))).toString());
        assertEquals("-67950546326909400301035946206002688513/141318833897992432476213909883995518531", new Rational(new BigInteger("135901092653818800602071892412005377026"), new BigInteger("-282637667795984864952427819767991037062")).max(new Rational(new BigInteger("224898551666667262739827986269405612923"), new BigInteger("-236316288422507898445357005777483887630"))).toString());
        assertEquals("-21821912286471638887377014585446876787/191083373895464836072984598540470977781", new Rational(new BigInteger("21821912286471638887377014585446876787"), new BigInteger("-191083373895464836072984598540470977781")).max(new Rational(new BigInteger("17322359295441592816913155969497410821"), new BigInteger("-121798942788214572403784499474339896538"))).toString());
        assertEquals("-46433245427455330477466442805273337858/36865415667052615312983458203586810213", new Rational(new BigInteger("232166227137276652387332214026366689290"), new BigInteger("-184327078335263076564917291017934051065")).max(new Rational(new BigInteger("249544800476097931026881477143847284469"), new BigInteger("-39503637030759767750776316426338293840"))).toString());
        assertEquals("-6831638570065827827540815820556010161/312186967350856073528395447412696966806", new Rational(new BigInteger("197384473323037716866316212385377402635"), new BigInteger("-33191640594611775583843207252611168928")).max(new Rational(new BigInteger("6831638570065827827540815820556010161"), new BigInteger("-312186967350856073528395447412696966806"))).toString());
        assertEquals("-143214520159045852005031934011642988879/27947280630486513263455624219705211956", new Rational(new BigInteger("286429040318091704010063868023285977758"), new BigInteger("-55894561260973026526911248439410423912")).max(new Rational(new BigInteger("313903260087564228451267631277099254465"), new BigInteger("-33416581602770699072507460954401716586"))).toString());
        assertEquals("-71263291261899643423375272703634786003/137325962301335743709477001703681625866", new Rational(new BigInteger("158296446005195026663388084528748754968"), new BigInteger("-30359931322035579877068589038851062378")).max(new Rational(new BigInteger("71263291261899643423375272703634786003"), new BigInteger("-137325962301335743709477001703681625866"))).toString());
        assertEquals("-58161269614965610489371419962879824689/104912504031429948068889368058228583018", new Rational(new BigInteger("25441701934091277057292418267315081712"), new BigInteger("-14652168819254358884597806858586671464")).max(new Rational(new BigInteger("58161269614965610489371419962879824689"), new BigInteger("-104912504031429948068889368058228583018"))).toString());
    }

    @Test
    public void testMin() {

        assertThrows(NullPointerException.class, () -> {
            Rational rational = new Rational(1, 2).min(null);
        });

        assertThrows(NullPointerException.class, () -> {
            Rational rational  = null;
            Rational rational1 = rational.min(Rational.ONE);
        });

        assertEquals("-1347172847/1293677368", new Rational(637326349L, -3981844406L).min(new Rational(1347172847L, -1293677368L)).toString());
        assertEquals("-1490075996/457337859", new Rational(1186263253L, -2096975821L).min(new Rational(1490075996L, -457337859L)).toString());
        assertEquals("-1132176107/1291248399", new Rational(2101772591L, -3347959193L).min(new Rational(1132176107L, -1291248399L)).toString());
        assertEquals("-674027321/509373917", new Rational(1348054642L, -1018747834L).min(new Rational(655698158L, -1943481875L)).toString());
        assertEquals("-1455037378/1039279081", new Rational(1096712677L, -3754899509L).min(new Rational(1455037378L, -1039279081L)).toString());
        assertEquals("-922546367/483271589", new Rational(1845092734L, -966543178L).min(new Rational(1109193140L, -3342707981L)).toString());
        assertEquals("-778106248/1627180357", new Rational(778106248L, -1627180357L).min(new Rational(990445660L, -3361047175L)).toString());
        assertEquals("-228577942/215056461", new Rational(914311768L, -860225844L).min(new Rational(2037632677L, -4241325338L)).toString());
        assertEquals("-134959657/109346743", new Rational(134959657L, -109346743L).min(new Rational(1793678625L, -3096004139L)).toString());
        assertEquals("-1348227781/1219822051", new Rational(356678232L, -2316401821L).min(new Rational(1348227781L, -1219822051L)).toString());
        assertEquals("-1890234889/1908303903", new Rational(207347804L, -487627547L).min(new Rational(1890234889L, -1908303903L)).toString());
        assertEquals("-681056516/1340659003", new Rational(518250682L, -1984019241L).min(new Rational(1362113032L, -2681318006L)).toString());
        assertEquals("-1986848215/1395083202", new Rational(468624026L, -458165310L).min(new Rational(1986848215L, -1395083202L)).toString());
        assertEquals("-430283829/656304779", new Rational(1721135316L, -2625219116L).min(new Rational(137506372L, -2759854874L)).toString());
        assertEquals("-1619395337/1315878429", new Rational(1486399845L, -1789842065L).min(new Rational(1619395337L, -1315878429L)).toString());
        assertEquals("-223991579/430253510", new Rational(2015924211L, -3872281590L).min(new Rational(208181205L, -4174302160L)).toString());
        assertEquals("-1141168255/1141102343", new Rational(2045592219L, -4196888647L).min(new Rational(1141168255L, -1141102343L)).toString());
        assertEquals("-480879241/721814966", new Rational(961758482L, -1443629932L).min(new Rational(510725443L, -1813421907L)).toString());
        assertEquals("-556414726/823561085", new Rational(837352407L, -3975451640L).min(new Rational(556414726L, -823561085L)).toString());
        assertEquals("-1919952972/3916517347", new Rational(1212902051L, -3216156267L).min(new Rational(1919952972L, -3916517347L)).toString());
        assertEquals("-1851643125/527230502", new Rational(322781859L, -781643609L).min(new Rational(1851643125L, -527230502L)).toString());
        assertEquals("-391035986/791279663", new Rational(968548968L, -2514173173L).min(new Rational(1564143944L, -3165118652L)).toString());
        assertEquals("-38650759/136979935", new Rational(115952277L, -410939805L).min(new Rational(4851494L, -1117879679L)).toString());
        assertEquals("-575224222/1146763671", new Rational(132052903L, -290451147L).min(new Rational(575224222L, -1146763671L)).toString());
        assertEquals("-192651230/423585933", new Rational(192651230L, -423585933L).min(new Rational(416413824L, -3808811098L)).toString());
        assertEquals("-1211861437/3471405725", new Rational(1211861437L, -3471405725L).min(new Rational(656562596L, -2215702807L)).toString());
        assertEquals("-1879961251/2821976405", new Rational(1879961251L, -2821976405L).min(new Rational(1729210707L, -3355016940L)).toString());
        assertEquals("-303482078/233069377", new Rational(938631696L, -3083543428L).min(new Rational(303482078L, -233069377L)).toString());
        assertEquals("-1590591953/1628836069", new Rational(585183016L, -1169461888L).min(new Rational(1590591953L, -1628836069L)).toString());
        assertEquals("-907314639/1565472647", new Rational(1010278384L, -2300485234L).min(new Rational(907314639L, -1565472647L)).toString());
        assertEquals("-1736433126/160484539", new Rational(322353198L, -3440138729L).min(new Rational(1736433126L, -160484539L)).toString());
        assertEquals("-1570126087/2376572620", new Rational(1570126087L, -2376572620L).min(new Rational(729568573L, -3516348916L)).toString());
        assertEquals("-1243256075/1608313352", new Rational(1243256075L, -1608313352L).min(new Rational(723486284L, -1229626053L)).toString());
        assertEquals("-1678541218/929415493", new Rational(964376088L, -4078016714L).min(new Rational(1678541218L, -929415493L)).toString());
        assertEquals("-635293754/804141877", new Rational(635293754L, -804141877L).min(new Rational(1632510484L, -4184448318L)).toString());
        assertEquals("-1132163831/1610958582", new Rational(382067228L, -3232338541L).min(new Rational(1132163831L, -1610958582L)).toString());
        assertEquals("-401423430/61314151", new Rational(1943336332L, -3973300527L).min(new Rational(401423430L, -61314151L)).toString());
        assertEquals("-1463075284/2904012321", new Rational(1463075284L, -2904012321L).min(new Rational(282447134L, -1956057853L)).toString());
        assertEquals("-63771979/59996118", new Rational(1275439580L, -1199922360L).min(new Rational(1050678523L, -2332826230L)).toString());
        assertEquals("-972795527/1054295698", new Rational(972795527L, -1054295698L).min(new Rational(1050362689L, -3972673799L)).toString());
        assertEquals("-891725116/290397091", new Rational(891725116L, -290397091L).min(new Rational(1553993428L, -1385880263L)).toString());
        assertEquals("-536460935/914975288", new Rational(1852772394L, -3777245654L).min(new Rational(536460935L, -914975288L)).toString());
        assertEquals("-1961746495/3260262282", new Rational(401990358L, -3238604153L).min(new Rational(1961746495L, -3260262282L)).toString());
        assertEquals("-1773957763/1921053483", new Rational(1773957763L, -1921053483L).min(new Rational(712655967L, -1731564483L)).toString());
        assertEquals("-1399237623/3614611912", new Rational(1399237623L, -3614611912L).min(new Rational(119212837L, -3603199370L)).toString());
        assertEquals("-1453079428/4071612857", new Rational(1143874002L, -3815147302L).min(new Rational(1453079428L, -4071612857L)).toString());
        assertEquals("-1369804003/2312750442", new Rational(1369804003L, -2312750442L).min(new Rational(1827346787L, -3722550166L)).toString());
        assertEquals("-708821171/211866215", new Rational(1417642342L, -423732430L).min(new Rational(360337330L, -2180666911L)).toString());
        assertEquals("-1158269875/3454757063", new Rational(400609431L, -3565236188L).min(new Rational(1158269875L, -3454757063L)).toString());
        assertEquals("-398587537/929237005", new Rational(112208624L, -3152251089L).min(new Rational(797175074L, -1858474010L)).toString());
        assertEquals("-417435243/105056087", new Rational(810038672L, -3477690713L).min(new Rational(834870486L, -210112174L)).toString());
        assertEquals("-230162107/615099064", new Rational(690486321L, -1845297192L).min(new Rational(351486462L, -2292831768L)).toString());
        assertEquals("-240669844/125823373", new Rational(962679376L, -503293492L).min(new Rational(425025076L, -3927440517L)).toString());
        assertEquals("-1369638931/3701649974", new Rational(1369638931L, -3701649974L).min(new Rational(99914375L, -1417823957L)).toString());
        assertEquals("-1009657563/239557438", new Rational(2019315126L, -479114876L).min(new Rational(2138620874L, -4083060273L)).toString());
        assertEquals("-360236593/841724611", new Rational(1801182965L, -4208623055L).min(new Rational(746974045L, -2575552308L)).toString());
        assertEquals("-245653466/344837865", new Rational(978496181L, -1383967392L).min(new Rational(1228267330L, -1724189325L)).toString());
        assertEquals("-145560125/340802458", new Rational(103427229L, -2353418155L).min(new Rational(291120250L, -681604916L)).toString());
        assertEquals("-2102648403/3300984764", new Rational(2102648403L, -3300984764L).min(new Rational(364672297L, -2326915616L)).toString());
        assertEquals("-2137660958/1893646207", new Rational(2137660958L, -1893646207L).min(new Rational(1372876254L, -2771847652L)).toString());
        assertEquals("-527004629/1002476813", new Rational(1188863969L, -4017180574L).min(new Rational(527004629L, -1002476813L)).toString());
        assertEquals("-1666409557/1519476122", new Rational(1666409557L, -1519476122L).min(new Rational(259927796L, -3073681304L)).toString());
        assertEquals("-5889403/30867243", new Rational(335695971L, -1759432851L).min(new Rational(692228280L, -4044385226L)).toString());
        assertEquals("-664470487/1629751670", new Rational(141902536L, -3506598461L).min(new Rational(1328940974L, -3259503340L)).toString());
        assertEquals("-1586922754/96873819", new Rational(174505821L, -1736289767L).min(new Rational(1586922754L, -96873819L)).toString());
        assertEquals("-366696059/142048691", new Rational(439055660L, -2853018775L).min(new Rational(1100088177L, -426146073L)).toString());
        assertEquals("-1304148827/70938927", new Rational(1304148827L, -70938927L).min(new Rational(331012207L, -780570443L)).toString());
        assertEquals("-2053540117/2275063836", new Rational(2053540117L, -2275063836L).min(new Rational(1981105717L, -3985311719L)).toString());
        assertEquals("-1031294176/1056719495", new Rational(1621210566L, -4136040177L).min(new Rational(1031294176L, -1056719495L)).toString());
        assertEquals("-550518654/773529313", new Rational(1480951485L, -4100782598L).min(new Rational(1651555962L, -2320587939L)).toString());
        assertEquals("-837402725/2011405141", new Rational(837402725L, -2011405141L).min(new Rational(1626462473L, -3935283994L)).toString());
        assertEquals("-1577557239/95835629", new Rational(1577557239L, -95835629L).min(new Rational(931350451L, -184685249L)).toString());
        assertEquals("-130599917/9598957", new Rational(1567199004L, -115187484L).min(new Rational(1585842485L, -1471515261L)).toString());
        assertEquals("-463334725/557996876", new Rational(344101554L, -1465167613L).min(new Rational(926669450L, -1115993752L)).toString());
        assertEquals("-1437559127/3804527326", new Rational(214501245L, -1380470928L).min(new Rational(1437559127L, -3804527326L)).toString());
        assertEquals("-301098534/135623515", new Rational(1272843698L, -4176236282L).min(new Rational(903295602L, -406870545L)).toString());
        assertEquals("-996967211/568492093", new Rational(700024174L, -650748959L).min(new Rational(996967211L, -568492093L)).toString());
        assertEquals("-2127915041/1913374266", new Rational(2127915041L, -1913374266L).min(new Rational(282062100L, -3037219144L)).toString());
        assertEquals("-148041355/586488058", new Rational(296082710L, -1172976116L).min(new Rational(290685488L, -2231792584L)).toString());
        assertEquals("-1753472929/239913459", new Rational(1753472929L, -239913459L).min(new Rational(1726283876L, -4051192045L)).toString());
        assertEquals("-695238355/716287724", new Rational(1390476710L, -1432575448L).min(new Rational(504873382L, -646824744L)).toString());
        assertEquals("-1098758993/3264780426", new Rational(1098758993L, -3264780426L).min(new Rational(235974681L, -4005728640L)).toString());
        assertEquals("-315356685/185961968", new Rational(1261426740L, -743847872L).min(new Rational(488924794L, -1126153345L)).toString());
        assertEquals("-2118698567/1384865188", new Rational(1785416152L, -2354580178L).min(new Rational(2118698567L, -1384865188L)).toString());
        assertEquals("-1038479143/587969128", new Rational(1038479143L, -587969128L).min(new Rational(955855512L, -2960171181L)).toString());
        assertEquals("-1592890379/359131235", new Rational(476536797L, -1166719010L).min(new Rational(1592890379L, -359131235L)).toString());
        assertEquals("-1864942001/2272396598", new Rational(2117372645L, -4084352877L).min(new Rational(1864942001L, -2272396598L)).toString());
        assertEquals("-1487023988/3759639703", new Rational(955521236L, -4191842469L).min(new Rational(1487023988L, -3759639703L)).toString());
        assertEquals("-67250763/91722688", new Rational(1210513734L, -1651008384L).min(new Rational(374867968L, -1073450401L)).toString());
        assertEquals("-1258379619/2199886739", new Rational(714395125L, -3861621954L).min(new Rational(1258379619L, -2199886739L)).toString());
        assertEquals("-1973103372/501044989", new Rational(1488329692L, -2135781544L).min(new Rational(1973103372L, -501044989L)).toString());
        assertEquals("-354204365/973377403", new Rational(85151320L, -4217701907L).min(new Rational(1062613095L, -2920132209L)).toString());
        assertEquals("-1583863397/234270624", new Rational(859473743L, -4254726211L).min(new Rational(1583863397L, -234270624L)).toString());
        assertEquals("-1280746279/3665745397", new Rational(1280746279L, -3665745397L).min(new Rational(343468635L, -2563287854L)).toString());
        assertEquals("-241240864/460814757", new Rational(736608423L, -4068005896L).min(new Rational(1688686048L, -3225703299L)).toString());
        assertEquals("-1568753829/1858772507", new Rational(770241966L, -1391996171L).min(new Rational(1568753829L, -1858772507L)).toString());
        assertEquals("-291558015/449396329", new Rational(1195495252L, -2264396603L).min(new Rational(1457790075L, -2246981645L)).toString());
        assertEquals("-86979746/33714209", new Rational(1023511685L, -737842068L).min(new Rational(2000534158L, -775426807L)).toString());
        assertEquals("-294187909/812960493", new Rational(499165263L, -1950259163L).min(new Rational(882563727L, -2438881479L)).toString());
        assertEquals("-934953962/640303595", new Rational(1869907924L, -1280607190L).min(new Rational(2016013046L, -2580430601L)).toString());

        assertEquals("-197969179622142483468753653702454216305/94402537508926996776286579357760905197", new Rational(new BigInteger("179330462657007084283408335072485042737"), new BigInteger("-330890376714139587868330181114808030545")).min(new Rational(new BigInteger("197969179622142483468753653702454216305"), new BigInteger("-94402537508926996776286579357760905197"))).toString());
        assertEquals("-13834684767866137452976894673487847638/997583518041879960886260703720346591", new Rational(new BigInteger("41504054303598412358930684020463542914"), new BigInteger("-2992750554125639882658782111161039773")).min(new Rational(new BigInteger("37873880701111409800522770994334644155"), new BigInteger("-179496739691584822860097943625725977939"))).toString());
        assertEquals("-35306907823783273307913845204620186727/9182501720778917531042258001397404789", new Rational(new BigInteger("105920723471349819923741535613860560181"), new BigInteger("-27547505162336752593126774004192214367")).min(new Rational(new BigInteger("45039228623370190147977253758468078141"), new BigInteger("-277693825579981578944676202904807724169"))).toString());
        assertEquals("-295582340350631949913434887625514761515/147778351211392751136385102644592244554", new Rational(new BigInteger("295582340350631949913434887625514761515"), new BigInteger("-147778351211392751136385102644592244554")).min(new Rational(new BigInteger("11749524267814682632845819419275676082"), new BigInteger("-211170402616524362811611139014775979310"))).toString());
        assertEquals("-328360898503322691140932971205234336347/305760279774437317341604401892621561174", new Rational(new BigInteger("328360898503322691140932971205234336347"), new BigInteger("-305760279774437317341604401892621561174")).min(new Rational(new BigInteger("212764454571228271998042953673812873978"), new BigInteger("-249172128144072287871958666576614130514"))).toString());
        assertEquals("-75843832719259217273370134548998985057/65007254561263897081955268169007447464", new Rational(new BigInteger("254177094082784948332627406511027139696"), new BigInteger("-324087939394411623753838633936306707948")).min(new Rational(new BigInteger("303375330877036869093480538195995940228"), new BigInteger("-260029018245055588327821072676029789856"))).toString());
        assertEquals("-255690744885160595258911177979610357845/66928271767160545402578986335626125557", new Rational(new BigInteger("255690744885160595258911177979610357845"), new BigInteger("-66928271767160545402578986335626125557")).min(new Rational(new BigInteger("306882788833400144621422291973922074564"), new BigInteger("-285603403250330654107425792815534310234"))).toString());
        assertEquals("-102016387765326596037488319336256979058/174797592315232877692852878036885731303", new Rational(new BigInteger("102016387765326596037488319336256979058"), new BigInteger("-174797592315232877692852878036885731303")).min(new Rational(new BigInteger("94632483101138025227419106278203046850"), new BigInteger("-308363742322467572983652396244511656190"))).toString());
        assertEquals("-173785147988129080999115071125115537401/140901425840490389635437406150296718816", new Rational(new BigInteger("173785147988129080999115071125115537401"), new BigInteger("-140901425840490389635437406150296718816")).min(new Rational(new BigInteger("134933025035252672772994066842906075559"), new BigInteger("-334807591094943252035393811752532872681"))).toString());
        assertEquals("-145010113902502101923259474943060557243/38055397561417024141807749140314650349", new Rational(new BigInteger("119152659796315395700655319965438740143"), new BigInteger("-272105868892403182940205658357724344102")).min(new Rational(new BigInteger("145010113902502101923259474943060557243"), new BigInteger("-38055397561417024141807749140314650349"))).toString());
        assertEquals("-329350204186732604462957619000867163633/325835639902425435547100734542500842289", new Rational(new BigInteger("329350204186732604462957619000867163633"), new BigInteger("-325835639902425435547100734542500842289")).min(new Rational(new BigInteger("110785943472692712889356690372192983114"), new BigInteger("-126399189484420159784710448081755832454"))).toString());
        assertEquals("-313236908032522744028950465180877768736/95200620194144272489536445198497070237", new Rational(new BigInteger("70082818734842823400689459265524379871"), new BigInteger("-33901966896130105970733943496112476161")).min(new Rational(new BigInteger("313236908032522744028950465180877768736"), new BigInteger("-95200620194144272489536445198497070237"))).toString());
        assertEquals("-154634264637510367301449167530025337026/245905825134739630905438806078502245557", new Rational(new BigInteger("3835929190157852541564087384055574337"), new BigInteger("-232115213484699421969282544202966658722")).min(new Rational(new BigInteger("154634264637510367301449167530025337026"), new BigInteger("-245905825134739630905438806078502245557"))).toString());
        assertEquals("-649384912739894953487819992702379359/961940829096501091245081062658642831", new Rational(new BigInteger("33822065295582155512408837202496985476"), new BigInteger("-76931770107408856566787531997890611293")).min(new Rational(new BigInteger("50652023193711806372049959430785590002"), new BigInteger("-75031384669527085117116322887374140818"))).toString());
        assertEquals("-194178447005150369474884732495018379532/30422277729371250916019152071985558781", new Rational(new BigInteger("194178447005150369474884732495018379532"), new BigInteger("-30422277729371250916019152071985558781")).min(new Rational(new BigInteger("170479093659444891103329704571125423137"), new BigInteger("-272423843269574529180207405570115399237"))).toString());
        assertEquals("-118500925850793701970025266910294379689/156071541211821776829994789963450573324", new Rational(new BigInteger("36858139399647467743210535733665453289"), new BigInteger("-219314687603711753112167060163048131248")).min(new Rational(new BigInteger("237001851701587403940050533820588759378"), new BigInteger("-312143082423643553659989579926901146648"))).toString());
        assertEquals("-71997577799026957707025847837424957111/39135430375767398335358158879427728396", new Rational(new BigInteger("287990311196107830828103391349699828444"), new BigInteger("-156541721503069593341432635517710913584")).min(new Rational(new BigInteger("128433287486489680299192593361474496829"), new BigInteger("-81721656991179791953057379176630952851"))).toString());
        assertEquals("-179436757146591835138809151064331558417/188923770845462236005438056606559592624", new Rational(new BigInteger("215351169425723422985781231391077582761"), new BigInteger("-238516994637851067285836662751767908323")).min(new Rational(new BigInteger("179436757146591835138809151064331558417"), new BigInteger("-188923770845462236005438056606559592624"))).toString());
        assertEquals("-303550821095381764095147128781990894485/151184540558104770208093456484882326964", new Rational(new BigInteger("94798058284731000659612766156959475809"), new BigInteger("-242847609133626622869723928933438746164")).min(new Rational(new BigInteger("303550821095381764095147128781990894485"), new BigInteger("-151184540558104770208093456484882326964"))).toString());
        assertEquals("-91864911795056612894008128043064270391/77222107071688065982175810665261661875", new Rational(new BigInteger("25429332875495613711387395529339803336"), new BigInteger("-107304036486892194712031855329756654863")).min(new Rational(new BigInteger("183729823590113225788016256086128540782"), new BigInteger("-154444214143376131964351621330523323750"))).toString());
        assertEquals("-11828838080576195308412512057944013592/23297043785669297441449159327948161281", new Rational(new BigInteger("106459542725185757775712608521496122328"), new BigInteger("-209673394071023676973042433951533451529")).min(new Rational(new BigInteger("31583650798867788502742611026770220926"), new BigInteger("-114027998883703957459358201117373156074"))).toString());
        assertEquals("-242409057570948100988433751021599835829/138004895772675155308698676092341009814", new Rational(new BigInteger("4404026824673491955463134302267635096"), new BigInteger("-20752246141761681437763014319620173812")).min(new Rational(new BigInteger("242409057570948100988433751021599835829"), new BigInteger("-138004895772675155308698676092341009814"))).toString());
        assertEquals("-327463078371815403534749461054518092083/156265444843827526367408654980821701727", new Rational(new BigInteger("327463078371815403534749461054518092083"), new BigInteger("-156265444843827526367408654980821701727")).min(new Rational(new BigInteger("147544428039194435845663343226996513837"), new BigInteger("-176464009888452928898012697329615307531"))).toString());
        assertEquals("-5756003864136811514481627675422765811/599347826443667797232709573937244756", new Rational(new BigInteger("322336216391661444810971149823674885416"), new BigInteger("-33563478280845396645031736140485706336")).min(new Rational(new BigInteger("312770543482771614327805274865037022549"), new BigInteger("-197736023718087115847354944161091816634"))).toString());
        assertEquals("-30880315465411234578334302847647993994/97612307953013636412349250289480493637", new Rational(new BigInteger("30707178737084147548660628712066138836"), new BigInteger("-304099073081533731064599195313243788098")).min(new Rational(new BigInteger("30880315465411234578334302847647993994"), new BigInteger("-97612307953013636412349250289480493637"))).toString());
        assertEquals("-171513092147695990408024793110478338969/87196396786279216838775029669931315706", new Rational(new BigInteger("171513092147695990408024793110478338969"), new BigInteger("-87196396786279216838775029669931315706")).min(new Rational(new BigInteger("153456834216956392534559457447395432183"), new BigInteger("-338561334213272707936099344741850523946"))).toString());
        assertEquals("-12627334081711470282634314231531782312/11372103422060415184258277584342865347", new Rational(new BigInteger("216906267263135453960691250067782168472"), new BigInteger("-279429655624029907403503374168366601955")).min(new Rational(new BigInteger("75764004490268821695805885389190693872"), new BigInteger("-68232620532362491105549665506057192082"))).toString());
        assertEquals("-167673469421541648799788614585860607961/12981196754653486256126455027535387198", new Rational(new BigInteger("172726485875171903489997118598336419474"), new BigInteger("-66174675834453434745325446800498747347")).min(new Rational(new BigInteger("335346938843083297599577229171721215922"), new BigInteger("-25962393509306972512252910055070774396"))).toString());
        assertEquals("-31022756866955534382919694503765010731/15089659141340613836090406975383238837", new Rational(new BigInteger("128743794128257378923123305014115115534"), new BigInteger("-228512890370033657248661307929841164770")).min(new Rational(new BigInteger("124091027467822137531678778015060042924"), new BigInteger("-60358636565362455344361627901532955348"))).toString());
        assertEquals("-23859780992116073059088885677313236106/24319901776901046165658503218813412159", new Rational(new BigInteger("236510151675712469825365846712775551020"), new BigInteger("-272437894400012672573657285071463586513")).min(new Rational(new BigInteger("262457590913276803649977742450445597166"), new BigInteger("-267518919545911507822243535406947533749"))).toString());
        assertEquals("-237629980362440621153197889178975065853/35786516730194930622268314831148625599", new Rational(new BigInteger("237629980362440621153197889178975065853"), new BigInteger("-35786516730194930622268314831148625599")).min(new Rational(new BigInteger("121173516044729554984476468248479918405"), new BigInteger("-318098818441969245880672894672442492560"))).toString());
        assertEquals("-19620307908479776196293623226131300048/5086640339278814731328376920005241911", new Rational(new BigInteger("311454252513410559367881834437347880967"), new BigInteger("-325010708357876874643450446041318107614")).min(new Rational(new BigInteger("78481231633919104785174492904525200192"), new BigInteger("-20346561357115258925313507680020967644"))).toString());
        assertEquals("-309096971908156633777602120950893792088/133273128074369794212659097400735735499", new Rational(new BigInteger("28638867238008816364987552353261245895"), new BigInteger("-118104144507694327620217517839022412711")).min(new Rational(new BigInteger("309096971908156633777602120950893792088"), new BigInteger("-133273128074369794212659097400735735499"))).toString());
        assertEquals("-322775549825609582238152193413865752735/69813367254231430451824376189604007191", new Rational(new BigInteger("322775549825609582238152193413865752735"), new BigInteger("-69813367254231430451824376189604007191")).min(new Rational(new BigInteger("54775193365739447516676211274022306977"), new BigInteger("-234743575439138621270040110762424565389"))).toString());
        assertEquals("-206549461630159288265782585007391061009/209675918855657654536388363459220159256", new Rational(new BigInteger("206549461630159288265782585007391061009"), new BigInteger("-209675918855657654536388363459220159256")).min(new Rational(new BigInteger("188861598899314399451059503424102686084"), new BigInteger("-336937529876541412248582480928768271308"))).toString());
        assertEquals("-18031540473734982916618472312065128016/17433672575331815672951864555476854531", new Rational(new BigInteger("144252323789879863332947778496521024128"), new BigInteger("-139469380602654525383614916443814836248")).min(new Rational(new BigInteger("62903621617350260340601456994238354494"), new BigInteger("-201184516277095518410801100754060865775"))).toString());
        assertEquals("-158751859970010211170942186944309377097/154887136013535012184358333686382263269", new Rational(new BigInteger("317503719940020422341884373888618754194"), new BigInteger("-309774272027070024368716667372764526538")).min(new Rational(new BigInteger("92533559664607931729206898933664712050"), new BigInteger("-145444644195648931191110557190097254083"))).toString());
        assertEquals("-120580516586194001094057064267003523081/111048272452528182236211464089374490524", new Rational(new BigInteger("25711670192761670990865825085837317708"), new BigInteger("-43563415100156307132739429111104645925")).min(new Rational(new BigInteger("241161033172388002188114128534007046162"), new BigInteger("-222096544905056364472422928178748981048"))).toString());
        assertEquals("-8949230168344177539397239950999041405/987436607484482609887117136485281926", new Rational(new BigInteger("304273825723702036339506158333967407770"), new BigInteger("-33572844654472408736161982640499585484")).min(new Rational(new BigInteger("103230309466523277945992499878829431416"), new BigInteger("-182306433507796495881676033193469613619"))).toString());
        assertEquals("-165641438018274277176919944473675817538/11121846346679220357744091904823518285", new Rational(new BigInteger("165641438018274277176919944473675817538"), new BigInteger("-11121846346679220357744091904823518285")).min(new Rational(new BigInteger("234902934021940022013207201645707256939"), new BigInteger("-273109727356447610214237140469512309880"))).toString());
        assertEquals("-74383288457213413752090847337202012224/78054810912619810944398108370857526621", new Rational(new BigInteger("223149865371640241256272542011606036672"), new BigInteger("-234164432737859432833194325112572579863")).min(new Rational(new BigInteger("235632311944716064191305044455083930851"), new BigInteger("-321135932045363373147477368785627891379"))).toString());
        assertEquals("-57466454046074839606814859922758260768/60951120549624533035166480774306166105", new Rational(new BigInteger("229865816184299358427259439691033043072"), new BigInteger("-243804482198498132140665923097224664420")).min(new Rational(new BigInteger("610037820025471477768559270073515094"), new BigInteger("-76961279009816350400499540200322178524"))).toString());
        assertEquals("-208258387380497058592590614336850676267/40479077016078467057957702828681473883", new Rational(new BigInteger("208258387380497058592590614336850676267"), new BigInteger("-40479077016078467057957702828681473883")).min(new Rational(new BigInteger("262987101173195822225387169378774211001"), new BigInteger("-109555281006047709184096490924467353960"))).toString());
        assertEquals("-148556878930550818360964407108897767775/15229064697079224992312264087870132649", new Rational(new BigInteger("289413082218474566732287345816361694050"), new BigInteger("-92959317910041730686964628944996725767")).min(new Rational(new BigInteger("297113757861101636721928814217795535550"), new BigInteger("-30458129394158449984624528175740265298"))).toString());
        assertEquals("-52019819459290472162319414632165905516/99593816305575900340724490148856059453", new Rational(new BigInteger("104039638918580944324638829264331811032"), new BigInteger("-199187632611151800681448980297712118906")).min(new Rational(new BigInteger("17835309399286728369769803678434684324"), new BigInteger("-47951047142388828718071687168865242517"))).toString());
        assertEquals("-138413908407861961116817407747328073331/45665863367705616807136400786933271380", new Rational(new BigInteger("83634203466741015481647734683410816742"), new BigInteger("-175740324928863931808926979183844310472")).min(new Rational(new BigInteger("138413908407861961116817407747328073331"), new BigInteger("-45665863367705616807136400786933271380"))).toString());
        assertEquals("-39714564729671478210602971654705139081/45589099545048659578594159513022491638", new Rational(new BigInteger("158858258918685912842411886618820556324"), new BigInteger("-182356398180194638314376638052089966552")).min(new Rational(new BigInteger("41122621637619569939782585752957538341"), new BigInteger("-157158268003788393369096515817292798331"))).toString());
        assertEquals("-180200943732379640014080497077163412341/49408378925393680152164398434587961863", new Rational(new BigInteger("180200943732379640014080497077163412341"), new BigInteger("-49408378925393680152164398434587961863")).min(new Rational(new BigInteger("312654534777038690195226661735826897476"), new BigInteger("-171534704903966422506737038620530890285"))).toString());
        assertEquals("-12027827609086318918574388942692417512/3692709485496459377024718761702929355", new Rational(new BigInteger("81771502939351246827603127502631708720"), new BigInteger("-83642495111911381594068637506931553240")).min(new Rational(new BigInteger("72166965654517913511446333656154505072"), new BigInteger("-22156256912978756262148312570217576130"))).toString());
        assertEquals("-339733249493035163102173679956516121646/50148414653720437277243343411263773433", new Rational(new BigInteger("272464898656578429981951693006879442654"), new BigInteger("-145438000834971689150259796247639957160")).min(new Rational(new BigInteger("339733249493035163102173679956516121646"), new BigInteger("-50148414653720437277243343411263773433"))).toString());
        assertEquals("-270605912181257935888521254291315972615/213955910715763214529318231125198900063", new Rational(new BigInteger("270605912181257935888521254291315972615"), new BigInteger("-213955910715763214529318231125198900063")).min(new Rational(new BigInteger("85038635867806623823864138743539732021"), new BigInteger("-74311068774411027920865125922381511551"))).toString());
        assertEquals("-205667642364733042081885732072966532399/70006932015076099022808101590625589221", new Rational(new BigInteger("205667642364733042081885732072966532399"), new BigInteger("-70006932015076099022808101590625589221")).min(new Rational(new BigInteger("55107924454610904178842304978954315732"), new BigInteger("-173703864796324882402508612769386692606"))).toString());
        assertEquals("-151203930142940724365019627316761149834/138284602561089333122446924481721783727", new Rational(new BigInteger("151203930142940724365019627316761149834"), new BigInteger("-138284602561089333122446924481721783727")).min(new Rational(new BigInteger("302367643994669518421312730185717976558"), new BigInteger("-280247549347919567874721995531838024866"))).toString());
        assertEquals("-10726499329064231841412236993340950327/57551892092959266410878509969219635093", new Rational(new BigInteger("19604646394870513583022700350517914754"), new BigInteger("-312251668039506500293800853312626615528")).min(new Rational(new BigInteger("53632496645321159207061184966704751635"), new BigInteger("-287759460464796332054392549846098175465"))).toString());
        assertEquals("-50168480648090018614863847467995452568/3357227023385996577338551239921034069", new Rational(new BigInteger("301010883888540111689183084807972715408"), new BigInteger("-20143362140315979464031307439526204414")).min(new Rational(new BigInteger("182197472669085676793538964214269361132"), new BigInteger("-190043947892945123491094802173285342916"))).toString());
        assertEquals("-47375156612429554610281512437891120783/105493550012028763978200489551991645166", new Rational(new BigInteger("9693337384811119500963677174885210567"), new BigInteger("-186078404037563712601987406268060719714")).min(new Rational(new BigInteger("47375156612429554610281512437891120783"), new BigInteger("-105493550012028763978200489551991645166"))).toString());
        assertEquals("-109061693252645502096840978435759978029/211361139065185123836182701913534606179", new Rational(new BigInteger("109061693252645502096840978435759978029"), new BigInteger("-211361139065185123836182701913534606179")).min(new Rational(new BigInteger("77194951404808949140805781033515920297"), new BigInteger("-327540966348368305447759629339472693862"))).toString());
        assertEquals("-274572990979357043152624585679094656303/322483130354202489779133117350876474955", new Rational(new BigInteger("31260422250023956898904639599722092459"), new BigInteger("-223177414859088224886009343642818601264")).min(new Rational(new BigInteger("274572990979357043152624585679094656303"), new BigInteger("-322483130354202489779133117350876474955"))).toString());
        assertEquals("-15443489160828293805114863303200470270/127916832902732455136897923705034618863", new Rational(new BigInteger("15443489160828293805114863303200470270"), new BigInteger("-127916832902732455136897923705034618863")).min(new Rational(new BigInteger("16075519242109147682376361233222038045"), new BigInteger("-316421865461749971621890177534691280178"))).toString());
        assertEquals("-43796481746031411711999315147678081341/37230640116772363468162334425218934248", new Rational(new BigInteger("47711618704640061291068652166715638738"), new BigInteger("-308897478110775775539190830938414158797")).min(new Rational(new BigInteger("175185926984125646847997260590712325364"), new BigInteger("-148922560467089453872649337700875736992"))).toString());
        assertEquals("-222547979612839493998638467115293354872/69808505793132307404012801791385922759", new Rational(new BigInteger("301782208108851584948098106772180786556"), new BigInteger("-154663995393494898231107938205483633307")).min(new Rational(new BigInteger("222547979612839493998638467115293354872"), new BigInteger("-69808505793132307404012801791385922759"))).toString());
        assertEquals("-98270760433413718791345893324267034277/43170530689570870730252022051619656764", new Rational(new BigInteger("27837344177161768066225307972236525529"), new BigInteger("-257855264419059518207247831803014769339")).min(new Rational(new BigInteger("294812281300241156374037679972801102831"), new BigInteger("-129511592068712612190756066154858970292"))).toString());
        assertEquals("-195245682688280622263582478786901720306/225021385808089629198449290568599156909", new Rational(new BigInteger("195245682688280622263582478786901720306"), new BigInteger("-225021385808089629198449290568599156909")).min(new Rational(new BigInteger("13223567558791796476271223787897158820"), new BigInteger("-170140289489786489164077362140700720048"))).toString());
        assertEquals("-52775947326498660074572958873023563173/62953004607247883462875944436517089649", new Rational(new BigInteger("211103789305994640298291835492094252692"), new BigInteger("-251812018428991533851503777746068358596")).min(new Rational(new BigInteger("71522089740185032782748672154939390884"), new BigInteger("-178850960724687536852513014393129035725"))).toString());
        assertEquals("-236247381804382663456631953166611486522/230366731415225919792506366693999189377", new Rational(new BigInteger("236247381804382663456631953166611486522"), new BigInteger("-230366731415225919792506366693999189377")).min(new Rational(new BigInteger("138785789937772884160820082465203100257"), new BigInteger("-171457169648403437936403000595715040716"))).toString());
        assertEquals("-61152914562224592524143670382431397880/162581666753016595312737502783553100861", new Rational(new BigInteger("34030459657814332153957130931327476238"), new BigInteger("-209100209272891825126685442817857825845")).min(new Rational(new BigInteger("122305829124449185048287340764862795760"), new BigInteger("-325163333506033190625475005567106201722"))).toString());
        assertEquals("-149330277342786095886817365898565556361/33120318440620715176866834673202912859", new Rational(new BigInteger("149330277342786095886817365898565556361"), new BigInteger("-33120318440620715176866834673202912859")).min(new Rational(new BigInteger("122489574050464812945092196585170110844"), new BigInteger("-279061876813188920249694738086084660321"))).toString());
        assertEquals("-99237396444450405173129117868467429191/7797404374428323173861954854040936665", new Rational(new BigInteger("297712189333351215519387353605402287573"), new BigInteger("-23392213123284969521585864562122809995")).min(new Rational(new BigInteger("2927798788428862917899373543007203327"), new BigInteger("-262304091401143452536002838786211620594"))).toString());
        assertEquals("-49738887235940074986489936075529172912/5905434848610037641051667107084914059", new Rational(new BigInteger("99477774471880149972979872151058345824"), new BigInteger("-11810869697220075282103334214169828118")).min(new Rational(new BigInteger("286790650029543265078324526049013120680"), new BigInteger("-246436048421234767675127095734536845014"))).toString());
        assertEquals("-1743428769436161143100964443764853635/2101960765834992013824792030420244426", new Rational(new BigInteger("99897857201728260757230905891815413772"), new BigInteger("-162519017740739418712395411318332055276")).min(new Rational(new BigInteger("251053742798807204606538879902138923440"), new BigInteger("-302682350280238849990770052380515197344"))).toString());
        assertEquals("-278615970865727308602775711647947632089/150856583689008672120337507192399940965", new Rational(new BigInteger("278615970865727308602775711647947632089"), new BigInteger("-150856583689008672120337507192399940965")).min(new Rational(new BigInteger("109637547257744704300252715327354500249"), new BigInteger("-333055933418373542243551768754198577056"))).toString());
        assertEquals("-156567823831713477402580769350478774985/72661497220597414665772009778921136056", new Rational(new BigInteger("156567823831713477402580769350478774985"), new BigInteger("-72661497220597414665772009778921136056")).min(new Rational(new BigInteger("178024679749702624177293648762514583571"), new BigInteger("-210653210636187032374592895904854592413"))).toString());
        assertEquals("-218621202604624931556989647687417961393/58021248487329428770103379258110874542", new Rational(new BigInteger("295394100345963773198443634801717431151"), new BigInteger("-237624022786632917889931794752922674078")).min(new Rational(new BigInteger("218621202604624931556989647687417961393"), new BigInteger("-58021248487329428770103379258110874542"))).toString());
        assertEquals("-137081160763867839787344124277496541933/68976056005910727608397736494729971870", new Rational(new BigInteger("99196928650098955670345652227354289110"), new BigInteger("-154599591128640948421681965343056825321")).min(new Rational(new BigInteger("137081160763867839787344124277496541933"), new BigInteger("-68976056005910727608397736494729971870"))).toString());
        assertEquals("-12111950825374049391231911047140972889/975626927470545202432034625396865370", new Rational(new BigInteger("72671704952244296347391466282845837334"), new BigInteger("-5853761564823271214592207752381192220")).min(new Rational(new BigInteger("6231947518071166245474001583370892742"), new BigInteger("-24132007120508742763036728647185536557"))).toString());
        assertEquals("-32412928510270245258406634214703094675/25511479942409538128134697440926421363", new Rational(new BigInteger("324129285102702452584066342147030946750"), new BigInteger("-255114799424095381281346974409264213630")).min(new Rational(new BigInteger("111771294940643579460328753761843146849"), new BigInteger("-197348898741579984370534117188081377339"))).toString());
        assertEquals("-207053295982912005103667429963966437279/75752717125691899962447979962538103739", new Rational(new BigInteger("76545240536421119311803117976516852249"), new BigInteger("-232960197583677087478439359848210809762")).min(new Rational(new BigInteger("207053295982912005103667429963966437279"), new BigInteger("-75752717125691899962447979962538103739"))).toString());
        assertEquals("-219817729009790647758457064247475978219/27561301443685317342267534562178513590", new Rational(new BigInteger("323828092694324038209221133369063099907"), new BigInteger("-207403700207199437231835926378731840040")).min(new Rational(new BigInteger("219817729009790647758457064247475978219"), new BigInteger("-27561301443685317342267534562178513590"))).toString());
        assertEquals("-314587078914896628947445974593666342605/145077811995617526901751910222001608691", new Rational(new BigInteger("85275329495294888559030955306544334075"), new BigInteger("-241968091724211349578343560521061503768")).min(new Rational(new BigInteger("314587078914896628947445974593666342605"), new BigInteger("-145077811995617526901751910222001608691"))).toString());
        assertEquals("-301378200893930675454298564684292923159/164507281040567740065403043310674097164", new Rational(new BigInteger("105680312760047076215013779326787553198"), new BigInteger("-179625916467101300319102855941999873020")).min(new Rational(new BigInteger("301378200893930675454298564684292923159"), new BigInteger("-164507281040567740065403043310674097164"))).toString());
        assertEquals("-257692133108899103211514565135956821997/159359503456690890117783594646977898716", new Rational(new BigInteger("188870407004608612982370446808478543181"), new BigInteger("-261656167772224930178699029959993918541")).min(new Rational(new BigInteger("257692133108899103211514565135956821997"), new BigInteger("-159359503456690890117783594646977898716"))).toString());
        assertEquals("-43376518592167648306922526824366492782/14302642899179733328411697872518547593", new Rational(new BigInteger("86753037184335296613845053648732985564"), new BigInteger("-28605285798359466656823395745037095186")).min(new Rational(new BigInteger("156255973016007757288442176989190862225"), new BigInteger("-138420593098023624887692049321852460617"))).toString());
        assertEquals("-127967616351419484872584615602343420351/123846490112791679514075099488408009162", new Rational(new BigInteger("19841896450437171647189617441833549665"), new BigInteger("-29970895565365019750825103610301705515")).min(new Rational(new BigInteger("255935232702838969745169231204686840702"), new BigInteger("-247692980225583359028150198976816018324"))).toString());
        assertEquals("-324811468643973606829938521970483507592/136969581368507278447647083771788663995", new Rational(new BigInteger("324811468643973606829938521970483507592"), new BigInteger("-136969581368507278447647083771788663995")).min(new Rational(new BigInteger("286183747679869802116811408662348289275"), new BigInteger("-165628299747526649188817346990892454586"))).toString());
        assertEquals("-203802400991138074239642624168489014179/141671686443308291563541952208437557587", new Rational(new BigInteger("252950518036725782696251609555481507880"), new BigInteger("-197912443916566132202570834813076428808")).min(new Rational(new BigInteger("203802400991138074239642624168489014179"), new BigInteger("-141671686443308291563541952208437557587"))).toString());
        assertEquals("-55547597342458505113995690424086108055/6463118772585374520313516411784339537", new Rational(new BigInteger("222190389369834020455982761696344432220"), new BigInteger("-25852475090341498081254065647137358148")).min(new Rational(new BigInteger("177469489784379965840963610303516786810"), new BigInteger("-85779181039257713896959316468620361496"))).toString());
        assertEquals("-98780781588287938253559818539971237951/338143296472390681673627025767566510258", new Rational(new BigInteger("98780781588287938253559818539971237951"), new BigInteger("-338143296472390681673627025767566510258")).min(new Rational(new BigInteger("66853824158327560346237862019041737183"), new BigInteger("-267531969690773144372357356946689462576"))).toString());
        assertEquals("-13295097324943125473077747338636175267/9488910201802412462509333275895164211", new Rational(new BigInteger("94705598890489355465138887728581817059"), new BigInteger("-93075839171652764056972194218841864585")).min(new Rational(new BigInteger("119655875924488129257699726047725577403"), new BigInteger("-85400191816221712162583999483056477899"))).toString());
        assertEquals("-149493500463504289030142049119976747897/32195755208465972596893593940652633663", new Rational(new BigInteger("63170400893218009339209777864746854170"), new BigInteger("-326789496667062625644332483400634450007")).min(new Rational(new BigInteger("298987000927008578060284098239953495794"), new BigInteger("-64391510416931945193787187881305267326"))).toString());
        assertEquals("-17438363595503269581039388504705480864/5070741538198459921596084810258572963", new Rational(new BigInteger("69753454382013078324157554018821923456"), new BigInteger("-20282966152793839686384339241034291852")).min(new Rational(new BigInteger("162925631633311341863942263337516822075"), new BigInteger("-274296334881951282382873516853110299060"))).toString());
        assertEquals("-35499399200625086719911013681304232475/239392697907127006906272077951780998182", new Rational(new BigInteger("2716002740102277473736105623270348037"), new BigInteger("-85088327788566729889863638297777025029")).min(new Rational(new BigInteger("35499399200625086719911013681304232475"), new BigInteger("-239392697907127006906272077951780998182"))).toString());
        assertEquals("-264676876794054812878631229834605035065/157788751949575325149615882445435610103", new Rational(new BigInteger("197596463535621171256325798613758304863"), new BigInteger("-131511782258533240351341395707781139170")).min(new Rational(new BigInteger("264676876794054812878631229834605035065"), new BigInteger("-157788751949575325149615882445435610103"))).toString());
        assertEquals("-85576469926043505962282975721742964014/34376969054056523647526346412595598391", new Rational(new BigInteger("171152939852087011924565951443485928028"), new BigInteger("-68753938108113047295052692825191196782")).min(new Rational(new BigInteger("69630912869648796709422995024563457287"), new BigInteger("-97348216895333038556875109929483538021"))).toString());
        assertEquals("-329774403535101720347975880948797791592/45390277276728913405622403425885827983", new Rational(new BigInteger("230843985806931171064788040708712261214"), new BigInteger("-296718518000206003639011645554235945804")).min(new Rational(new BigInteger("329774403535101720347975880948797791592"), new BigInteger("-45390277276728913405622403425885827983"))).toString());
        assertEquals("-204645034246593037451510492404042026907/28603245553548079524722521364710515801", new Rational(new BigInteger("300911623848469646569811605259291625325"), new BigInteger("-91965534286790162792765884437528352673")).min(new Rational(new BigInteger("204645034246593037451510492404042026907"), new BigInteger("-28603245553548079524722521364710515801"))).toString());
        assertEquals("-142146645020691668164193581080285683432/157732022927688125365417123134637683343", new Rational(new BigInteger("236761870783345667568658309298800159539"), new BigInteger("-283539995106959389893669860624407149002")).min(new Rational(new BigInteger("284293290041383336328387162160571366864"), new BigInteger("-315464045855376250730834246269275366686"))).toString());
        assertEquals("-97737227377773557325063043763619787304/168223264566957719506999138856128958873", new Rational(new BigInteger("97737227377773557325063043763619787304"), new BigInteger("-168223264566957719506999138856128958873")).min(new Rational(new BigInteger("129496824832781615975005148995495749521"), new BigInteger("-318911919505188881238927867626148137676"))).toString());
        assertEquals("-118909401941774895484247989856196787713/211949658283156078331868230171764266850", new Rational(new BigInteger("20034870263600557666422190032273861674"), new BigInteger("-66236903917651493357470797667444014711")).min(new Rational(new BigInteger("118909401941774895484247989856196787713"), new BigInteger("-211949658283156078331868230171764266850"))).toString());
        assertEquals("-335596256137888587683038958117315367924/163583275554955474588741866443999475611", new Rational(new BigInteger("138229673889731231090981250659591756687"), new BigInteger("-164943081025118508602508882041828429511")).min(new Rational(new BigInteger("335596256137888587683038958117315367924"), new BigInteger("-163583275554955474588741866443999475611"))).toString());
        assertEquals("-329391722496021824323676985087428776318/42139565646106697811497345183399661585", new Rational(new BigInteger("329391722496021824323676985087428776318"), new BigInteger("-42139565646106697811497345183399661585")).min(new Rational(new BigInteger("223181235167477794100740103811421280193"), new BigInteger("-291126518650124542409281332820098894176"))).toString());
    }

    @Test
    public void testNegate() {
        assertThrows(NullPointerException.class, () -> {
            Rational rational  = null;
            Rational rational1 = rational.negate();
        });
        assertEquals("243220111/2235834599", new Rational(243220111L, -2235834599L).negate().toString());
        assertEquals("478830266/443292033", new Rational(1436490798L, -1329876099L).negate().toString());
        assertEquals("1131885462/470650571", new Rational(1131885462L, -470650571L).negate().toString());
        assertEquals("1107674765/3782149827", new Rational(1107674765L, -3782149827L).negate().toString());
        assertEquals("83392481/2937884896", new Rational(83392481L, -2937884896L).negate().toString());
        assertEquals("607285860/759522743", new Rational(1821857580L, -2278568229L).negate().toString());
        assertEquals("299472613/769372970", new Rational(598945226L, -1538745940L).negate().toString());
        assertEquals("181256841/750072649", new Rational(725027364L, -3000290596L).negate().toString());
        assertEquals("86601045/95462087", new Rational(606207315L, -668234609L).negate().toString());
        assertEquals("1442627560/193871529", new Rational(1442627560L, -193871529L).negate().toString());
        assertEquals("199431812/1525094965", new Rational(199431812L, -1525094965L).negate().toString());
        assertEquals("1439314/269009295", new Rational(8635884L, -1614055770L).negate().toString());
        assertEquals("1358674667/1228353113", new Rational(1358674667L, -1228353113L).negate().toString());
        assertEquals("699257621/759392469", new Rational(699257621L, -759392469L).negate().toString());
        assertEquals("554463374/2585852735", new Rational(554463374L, -2585852735L).negate().toString());
        assertEquals("729211577/404448948", new Rational(1458423154L, -808897896L).negate().toString());
        assertEquals("33026816/3665453215", new Rational(33026816L, -3665453215L).negate().toString());
        assertEquals("230472355/77508708", new Rational(1382834130L, -465052248L).negate().toString());
        assertEquals("292879165/1602162752", new Rational(585758330L, -3204325504L).negate().toString());
        assertEquals("1991179304/3712182751", new Rational(1991179304L, -3712182751L).negate().toString());
        assertEquals("1292958190/2006778979", new Rational(1292958190L, -2006778979L).negate().toString());
        assertEquals("1131808282/3782881715", new Rational(1131808282L, -3782881715L).negate().toString());
        assertEquals("1876380365/2689727521", new Rational(1876380365L, -2689727521L).negate().toString());
        assertEquals("598264820/3803442219", new Rational(598264820L, -3803442219L).negate().toString());
        assertEquals("238405131/1044303914", new Rational(715215393L, -3132911742L).negate().toString());
        assertEquals("456613699/1365919160", new Rational(1369841097L, -4097757480L).negate().toString());
        assertEquals("934700520/6288167", new Rational(1869401040L, -12576334L).negate().toString());
        assertEquals("934271359/1466507068", new Rational(934271359L, -1466507068L).negate().toString());
        assertEquals("2092175721/267559168", new Rational(2092175721L, -267559168L).negate().toString());
        assertEquals("1059641033/4220450286", new Rational(1059641033L, -4220450286L).negate().toString());
        assertEquals("2037917889/1555291421", new Rational(2037917889L, -1555291421L).negate().toString());
        assertEquals("2061039528/3311601869", new Rational(2061039528L, -3311601869L).negate().toString());
        assertEquals("831133060/1358386737", new Rational(1662266120L, -2716773474L).negate().toString());
        assertEquals("231176513/3705435546", new Rational(231176513L, -3705435546L).negate().toString());
        assertEquals("1526503836/4082204393", new Rational(1526503836L, -4082204393L).negate().toString());
        assertEquals("379444923/2165358590", new Rational(379444923L, -2165358590L).negate().toString());
        assertEquals("1911190559/1591890056", new Rational(1911190559L, -1591890056L).negate().toString());
        assertEquals("582107007/1935197800", new Rational(582107007L, -1935197800L).negate().toString());
        assertEquals("34459923/27640624", new Rational(1585156458L, -1271468704L).negate().toString());
        assertEquals("1853432698/2054602261", new Rational(1853432698L, -2054602261L).negate().toString());
        assertEquals("569275321/4220705117", new Rational(569275321L, -4220705117L).negate().toString());
        assertEquals("460920904/943869091", new Rational(1382762712L, -2831607273L).negate().toString());
        assertEquals("1874585906/3527923743", new Rational(1874585906L, -3527923743L).negate().toString());
        assertEquals("163291299/49591448", new Rational(2122786887L, -644688824L).negate().toString());
        assertEquals("47390820/3167707141", new Rational(47390820L, -3167707141L).negate().toString());
        assertEquals("1530010805/851167858", new Rational(1530010805L, -851167858L).negate().toString());
        assertEquals("46943473/2573937221", new Rational(46943473L, -2573937221L).negate().toString());
        assertEquals("791416014/1045337977", new Rational(791416014L, -1045337977L).negate().toString());
        assertEquals("1844950233/1874943415", new Rational(1844950233L, -1874943415L).negate().toString());
        assertEquals("20787220/655414601", new Rational(62361660L, -1966243803L).negate().toString());
        assertEquals("20749845/48933019", new Rational(1161991320L, -2740249064L).negate().toString());
        assertEquals("535204633/862444672", new Rational(2140818532L, -3449778688L).negate().toString());
        assertEquals("1434580527/1504340503", new Rational(1434580527L, -1504340503L).negate().toString());
        assertEquals("422897935/3649836882", new Rational(422897935L, -3649836882L).negate().toString());
        assertEquals("1745438923/3324401209", new Rational(1745438923L, -3324401209L).negate().toString());
        assertEquals("429718717/195731343", new Rational(1718874868L, -782925372L).negate().toString());
        assertEquals("207928149/298670971", new Rational(1455497043L, -2090696797L).negate().toString());
        assertEquals("17833883/288018384", new Rational(107003298L, -1728110304L).negate().toString());
        assertEquals("907913069/3410904957", new Rational(907913069L, -3410904957L).negate().toString());
        assertEquals("6559354/1391564203", new Rational(6559354L, -1391564203L).negate().toString());
        assertEquals("514673551/3665798519", new Rational(514673551L, -3665798519L).negate().toString());
        assertEquals("399716377/1316039307", new Rational(1199149131L, -3948117921L).negate().toString());
        assertEquals("83287395/1162290506", new Rational(83287395L, -1162290506L).negate().toString());
        assertEquals("1231023441/582913655", new Rational(1231023441L, -582913655L).negate().toString());
        assertEquals("1207936107/1926068474", new Rational(1207936107L, -1926068474L).negate().toString());
        assertEquals("907753277/1797364243", new Rational(907753277L, -1797364243L).negate().toString());
        assertEquals("1873930079/1136554114", new Rational(1873930079L, -1136554114L).negate().toString());
        assertEquals("730065830/1231813501", new Rational(730065830L, -1231813501L).negate().toString());
        assertEquals("67328459/504709658", new Rational(134656918L, -1009419316L).negate().toString());
        assertEquals("493374209/339782598", new Rational(1973496836L, -1359130392L).negate().toString());
        assertEquals("80020178/164736017", new Rational(1360343026L, -2800512289L).negate().toString());
        assertEquals("535399883/589112261", new Rational(1606199649L, -1767336783L).negate().toString());
        assertEquals("512379389/4151544352", new Rational(512379389L, -4151544352L).negate().toString());
        assertEquals("1268570807/1935983095", new Rational(1268570807L, -1935983095L).negate().toString());
        assertEquals("366530052/1685156597", new Rational(366530052L, -1685156597L).negate().toString());
        assertEquals("742975442/282783917", new Rational(742975442L, -282783917L).negate().toString());
        assertEquals("42395240/8446307", new Rational(551138120L, -109801991L).negate().toString());
        assertEquals("1169880421/1454589234", new Rational(1169880421L, -1454589234L).negate().toString());
        assertEquals("203973394/1626638419", new Rational(203973394L, -1626638419L).negate().toString());
        assertEquals("1648665498/4044374047", new Rational(1648665498L, -4044374047L).negate().toString());
        assertEquals("335706513/2116727059", new Rational(671413026L, -4233454118L).negate().toString());
        assertEquals("571895823/2582403272", new Rational(571895823L, -2582403272L).negate().toString());
        assertEquals("908162455/409560393", new Rational(1816324910L, -819120786L).negate().toString());
        assertEquals("1610942547/2230037710", new Rational(1610942547L, -2230037710L).negate().toString());
        assertEquals("29605579/73453550", new Rational(1361856634L, -3378863300L).negate().toString());
        assertEquals("477588142/4196220887", new Rational(477588142L, -4196220887L).negate().toString());
        assertEquals("5443118/829124177", new Rational(10886236L, -1658248354L).negate().toString());
        assertEquals("606297409/857216535", new Rational(1212594818L, -1714433070L).negate().toString());
        assertEquals("991060781/1670903739", new Rational(991060781L, -1670903739L).negate().toString());
        assertEquals("68275677/992143549", new Rational(136551354L, -1984287098L).negate().toString());
        assertEquals("1323087695/839109801", new Rational(1323087695L, -839109801L).negate().toString());
        assertEquals("195517678/437072587", new Rational(1368623746L, -3059508109L).negate().toString());
        assertEquals("182967523/274114565", new Rational(731870092L, -1096458260L).negate().toString());
        assertEquals("88846367/140998337", new Rational(2132312808L, -3383960088L).negate().toString());
        assertEquals("446207220/3142271951", new Rational(446207220L, -3142271951L).negate().toString());
        assertEquals("503893415/4220513074", new Rational(503893415L, -4220513074L).negate().toString());
        assertEquals("79985395/236916474", new Rational(319941580L, -947665896L).negate().toString());
        assertEquals("46158794/10101141", new Rational(1061652262L, -232326243L).negate().toString());
        assertEquals("891306839/3526335505", new Rational(891306839L, -3526335505L).negate().toString());
        assertEquals("1788093615/474042782", new Rational(1788093615L, -474042782L).negate().toString());

        assertEquals("55202825529144637902089556927777674311/39643696364661579634062823004752897250", new Rational(new BigInteger("165608476587433913706268670783333022933"), new BigInteger("-118931089093984738902188469014258691750")).negate().toString());
        assertEquals("123182898532189991738966840911973747750/318865254424953011855511792559158953969", new Rational(new BigInteger("123182898532189991738966840911973747750"), new BigInteger("-318865254424953011855511792559158953969")).negate().toString());
        assertEquals("24703898827615222677125427419468116529/276386335403728240869522783136783867737", new Rational(new BigInteger("24703898827615222677125427419468116529"), new BigInteger("-276386335403728240869522783136783867737")).negate().toString());
        assertEquals("38072244154161776587816940613651870928/47555312309800676984796504204093972571", new Rational(new BigInteger("76144488308323553175633881227303741856"), new BigInteger("-95110624619601353969593008408187945142")).negate().toString());
        assertEquals("15173708405490801381532779911698438019/76324850606973787007914537728934006075", new Rational(new BigInteger("60694833621963205526131119646793752076"), new BigInteger("-305299402427895148031658150915736024300")).negate().toString());
        assertEquals("24184906016473053476708557386076259411/26634323221361861363376610658446443674", new Rational(new BigInteger("96739624065892213906834229544305037644"), new BigInteger("-106537292885447445453506442633785774696")).negate().toString());
        assertEquals("73825276523277656693797387007913766941/80729675667708656398901659168727934256", new Rational(new BigInteger("73825276523277656693797387007913766941"), new BigInteger("-80729675667708656398901659168727934256")).negate().toString());
        assertEquals("293667704529396679895301820258090840214/270617444185312984723805978344672141951", new Rational(new BigInteger("293667704529396679895301820258090840214"), new BigInteger("-270617444185312984723805978344672141951")).negate().toString());
        assertEquals("105477887877908136260769167239574428423/259969623654995088525937938839220837793", new Rational(new BigInteger("105477887877908136260769167239574428423"), new BigInteger("-259969623654995088525937938839220837793")).negate().toString());
        assertEquals("45778129821411189895627892130951760474/56729007254893702703143503740307558373", new Rational(new BigInteger("137334389464233569686883676392855281422"), new BigInteger("-170187021764681108109430511220922675119")).negate().toString());
        assertEquals("231314910966591587191662549256853448926/262889602625132356563092393778899708471", new Rational(new BigInteger("231314910966591587191662549256853448926"), new BigInteger("-262889602625132356563092393778899708471")).negate().toString());
        assertEquals("78737020169296714430006146921778962974/158775721179467285527800337729355062897", new Rational(new BigInteger("78737020169296714430006146921778962974"), new BigInteger("-158775721179467285527800337729355062897")).negate().toString());
        assertEquals("145295103356245427880727613711604645475/62702039248097141858713726471972743381", new Rational(new BigInteger("290590206712490855761455227423209290950"), new BigInteger("-125404078496194283717427452943945486762")).negate().toString());
        assertEquals("325198450072370318744834999425346819000/339263884121799921071810755852534368133", new Rational(new BigInteger("325198450072370318744834999425346819000"), new BigInteger("-339263884121799921071810755852534368133")).negate().toString());
        assertEquals("44108131872490228457132722590600337183/169989184950505942084217773910489840914", new Rational(new BigInteger("88216263744980456914265445181200674366"), new BigInteger("-339978369901011884168435547820979681828")).negate().toString());
        assertEquals("168202639539836808755495443594768762729/37333701354881790853424281708719783118", new Rational(new BigInteger("168202639539836808755495443594768762729"), new BigInteger("-37333701354881790853424281708719783118")).negate().toString());
        assertEquals("282681938175811596457234499108050123671/79552976068110512304558311392780110722", new Rational(new BigInteger("282681938175811596457234499108050123671"), new BigInteger("-79552976068110512304558311392780110722")).negate().toString());
        assertEquals("64801553632559389846861632853650849797/279139024336799406854499647533819865536", new Rational(new BigInteger("64801553632559389846861632853650849797"), new BigInteger("-279139024336799406854499647533819865536")).negate().toString());
        assertEquals("71610382391079097850927444876556754491/51773683010077171055824004898888411388", new Rational(new BigInteger("143220764782158195701854889753113508982"), new BigInteger("-103547366020154342111648009797776822776")).negate().toString());
        assertEquals("97100318614578687417149566528320547897/257750448464581585364677614394004239374", new Rational(new BigInteger("97100318614578687417149566528320547897"), new BigInteger("-257750448464581585364677614394004239374")).negate().toString());
        assertEquals("52341200775309027010899237917802827281/337216738102288315354565529298098688306", new Rational(new BigInteger("52341200775309027010899237917802827281"), new BigInteger("-337216738102288315354565529298098688306")).negate().toString());
        assertEquals("111249068784766790003738858469143266419/151500652372109108024036069766266924755", new Rational(new BigInteger("222498137569533580007477716938286532838"), new BigInteger("-303001304744218216048072139532533849510")).negate().toString());
        assertEquals("4959068759900530171191701419032809686/74851334716816703386376305576105062955", new Rational(new BigInteger("19836275039602120684766805676131238744"), new BigInteger("-299405338867266813545505222304420251820")).negate().toString());
        assertEquals("136032160184620498190216457351617047881/202488681873485979949107120736138627315", new Rational(new BigInteger("136032160184620498190216457351617047881"), new BigInteger("-202488681873485979949107120736138627315")).negate().toString());
        assertEquals("51772309179613235577383200984889046797/307965441068599200776925451010551346506", new Rational(new BigInteger("51772309179613235577383200984889046797"), new BigInteger("-307965441068599200776925451010551346506")).negate().toString());
        assertEquals("256793502591662404365988060613895022693/326613491833611134469787641620821053007", new Rational(new BigInteger("256793502591662404365988060613895022693"), new BigInteger("-326613491833611134469787641620821053007")).negate().toString());
        assertEquals("213662738085481907285568037829651594807/29288510203300097067844841872301569609", new Rational(new BigInteger("213662738085481907285568037829651594807"), new BigInteger("-29288510203300097067844841872301569609")).negate().toString());
        assertEquals("124405922839026262960800650860068864864/61390320503039973346817200806059746339", new Rational(new BigInteger("248811845678052525921601301720137729728"), new BigInteger("-122780641006079946693634401612119492678")).negate().toString());
        assertEquals("250926823905855427609317240575301661625/173734855117859028001577897392470753148", new Rational(new BigInteger("250926823905855427609317240575301661625"), new BigInteger("-173734855117859028001577897392470753148")).negate().toString());
        assertEquals("16136516642340492369171271172671850983/6178396997957643134705112930989078365", new Rational(new BigInteger("64546066569361969476685084690687403932"), new BigInteger("-24713587991830572538820451723956313460")).negate().toString());
        assertEquals("243600788950326133080947315073427486567/127269821822319138835861535004326759987", new Rational(new BigInteger("243600788950326133080947315073427486567"), new BigInteger("-127269821822319138835861535004326759987")).negate().toString());
        assertEquals("10607990098914074317007145733125387206/3920292419055552667045604242155264935", new Rational(new BigInteger("74255930692398520219050020131877710442"), new BigInteger("-27442046933388868669319229695086854545")).negate().toString());
        assertEquals("119504729028489130246477959407166709194/83316394443620728469606148790568047069", new Rational(new BigInteger("119504729028489130246477959407166709194"), new BigInteger("-83316394443620728469606148790568047069")).negate().toString());
        assertEquals("59546643877037679002855851104886119489/336456363234484089066821827051145295119", new Rational(new BigInteger("59546643877037679002855851104886119489"), new BigInteger("-336456363234484089066821827051145295119")).negate().toString());
        assertEquals("166054266344833118524975385381788953257/15935301387062149025522158893317398920", new Rational(new BigInteger("332108532689666237049950770763577906514"), new BigInteger("-31870602774124298051044317786634797840")).negate().toString());
        assertEquals("228770907550213572294214805912010756395/337032183987967633453786151212787639816", new Rational(new BigInteger("228770907550213572294214805912010756395"), new BigInteger("-337032183987967633453786151212787639816")).negate().toString());
        assertEquals("2462710548475567571793342402318606083/2657148334604705451986993018455939597", new Rational(new BigInteger("19701684387804540574346739218548848664"), new BigInteger("-21257186676837643615895944147647516776")).negate().toString());
        assertEquals("4670463583511702380632680386230975539/21613726762824299867330897974928740399", new Rational(new BigInteger("70056953752675535709490205793464633085"), new BigInteger("-324205901442364498009963469623931105985")).negate().toString());
        assertEquals("189222491126677332350801125791240427193/47566436518923243068802010955580940459", new Rational(new BigInteger("189222491126677332350801125791240427193"), new BigInteger("-47566436518923243068802010955580940459")).negate().toString());
        assertEquals("333426947486822624084171458600129261812/275262461152215271814778684455315897939", new Rational(new BigInteger("333426947486822624084171458600129261812"), new BigInteger("-275262461152215271814778684455315897939")).negate().toString());
        assertEquals("270408528016832590024592476124506447501/164335818297891122065678736832874555353", new Rational(new BigInteger("270408528016832590024592476124506447501"), new BigInteger("-164335818297891122065678736832874555353")).negate().toString());
        assertEquals("286462981507202412361210365713156110973/113244447412638745754293343231763548742", new Rational(new BigInteger("286462981507202412361210365713156110973"), new BigInteger("-113244447412638745754293343231763548742")).negate().toString());
        assertEquals("286383812993444659553399268166691135771/53133307299962052303301856700401527257", new Rational(new BigInteger("286383812993444659553399268166691135771"), new BigInteger("-53133307299962052303301856700401527257")).negate().toString());
        assertEquals("269287366726514753711409977266870545583/126787708252241232052450343609225239727", new Rational(new BigInteger("269287366726514753711409977266870545583"), new BigInteger("-126787708252241232052450343609225239727")).negate().toString());
        assertEquals("126688743634891919980835973046851235240/97672599014710580598518653987201898609", new Rational(new BigInteger("126688743634891919980835973046851235240"), new BigInteger("-97672599014710580598518653987201898609")).negate().toString());
        assertEquals("238052896449028372816569382804040474268/138571810398815040502506744335925300757", new Rational(new BigInteger("238052896449028372816569382804040474268"), new BigInteger("-138571810398815040502506744335925300757")).negate().toString());
        assertEquals("256824322012639791763639353708635665006/187544481870694338744051431350723635603", new Rational(new BigInteger("256824322012639791763639353708635665006"), new BigInteger("-187544481870694338744051431350723635603")).negate().toString());
        assertEquals("104679778712052132259597154737109386714/48428423701505042587778904818093369217", new Rational(new BigInteger("104679778712052132259597154737109386714"), new BigInteger("-48428423701505042587778904818093369217")).negate().toString());
        assertEquals("301221268108940196146980418356643300963/159281608210385801845852895246401279425", new Rational(new BigInteger("301221268108940196146980418356643300963"), new BigInteger("-159281608210385801845852895246401279425")).negate().toString());
        assertEquals("284020224789776051114796007915267177452/42353847613710347868391724004910538039", new Rational(new BigInteger("284020224789776051114796007915267177452"), new BigInteger("-42353847613710347868391724004910538039")).negate().toString());
        assertEquals("8663483445045519985457314432382948316/234549947833418226671177987106805530533", new Rational(new BigInteger("8663483445045519985457314432382948316"), new BigInteger("-234549947833418226671177987106805530533")).negate().toString());
        assertEquals("27156050897725038413718836969791781738/26692290491066905944136651806652480933", new Rational(new BigInteger("162936305386350230482313021818750690428"), new BigInteger("-160153742946401435664819910839914885598")).negate().toString());
        assertEquals("332274819032902413332726269693478742661/211582432423756582910535501907400345053", new Rational(new BigInteger("332274819032902413332726269693478742661"), new BigInteger("-211582432423756582910535501907400345053")).negate().toString());
        assertEquals("113263810095229368828514152247864954189/39319601218004162826770564903443900073", new Rational(new BigInteger("113263810095229368828514152247864954189"), new BigInteger("-39319601218004162826770564903443900073")).negate().toString());
        assertEquals("127054864304173907627062248061616992988/293138833805990322339009067884407509981", new Rational(new BigInteger("127054864304173907627062248061616992988"), new BigInteger("-293138833805990322339009067884407509981")).negate().toString());
        assertEquals("13534880110034191216533284971785577810/7293764122628584106263715315582167107", new Rational(new BigInteger("175953441430444485814932704633212511530"), new BigInteger("-94818933594171593381428299102568172391")).negate().toString());
        assertEquals("99848179416775127992467580201437226299/1633486463207279388308782126708634735", new Rational(new BigInteger("199696358833550255984935160402874452598"), new BigInteger("-3266972926414558776617564253417269470")).negate().toString());
        assertEquals("71651946529819093206780766507167695164/38375348401907048915029983729847313259", new Rational(new BigInteger("214955839589457279620342299521503085492"), new BigInteger("-115126045205721146745089951189541939777")).negate().toString());
        assertEquals("53792663531067583375531505076742867659/17092166697978587152528088169841536223", new Rational(new BigInteger("53792663531067583375531505076742867659"), new BigInteger("-17092166697978587152528088169841536223")).negate().toString());
        assertEquals("42375546251907214291942916653849644845/86538894285363474681375833742584660799", new Rational(new BigInteger("127126638755721642875828749961548934535"), new BigInteger("-259616682856090424044127501227753982397")).negate().toString());
        assertEquals("44666903027587441916027781467328667370/140143749274145933188688833617092732549", new Rational(new BigInteger("44666903027587441916027781467328667370"), new BigInteger("-140143749274145933188688833617092732549")).negate().toString());
        assertEquals("255866346995246831468165554586422426039/84123614646676983033720975119956490576", new Rational(new BigInteger("255866346995246831468165554586422426039"), new BigInteger("-84123614646676983033720975119956490576")).negate().toString());
        assertEquals("229189030436251450479127093628346928915/29053693655635156657001665962037622072", new Rational(new BigInteger("229189030436251450479127093628346928915"), new BigInteger("-29053693655635156657001665962037622072")).negate().toString());
        assertEquals("91363835465354942441849463946500144565/363544406357919201196581837434553316", new Rational(new BigInteger("182727670930709884883698927893000289130"), new BigInteger("-727088812715838402393163674869106632")).negate().toString());
        assertEquals("152604525059582871176813424588836431139/18578186650117192376620862232502053472", new Rational(new BigInteger("152604525059582871176813424588836431139"), new BigInteger("-18578186650117192376620862232502053472")).negate().toString());
        assertEquals("6825635936559399310237109744882592943/136538660664131551871994086868147517763", new Rational(new BigInteger("13651271873118798620474219489765185886"), new BigInteger("-273077321328263103743988173736295035526")).negate().toString());
        assertEquals("76991595794780774079824729870473707465/131582183317711553341602386337517169371", new Rational(new BigInteger("153983191589561548159649459740947414930"), new BigInteger("-263164366635423106683204772675034338742")).negate().toString());
        assertEquals("278979020439767431458199655146349683775/256734647168847842482183222129939353592", new Rational(new BigInteger("278979020439767431458199655146349683775"), new BigInteger("-256734647168847842482183222129939353592")).negate().toString());
        assertEquals("6189626108979537145241069755626148053/27111448560644234895140522452055606156", new Rational(new BigInteger("55706634980815834307169627800635332477"), new BigInteger("-244003037045798114056264702068500455404")).negate().toString());
        assertEquals("290592322242871327831823188010331390772/291300626469437580160633974142148284989", new Rational(new BigInteger("290592322242871327831823188010331390772"), new BigInteger("-291300626469437580160633974142148284989")).negate().toString());
        assertEquals("138108547932415997983301391836725176358/219083802052173794226693064294312390259", new Rational(new BigInteger("138108547932415997983301391836725176358"), new BigInteger("-219083802052173794226693064294312390259")).negate().toString());
        assertEquals("47095544105702206509682732115436723779/55266994070504007993322510454112773847", new Rational(new BigInteger("141286632317106619529048196346310171337"), new BigInteger("-165800982211512023979967531362338321541")).negate().toString());
        assertEquals("120574214446877250960841524577532712353/113593018066631464971268833204717539710", new Rational(new BigInteger("241148428893754501921683049155065424706"), new BigInteger("-227186036133262929942537666409435079420")).negate().toString());
        assertEquals("2631215507634300802274801638910999665/393696210412614508663964002592747539", new Rational(new BigInteger("134191990889349340916014883584460982915"), new BigInteger("-20078506731043339941862164132230124489")).negate().toString());
        assertEquals("75328937189898411983772566471496324720/178590751166335681556567493997992789661", new Rational(new BigInteger("75328937189898411983772566471496324720"), new BigInteger("-178590751166335681556567493997992789661")).negate().toString());
        assertEquals("338518902958461134658513452681218588133/245386894193954932528676479455708292459", new Rational(new BigInteger("338518902958461134658513452681218588133"), new BigInteger("-245386894193954932528676479455708292459")).negate().toString());
        assertEquals("297202964197992352447401815223375925847/1424239641098381067382664850818876089", new Rational(new BigInteger("297202964197992352447401815223375925847"), new BigInteger("-1424239641098381067382664850818876089")).negate().toString());
        assertEquals("45648694446424089483906681023657716031/67488974863687060683835648992423644379", new Rational(new BigInteger("136946083339272268451720043070973148093"), new BigInteger("-202466924591061182051506946977270933137")).negate().toString());
        assertEquals("287896731768463036773201419110102090251/211322292341449333956246767658082225154", new Rational(new BigInteger("287896731768463036773201419110102090251"), new BigInteger("-211322292341449333956246767658082225154")).negate().toString());
        assertEquals("45918425655284131594384936948484861/214102085483827736389901728114804071", new Rational(new BigInteger("6198987463463357765241966488045456235"), new BigInteger("-28903781540316744412636733295498549585")).negate().toString());
        assertEquals("23151289661059489305002235868828878294/123852309076435380380565645531221789513", new Rational(new BigInteger("23151289661059489305002235868828878294"), new BigInteger("-123852309076435380380565645531221789513")).negate().toString());
        assertEquals("8740960127857050755173264990117598110/2114974481520740910396054346136469177", new Rational(new BigInteger("314674564602853827186237539644233531960"), new BigInteger("-76139081334746672774257956460912890372")).negate().toString());
        assertEquals("19100316527866173743859509156528371907/22882120466035862310198394664021254770", new Rational(new BigInteger("38200633055732347487719018313056743814"), new BigInteger("-45764240932071724620396789328042509540")).negate().toString());
        assertEquals("55408824954704269382649419881030450325/106868860373395154519120564691507920961", new Rational(new BigInteger("55408824954704269382649419881030450325"), new BigInteger("-106868860373395154519120564691507920961")).negate().toString());
        assertEquals("139573627624557368232917935769292222282/155587175267071333805287768790005901189", new Rational(new BigInteger("279147255249114736465835871538584444564"), new BigInteger("-311174350534142667610575537580011802378")).negate().toString());
        assertEquals("134442928945482183700458963750797129710/115144418448688781231241145947025943159", new Rational(new BigInteger("268885857890964367400917927501594259420"), new BigInteger("-230288836897377562462482291894051886318")).negate().toString());
        assertEquals("129954767054286054085293584378938311777/59137727702491961214934104064442492669", new Rational(new BigInteger("259909534108572108170587168757876623554"), new BigInteger("-118275455404983922429868208128884985338")).negate().toString());
        assertEquals("124531282761845334983135268815801975743/199358732636208445433644868704145105782", new Rational(new BigInteger("124531282761845334983135268815801975743"), new BigInteger("-199358732636208445433644868704145105782")).negate().toString());
        assertEquals("40782505638752344380180799173582430534/188184810290725635603320019031814945067", new Rational(new BigInteger("40782505638752344380180799173582430534"), new BigInteger("-188184810290725635603320019031814945067")).negate().toString());
        assertEquals("300917836680046413006316319442708553079/147246607690043062922603873559089488072", new Rational(new BigInteger("300917836680046413006316319442708553079"), new BigInteger("-147246607690043062922603873559089488072")).negate().toString());
        assertEquals("100284324894243301837531973510446296524/28876063725588734348500002649047374815", new Rational(new BigInteger("300852974682729905512595920531338889572"), new BigInteger("-86628191176766203045500007947142124445")).negate().toString());
        assertEquals("152923437793925610204574609935355861114/315192317419775541487982534272754453111", new Rational(new BigInteger("152923437793925610204574609935355861114"), new BigInteger("-315192317419775541487982534272754453111")).negate().toString());
        assertEquals("37317158243361652056379811940669795556/133541280804431799073950048333957244219", new Rational(new BigInteger("37317158243361652056379811940669795556"), new BigInteger("-133541280804431799073950048333957244219")).negate().toString());
        assertEquals("229057628539592146833405281125735547334/186779868676802432870141113290853582613", new Rational(new BigInteger("229057628539592146833405281125735547334"), new BigInteger("-186779868676802432870141113290853582613")).negate().toString());
        assertEquals("216266490308191213601493457903477848439/117585324400641157640497221816921677646", new Rational(new BigInteger("216266490308191213601493457903477848439"), new BigInteger("-117585324400641157640497221816921677646")).negate().toString());
        assertEquals("7642620298321679621699591964747290947/15428274685817454409372637069789612393", new Rational(new BigInteger("30570481193286718486798367858989163788"), new BigInteger("-61713098743269817637490548279158449572")).negate().toString());
        assertEquals("39177579859974156819119159748272885077/2459091769624810015186728619768471775", new Rational(new BigInteger("117532739579922470457357479244818655231"), new BigInteger("-7377275308874430045560185859305415325")).negate().toString());
        assertEquals("2821774870191998943980004591323833985/14943070504993549542002877051564280478", new Rational(new BigInteger("50791947663455980991640082643829011730"), new BigInteger("-268975269089883891756051786928157048604")).negate().toString());
        assertEquals("87422917821139973335981101250370546507/118984805865374377363677730663300422041", new Rational(new BigInteger("87422917821139973335981101250370546507"), new BigInteger("-118984805865374377363677730663300422041")).negate().toString());
        assertEquals("323399890306678040742394746316903614253/15384962221203293451456278070947342344", new Rational(new BigInteger("323399890306678040742394746316903614253"), new BigInteger("-15384962221203293451456278070947342344")).negate().toString());
    }

    @Test
    public void testAbs() {
        assertThrows(NullPointerException.class, () -> {
            Rational rational  = null;
            Rational rational1 = rational.abs();
        });
        assertEquals("0", new Rational(-0L, -622062637L).abs().toString());
        assertEquals("1823596260/622062637", new Rational(1823596260L, -622062637L).abs().toString());
        assertEquals("82362250/80924473", new Rational(82362250L, -80924473L).abs().toString());
        assertEquals("1015141814/3809445319", new Rational(1015141814L, -3809445319L).abs().toString());
        assertEquals("286781327/4005035917", new Rational(286781327L, -4005035917L).abs().toString());
        assertEquals("119195491/475113307", new Rational(357586473L, -1425339921L).abs().toString());
        assertEquals("21516389/53862690", new Rational(623975281L, -1562018010L).abs().toString());
        assertEquals("343884669/1543151021", new Rational(687769338L, -3086302042L).abs().toString());
        assertEquals("1387105024/1033458221", new Rational(1387105024L, -1033458221L).abs().toString());
        assertEquals("329991493/1189074638", new Rational(329991493L, -1189074638L).abs().toString());
        assertEquals("223164079/134565975", new Rational(446328158L, -269131950L).abs().toString());
        assertEquals("890161221/1929990995", new Rational(1780322442L, -3859981990L).abs().toString());
        assertEquals("328556377/943987316", new Rational(328556377L, -943987316L).abs().toString());
        assertEquals("1353004513/1072167317", new Rational(1353004513L, -1072167317L).abs().toString());
        assertEquals("1229445183/3846358352", new Rational(1229445183L, -3846358352L).abs().toString());
        assertEquals("813699310/5700287", new Rational(813699310L, -5700287L).abs().toString());
        assertEquals("1967040801/3410637520", new Rational(1967040801L, -3410637520L).abs().toString());
        assertEquals("819508441/2090172871", new Rational(819508441L, -2090172871L).abs().toString());
        assertEquals("1768633585/1051130464", new Rational(1768633585L, -1051130464L).abs().toString());
        assertEquals("61340921/170994143", new Rational(1226818420L, -3419882860L).abs().toString());
        assertEquals("1892380871/715808724", new Rational(1892380871L, -715808724L).abs().toString());
        assertEquals("1787378699/3210012930", new Rational(1787378699L, -3210012930L).abs().toString());
        assertEquals("158948683/937876699", new Rational(158948683L, -937876699L).abs().toString());
        assertEquals("438740825/827379681", new Rational(877481650L, -1654759362L).abs().toString());
        assertEquals("60577849/149830895", new Rational(60577849L, -149830895L).abs().toString());
        assertEquals("1298273332/836924421", new Rational(1298273332L, -836924421L).abs().toString());
        assertEquals("15517523/1261188351", new Rational(31035046L, -2522376702L).abs().toString());
        assertEquals("120731196/99432173", new Rational(120731196L, -99432173L).abs().toString());
        assertEquals("1024561756/2484983723", new Rational(1024561756L, -2484983723L).abs().toString());
        assertEquals("434371410/534910303", new Rational(868742820L, -1069820606L).abs().toString());
        assertEquals("385881428/3998669883", new Rational(385881428L, -3998669883L).abs().toString());
        assertEquals("894510299/1063838982", new Rational(1789020598L, -2127677964L).abs().toString());
        assertEquals("166238458/2590060063", new Rational(166238458L, -2590060063L).abs().toString());
        assertEquals("1650956231/1749732874", new Rational(1650956231L, -1749732874L).abs().toString());
        assertEquals("887358623/1697440645", new Rational(887358623L, -1697440645L).abs().toString());
        assertEquals("834229167/2878044596", new Rational(834229167L, -2878044596L).abs().toString());
        assertEquals("534984930/1620701893", new Rational(1069969860L, -3241403786L).abs().toString());
        assertEquals("1567972768/2001861315", new Rational(1567972768L, -2001861315L).abs().toString());
        assertEquals("363103432/635337013", new Rational(1452413728L, -2541348052L).abs().toString());
        assertEquals("278598464/329868157", new Rational(1950189248L, -2309077099L).abs().toString());
        assertEquals("2020194184/4247239005", new Rational(2020194184L, -4247239005L).abs().toString());
        assertEquals("1018337789/276640277", new Rational(1018337789L, -276640277L).abs().toString());
        assertEquals("387439291/291422050", new Rational(1549757164L, -1165688200L).abs().toString());
        assertEquals("693718565/4068989399", new Rational(693718565L, -4068989399L).abs().toString());
        assertEquals("1063621583/2111354069", new Rational(2127243166L, -4222708138L).abs().toString());
        assertEquals("2000789847/2284491883", new Rational(2000789847L, -2284491883L).abs().toString());
        assertEquals("200850919/4086302551", new Rational(200850919L, -4086302551L).abs().toString());
        assertEquals("950281367/3501605144", new Rational(950281367L, -3501605144L).abs().toString());
        assertEquals("628655962/403174979", new Rational(628655962L, -403174979L).abs().toString());
        assertEquals("1263275201/3110989820", new Rational(1263275201L, -3110989820L).abs().toString());
        assertEquals("1869073773/1507814695", new Rational(1869073773L, -1507814695L).abs().toString());
        assertEquals("1993608531/14944091", new Rational(1993608531L, -14944091L).abs().toString());
        assertEquals("723618713/1610722196", new Rational(1447237426L, -3221444392L).abs().toString());
        assertEquals("15989217/838884037", new Rational(63956868L, -3355536148L).abs().toString());
        assertEquals("1071613927/4036311002", new Rational(1071613927L, -4036311002L).abs().toString());
        assertEquals("498838641/1528428802", new Rational(498838641L, -1528428802L).abs().toString());
        assertEquals("924792173/1221783867", new Rational(1849584346L, -2443567734L).abs().toString());
        assertEquals("419278694/804829557", new Rational(1257836082L, -2414488671L).abs().toString());
        assertEquals("559582334/1446387255", new Rational(1119164668L, -2892774510L).abs().toString());
        assertEquals("836889307/2021201217", new Rational(836889307L, -2021201217L).abs().toString());
        assertEquals("318202004/3797940997", new Rational(318202004L, -3797940997L).abs().toString());
        assertEquals("684892489/1406350924", new Rational(1369784978L, -2812701848L).abs().toString());
        assertEquals("640093584/786127937", new Rational(1280187168L, -1572255874L).abs().toString());
        assertEquals("2102452888/2687265793", new Rational(2102452888L, -2687265793L).abs().toString());
        assertEquals("1511054354/3040600181", new Rational(1511054354L, -3040600181L).abs().toString());
        assertEquals("468466918/202938991", new Rational(936933836L, -405877982L).abs().toString());
        assertEquals("332003243/3016994038", new Rational(332003243L, -3016994038L).abs().toString());
        assertEquals("409108148/812779305", new Rational(1227324444L, -2438337915L).abs().toString());
        assertEquals("709682222/2106268657", new Rational(1419364444L, -4212537314L).abs().toString());
        assertEquals("809510091/1833819764", new Rational(809510091L, -1833819764L).abs().toString());
        assertEquals("201074398/1240446661", new Rational(402148796L, -2480893322L).abs().toString());
        assertEquals("313174360/1818904591", new Rational(313174360L, -1818904591L).abs().toString());
        assertEquals("135923562/481963871", new Rational(407770686L, -1445891613L).abs().toString());
        assertEquals("1285853759/2506224219", new Rational(1285853759L, -2506224219L).abs().toString());
        assertEquals("1499726783/1027441486", new Rational(1499726783L, -1027441486L).abs().toString());
        assertEquals("1363741245/2031040327", new Rational(1363741245L, -2031040327L).abs().toString());
        assertEquals("757642603/1168574986", new Rational(757642603L, -1168574986L).abs().toString());
        assertEquals("1946483271/243658063", new Rational(1946483271L, -243658063L).abs().toString());
        assertEquals("1060295827/3535603885", new Rational(1060295827L, -3535603885L).abs().toString());
        assertEquals("462190745/1640827352", new Rational(462190745L, -1640827352L).abs().toString());
        assertEquals("1207785395/349725794", new Rational(1207785395L, -349725794L).abs().toString());
        assertEquals("1716982775/2876633024", new Rational(1716982775L, -2876633024L).abs().toString());
        assertEquals("306239932/315588365", new Rational(918719796L, -946765095L).abs().toString());
        assertEquals("1523308783/727545120", new Rational(1523308783L, -727545120L).abs().toString());
        assertEquals("12855733/4140798814", new Rational(12855733L, -4140798814L).abs().toString());
        assertEquals("1976923255/149990367", new Rational(1976923255L, -149990367L).abs().toString());
        assertEquals("1621304198/3176010131", new Rational(1621304198L, -3176010131L).abs().toString());
        assertEquals("1562542885/3706393911", new Rational(1562542885L, -3706393911L).abs().toString());
        assertEquals("1243914901/747560093", new Rational(1243914901L, -747560093L).abs().toString());
        assertEquals("453571573/88587391", new Rational(907143146L, -177174782L).abs().toString());
        assertEquals("70957727/312401537", new Rational(638619543L, -2811613833L).abs().toString());
        assertEquals("721742123/3758087574", new Rational(721742123L, -3758087574L).abs().toString());
        assertEquals("631980987/4205056445", new Rational(631980987L, -4205056445L).abs().toString());
        assertEquals("428509765/3358402808", new Rational(428509765L, -3358402808L).abs().toString());
        assertEquals("583216007/329888233", new Rational(1749648021L, -989664699L).abs().toString());
        assertEquals("1418420008/2443639999", new Rational(1418420008L, -2443639999L).abs().toString());
        assertEquals("1082826804/961545485", new Rational(1082826804L, -961545485L).abs().toString());
        assertEquals("1699041430/3405596991", new Rational(1699041430L, -3405596991L).abs().toString());
        assertEquals("1434564033/2602223843", new Rational(1434564033L, -2602223843L).abs().toString());
        assertEquals("410443013/396101230", new Rational(1641772052L, -1584404920L).abs().toString());
        assertEquals("808092167/1005944094", new Rational(808092167L, -1005944094L).abs().toString());

        assertEquals("59281086666598704512583825682322560866/168613032634419075698440302675961530997", new Rational(new BigInteger("118562173333197409025167651364645121732"), new BigInteger("-337226065268838151396880605351923061994")).abs().toString());
        assertEquals("37393846689334157843485481336921682587/119995408543936182673303438990516391835", new Rational(new BigInteger("74787693378668315686970962673843365174"), new BigInteger("-239990817087872365346606877981032783670")).abs().toString());
        assertEquals("326293166486413444523410458325868009177/100520999993971881094571826457063035727", new Rational(new BigInteger("326293166486413444523410458325868009177"), new BigInteger("-100520999993971881094571826457063035727")).abs().toString());
        assertEquals("47990854609099118230000929816925731563/60105986720522156420016964639161402741", new Rational(new BigInteger("95981709218198236460001859633851463126"), new BigInteger("-120211973441044312840033929278322805482")).abs().toString());
        assertEquals("44454635612499124439412114543150005061/36953640921490227432599757721134035813", new Rational(new BigInteger("311182449287493871075884801802050035427"), new BigInteger("-258675486450431592028198304047938250691")).abs().toString());
        assertEquals("26712127032009342775196444179834226041/189849414891516148247477003442117189830", new Rational(new BigInteger("26712127032009342775196444179834226041"), new BigInteger("-189849414891516148247477003442117189830")).abs().toString());
        assertEquals("253914835813762287257491096879615564191/10210853107470875349395159793918725317", new Rational(new BigInteger("253914835813762287257491096879615564191"), new BigInteger("-10210853107470875349395159793918725317")).abs().toString());
        assertEquals("149543575090391851859213613934490804471/167884670642995414391382017637900448775", new Rational(new BigInteger("299087150180783703718427227868981608942"), new BigInteger("-335769341285990828782764035275800897550")).abs().toString());
        assertEquals("291014574124080893467755517940991341401/329464429975749030652621998219456983082", new Rational(new BigInteger("291014574124080893467755517940991341401"), new BigInteger("-329464429975749030652621998219456983082")).abs().toString());
        assertEquals("119790743101648822686168346220490191779/337341620746143824079062973428164693590", new Rational(new BigInteger("119790743101648822686168346220490191779"), new BigInteger("-337341620746143824079062973428164693590")).abs().toString());
        assertEquals("265693699081453097326847492534899015599/105285102358577730430635628169648397959", new Rational(new BigInteger("265693699081453097326847492534899015599"), new BigInteger("-105285102358577730430635628169648397959")).abs().toString());
        assertEquals("323937078713951184397734010488416725059/315053737485438734424739388958853780904", new Rational(new BigInteger("323937078713951184397734010488416725059"), new BigInteger("-315053737485438734424739388958853780904")).abs().toString());
        assertEquals("27605570360975273816954488737443307143/161619897289818846468410272031664638948", new Rational(new BigInteger("27605570360975273816954488737443307143"), new BigInteger("-161619897289818846468410272031664638948")).abs().toString());
        assertEquals("40649476576697005808197799867385682202/152237204209069315815873145683468600707", new Rational(new BigInteger("81298953153394011616395599734771364404"), new BigInteger("-304474408418138631631746291366937201414")).abs().toString());
        assertEquals("88758196784588875188269341029318413088/68062924266121807807003443471559986925", new Rational(new BigInteger("88758196784588875188269341029318413088"), new BigInteger("-68062924266121807807003443471559986925")).abs().toString());
        assertEquals("16352455348940607376194997832881505059/228136232339052766310453668943162635268", new Rational(new BigInteger("16352455348940607376194997832881505059"), new BigInteger("-228136232339052766310453668943162635268")).abs().toString());
        assertEquals("105132628288711190809532023835407204822/105626997516432972137356706630904006405", new Rational(new BigInteger("105132628288711190809532023835407204822"), new BigInteger("-105626997516432972137356706630904006405")).abs().toString());
        assertEquals("18481302322112596282820204702992562158/156793403124520913648072848799683763067", new Rational(new BigInteger("18481302322112596282820204702992562158"), new BigInteger("-156793403124520913648072848799683763067")).abs().toString());
        assertEquals("158127853091863694042505091896449687675/294103973825210414942628728038352226144", new Rational(new BigInteger("158127853091863694042505091896449687675"), new BigInteger("-294103973825210414942628728038352226144")).abs().toString());
        assertEquals("38488715096641235389203990911315049579/55202714991913981160448166859011385912", new Rational(new BigInteger("230932290579847412335223945467890297474"), new BigInteger("-331216289951483886962689001154068315472")).abs().toString());
        assertEquals("255424114860467304592773705983274810061/208773839654899546147250193109838464744", new Rational(new BigInteger("255424114860467304592773705983274810061"), new BigInteger("-208773839654899546147250193109838464744")).abs().toString());
        assertEquals("227771795182090014423650627711665831221/255065328201313373315600623705610840842", new Rational(new BigInteger("227771795182090014423650627711665831221"), new BigInteger("-255065328201313373315600623705610840842")).abs().toString());
        assertEquals("89008423133384107814024038035023954261/195686251915748205022837939871997965582", new Rational(new BigInteger("89008423133384107814024038035023954261"), new BigInteger("-195686251915748205022837939871997965582")).abs().toString());
        assertEquals("20942269250155103174601171975649748328/91797133214832427944351301463179639255", new Rational(new BigInteger("41884538500310206349202343951299496656"), new BigInteger("-183594266429664855888702602926359278510")).abs().toString());
        assertEquals("31833058966810449725356363911214881621/222479329090299726105243620162160657382", new Rational(new BigInteger("31833058966810449725356363911214881621"), new BigInteger("-222479329090299726105243620162160657382")).abs().toString());
        assertEquals("134092940660220622279208644296368645283/51779173596580390494357155755589496050", new Rational(new BigInteger("134092940660220622279208644296368645283"), new BigInteger("-51779173596580390494357155755589496050")).abs().toString());
        assertEquals("22570285449012668370049578614368156648/159492127947553885727150845654168205279", new Rational(new BigInteger("45140570898025336740099157228736313296"), new BigInteger("-318984255895107771454301691308336410558")).abs().toString());
        assertEquals("48487293562974437951705679133126466003/34613836771748788830628044809845686462", new Rational(new BigInteger("48487293562974437951705679133126466003"), new BigInteger("-34613836771748788830628044809845686462")).abs().toString());
        assertEquals("232544935073189517258540674921807972851/41857725732861866715648473407484660850", new Rational(new BigInteger("232544935073189517258540674921807972851"), new BigInteger("-41857725732861866715648473407484660850")).abs().toString());
        assertEquals("184680104877085143751981031373905602074/99430425500315783893281535368194154491", new Rational(new BigInteger("184680104877085143751981031373905602074"), new BigInteger("-99430425500315783893281535368194154491")).abs().toString());
        assertEquals("16419797335474108087633039326636063997/7058919126828006142480839824260049021", new Rational(new BigInteger("131358378683792864701064314613088511976"), new BigInteger("-56471353014624049139846718594080392168")).abs().toString());
        assertEquals("30477912238825899871023780348716903105/64893684776981614891099696334819152657", new Rational(new BigInteger("152389561194129499355118901743584515525"), new BigInteger("-324468423884908074455498481674095763285")).abs().toString());
        assertEquals("173813574972969455364307610254645862941/323116721081900870066972705559252004779", new Rational(new BigInteger("173813574972969455364307610254645862941"), new BigInteger("-323116721081900870066972705559252004779")).abs().toString());
        assertEquals("224176607648247449023727617282795544018/190302944021529377282244255538258037925", new Rational(new BigInteger("224176607648247449023727617282795544018"), new BigInteger("-190302944021529377282244255538258037925")).abs().toString());
        assertEquals("2673092151852463001307149933221027589/75160782364422338215125412361161819842", new Rational(new BigInteger("8019276455557389003921449799663082767"), new BigInteger("-225482347093267014645376237083485459526")).abs().toString());
        assertEquals("37354301134140666563313724152058923535/132418693066003523447901154063345369308", new Rational(new BigInteger("74708602268281333126627448304117847070"), new BigInteger("-264837386132007046895802308126690738616")).abs().toString());
        assertEquals("6357356569659253856082810132498367587/11593953537278847335824130242299616193", new Rational(new BigInteger("114432418253866569409490582384970616566"), new BigInteger("-208691163671019252044834344361393091474")).abs().toString());
        assertEquals("324935167232626854195371842765239864931/34504967302068551027679681506741729018", new Rational(new BigInteger("324935167232626854195371842765239864931"), new BigInteger("-34504967302068551027679681506741729018")).abs().toString());
        assertEquals("291064347108442421216283625587945042890/288905608714306695443519465831456645663", new Rational(new BigInteger("291064347108442421216283625587945042890"), new BigInteger("-288905608714306695443519465831456645663")).abs().toString());
        assertEquals("7009087290929462757859640146810112882/38300427691057604333976035245907845843", new Rational(new BigInteger("56072698327435702062877121174480903056"), new BigInteger("-306403421528460834671808281967262766744")).abs().toString());
        assertEquals("72096676770552176273495049596691541827/268757405112661136209422164758095856547", new Rational(new BigInteger("72096676770552176273495049596691541827"), new BigInteger("-268757405112661136209422164758095856547")).abs().toString());
        assertEquals("170672431932375581014999276292054715066/87996313177185484831177015552158832757", new Rational(new BigInteger("170672431932375581014999276292054715066"), new BigInteger("-87996313177185484831177015552158832757")).abs().toString());
        assertEquals("272902240339256873385701138068783095886/65890781669028435966182356443929267777", new Rational(new BigInteger("272902240339256873385701138068783095886"), new BigInteger("-65890781669028435966182356443929267777")).abs().toString());
        assertEquals("23205560826227797628165289399850386871/17566909218708384731594581489566952174", new Rational(new BigInteger("162438925783594583397157025798952708097"), new BigInteger("-122968364530958693121162070426968665218")).abs().toString());
        assertEquals("300719541650525352461415827058384023251/110366024583474869190066060360880180736", new Rational(new BigInteger("300719541650525352461415827058384023251"), new BigInteger("-110366024583474869190066060360880180736")).abs().toString());
        assertEquals("124726517868340920728283634725112799593/189409358539851618489411455147927094598", new Rational(new BigInteger("124726517868340920728283634725112799593"), new BigInteger("-189409358539851618489411455147927094598")).abs().toString());
        assertEquals("140431144810826486905146170105960284595/33795633219534477398018017651966795723", new Rational(new BigInteger("280862289621652973810292340211920569190"), new BigInteger("-67591266439068954796036035303933591446")).abs().toString());
        assertEquals("166752976750208773851310589904239028949/135599026003970083261536031732986339357", new Rational(new BigInteger("166752976750208773851310589904239028949"), new BigInteger("-135599026003970083261536031732986339357")).abs().toString());
        assertEquals("227130879395707057579379217205300448602/37031746875239163604254594229404131425", new Rational(new BigInteger("227130879395707057579379217205300448602"), new BigInteger("-37031746875239163604254594229404131425")).abs().toString());
        assertEquals("192058188451524457139740538708052638109/47818189164604957940042771674153357039", new Rational(new BigInteger("192058188451524457139740538708052638109"), new BigInteger("-47818189164604957940042771674153357039")).abs().toString());
        assertEquals("111352340043477283994126147335536937901/172328639704748962030105618965615057400", new Rational(new BigInteger("111352340043477283994126147335536937901"), new BigInteger("-172328639704748962030105618965615057400")).abs().toString());
        assertEquals("50678544781656763000512212131109560489/246864868078869063771579586150900570238", new Rational(new BigInteger("50678544781656763000512212131109560489"), new BigInteger("-246864868078869063771579586150900570238")).abs().toString());
        assertEquals("29464388991007183999453805942900121925/123189231423093405945307121783425089576", new Rational(new BigInteger("29464388991007183999453805942900121925"), new BigInteger("-123189231423093405945307121783425089576")).abs().toString());
        assertEquals("8995014291148233104956700545581572399/2065666349213442075762411042407475727", new Rational(new BigInteger("98945157202630564154523706001397296389"), new BigInteger("-22722329841347862833386521466482232997")).abs().toString());
        assertEquals("119902158256226059404539649970649831202/147979606616085043262525158309442084545", new Rational(new BigInteger("239804316512452118809079299941299662404"), new BigInteger("-295959213232170086525050316618884169090")).abs().toString());
        assertEquals("294017586053151389465445316388428581393/73575617410102040191228246936202519401", new Rational(new BigInteger("294017586053151389465445316388428581393"), new BigInteger("-73575617410102040191228246936202519401")).abs().toString());
        assertEquals("15983369681884004158190122594566927145/70101180539165833876729664579926829787", new Rational(new BigInteger("47950109045652012474570367783700781435"), new BigInteger("-210303541617497501630188993739780489361")).abs().toString());
        assertEquals("107110563240335730972754087614904914498/252786546159656183597408374330021593025", new Rational(new BigInteger("107110563240335730972754087614904914498"), new BigInteger("-252786546159656183597408374330021593025")).abs().toString());
        assertEquals("330721976882637668222209436118181211411/48562663078521270897172701439973780192", new Rational(new BigInteger("330721976882637668222209436118181211411"), new BigInteger("-48562663078521270897172701439973780192")).abs().toString());
        assertEquals("302141566792932120976822601416288972637/283982193242805289220830065258596094644", new Rational(new BigInteger("302141566792932120976822601416288972637"), new BigInteger("-283982193242805289220830065258596094644")).abs().toString());
        assertEquals("55912746061587536092391960746307058001/69297225078203944672643280451929886879", new Rational(new BigInteger("55912746061587536092391960746307058001"), new BigInteger("-69297225078203944672643280451929886879")).abs().toString());
        assertEquals("311048165492046002592592704746751881857/219496766435313172924799254556394797683", new Rational(new BigInteger("311048165492046002592592704746751881857"), new BigInteger("-219496766435313172924799254556394797683")).abs().toString());
        assertEquals("1589985307279632789838095309863501136/296645017560912842815832402990570880745", new Rational(new BigInteger("1589985307279632789838095309863501136"), new BigInteger("-296645017560912842815832402990570880745")).abs().toString());
        assertEquals("110877805068441157540102338498588745455/51572274068102850680748859438891028678", new Rational(new BigInteger("221755610136882315080204676997177490910"), new BigInteger("-103144548136205701361497718877782057356")).abs().toString());
        assertEquals("15495335413799786231456587448597978312/54396250460716004946035556566908178357", new Rational(new BigInteger("30990670827599572462913174897195956624"), new BigInteger("-108792500921432009892071113133816356714")).abs().toString());
        assertEquals("171829339672402768741650892454499832256/325973404376362334707926305467378282361", new Rational(new BigInteger("171829339672402768741650892454499832256"), new BigInteger("-325973404376362334707926305467378282361")).abs().toString());
        assertEquals("117789921961671349301870965569830298358/235278513085552612499522338811497985671", new Rational(new BigInteger("117789921961671349301870965569830298358"), new BigInteger("-235278513085552612499522338811497985671")).abs().toString());
        assertEquals("320775751070282256551414079926701154218/221291883336160280220539121592582996739", new Rational(new BigInteger("320775751070282256551414079926701154218"), new BigInteger("-221291883336160280220539121592582996739")).abs().toString());
        assertEquals("28395464852943076822340708338278364251/58652711985393854399480469343652299547", new Rational(new BigInteger("28395464852943076822340708338278364251"), new BigInteger("-58652711985393854399480469343652299547")).abs().toString());
        assertEquals("275823140211869934387151577060040429775/205219367591483618612770571005070110104", new Rational(new BigInteger("275823140211869934387151577060040429775"), new BigInteger("-205219367591483618612770571005070110104")).abs().toString());
        assertEquals("295489443918999865037478704631596104733/207475501715162973810251557208039565020", new Rational(new BigInteger("295489443918999865037478704631596104733"), new BigInteger("-207475501715162973810251557208039565020")).abs().toString());
        assertEquals("2994115929998443532025885902209417333/881467896636302221080084422260358309", new Rational(new BigInteger("92817593829951749492802462968491937323"), new BigInteger("-27325504795725368853482617090071107579")).abs().toString());
        assertEquals("7673084481195481688425245073622531067/108517776893778897513369224858166298748", new Rational(new BigInteger("15346168962390963376850490147245062134"), new BigInteger("-217035553787557795026738449716332597496")).abs().toString());
        assertEquals("255433276778122825317415923491000800029/58068944413179135255537553214514247946", new Rational(new BigInteger("255433276778122825317415923491000800029"), new BigInteger("-58068944413179135255537553214514247946")).abs().toString());
        assertEquals("225305266358620573808050768856667785227/101969933908752723846403370941655110943", new Rational(new BigInteger("225305266358620573808050768856667785227"), new BigInteger("-101969933908752723846403370941655110943")).abs().toString());
        assertEquals("132640141471135466690642197912582902038/16715272548979995446205445554887568461", new Rational(new BigInteger("265280282942270933381284395825165804076"), new BigInteger("-33430545097959990892410891109775136922")).abs().toString());
        assertEquals("306313745852008458121687954528083206802/160834356393532253688988691088248450251", new Rational(new BigInteger("306313745852008458121687954528083206802"), new BigInteger("-160834356393532253688988691088248450251")).abs().toString());
        assertEquals("60417871333325076407275417141677118879/22284719146319216533326867286546196056", new Rational(new BigInteger("181253613999975229221826251425031356637"), new BigInteger("-66854157438957649599980601859638588168")).abs().toString());
        assertEquals("2358574152782950377156207102673803416/27596031955077536960849380139433865019", new Rational(new BigInteger("25944315680612454148718278129411837576"), new BigInteger("-303556351505852906569343181533772515209")).abs().toString());
        assertEquals("80428703257468823065586789552612977568/34251892429315983509698050921450616949", new Rational(new BigInteger("80428703257468823065586789552612977568"), new BigInteger("-34251892429315983509698050921450616949")).abs().toString());
        assertEquals("203378745167425557813307320216745465069/229183228818977936377495153521461577184", new Rational(new BigInteger("203378745167425557813307320216745465069"), new BigInteger("-229183228818977936377495153521461577184")).abs().toString());
        assertEquals("265108881896358970931515964721800015792/74896532463072344761219781894744061767", new Rational(new BigInteger("265108881896358970931515964721800015792"), new BigInteger("-74896532463072344761219781894744061767")).abs().toString());
        assertEquals("323087417030982093315270924964735691877/229741065156480042232032495089965874675", new Rational(new BigInteger("323087417030982093315270924964735691877"), new BigInteger("-229741065156480042232032495089965874675")).abs().toString());
        assertEquals("120467561358538273505395569986962809439/299046385049161855533503340120918394767", new Rational(new BigInteger("120467561358538273505395569986962809439"), new BigInteger("-299046385049161855533503340120918394767")).abs().toString());
        assertEquals("48164387308732356433397917791209124094/53722162369243072658369977543712265787", new Rational(new BigInteger("48164387308732356433397917791209124094"), new BigInteger("-53722162369243072658369977543712265787")).abs().toString());
        assertEquals("78983873694144762360339693680517087041/180536648432050652987784173939064127989", new Rational(new BigInteger("78983873694144762360339693680517087041"), new BigInteger("-180536648432050652987784173939064127989")).abs().toString());
        assertEquals("133160618613828954819560014472167278299/52177166867800891617831608920609636127", new Rational(new BigInteger("133160618613828954819560014472167278299"), new BigInteger("-52177166867800891617831608920609636127")).abs().toString());
        assertEquals("18845132910635861058195211345988145608/22873266402757341957418512373766357693", new Rational(new BigInteger("18845132910635861058195211345988145608"), new BigInteger("-22873266402757341957418512373766357693")).abs().toString());
        assertEquals("326078602978561788560476538976928483297/120894273007320319709205096953125444269", new Rational(new BigInteger("326078602978561788560476538976928483297"), new BigInteger("-120894273007320319709205096953125444269")).abs().toString());
        assertEquals("16267716362548877282943424555330705064/10272589501111162896813557083462609521", new Rational(new BigInteger("292818894525879791092981641995952691152"), new BigInteger("-184906611020000932142644027502326971378")).abs().toString());
        assertEquals("252306315545391935804174771530299132856/127151644601003496346852166736080788253", new Rational(new BigInteger("252306315545391935804174771530299132856"), new BigInteger("-127151644601003496346852166736080788253")).abs().toString());
        assertEquals("3505379067774378852608934336732905993/4523917961885050765718785267688537513", new Rational(new BigInteger("14021516271097515410435737346931623972"), new BigInteger("-18095671847540203062875141070754150052")).abs().toString());
        assertEquals("140586942011825918022029315893654939186/9101415379119416223778642121812156687", new Rational(new BigInteger("140586942011825918022029315893654939186"), new BigInteger("-9101415379119416223778642121812156687")).abs().toString());
        assertEquals("313824844356832768933714744254345201925/168316006034520300802059005906294094689", new Rational(new BigInteger("313824844356832768933714744254345201925"), new BigInteger("-168316006034520300802059005906294094689")).abs().toString());
        assertEquals("33375957241138455695809353554469765773/79936576111273492999865089305729365166", new Rational(new BigInteger("100127871723415367087428060663409297319"), new BigInteger("-239809728333820478999595267917188095498")).abs().toString());
        assertEquals("15088399202038281086405201456184991998/25513780085081597646666576512878836691", new Rational(new BigInteger("45265197606114843259215604368554975994"), new BigInteger("-76541340255244792939999729538636510073")).abs().toString());
        assertEquals("226698021157940022046805047836255080453/265455267128144714261086349192826130211", new Rational(new BigInteger("226698021157940022046805047836255080453"), new BigInteger("-265455267128144714261086349192826130211")).abs().toString());
        assertEquals("249610994190435491638884041607085905771/37031441681800076685664305919887528896", new Rational(new BigInteger("249610994190435491638884041607085905771"), new BigInteger("-37031441681800076685664305919887528896")).abs().toString());
        assertEquals("205503326025556431964465893919887712061/178047479521488564885635878768675425735", new Rational(new BigInteger("205503326025556431964465893919887712061"), new BigInteger("-178047479521488564885635878768675425735")).abs().toString());
        assertEquals("35337403503876493935728225037837922575/11590706602299317163144578404535099326", new Rational(new BigInteger("70674807007752987871456450075675845150"), new BigInteger("-23181413204598634326289156809070198652")).abs().toString());
    }

    @Test
    public void testIsInteger() {
        assertThrows(NullPointerException.class, () -> {
            Rational rational = null;
            boolean  bool     = rational.isInteger();
        });
        assertEquals(new Rational(1, 2), new Rational(1, -2).abs());
        assertEquals(new Rational(new BigInteger("128903"), new BigInteger("1011")), new Rational(new BigInteger(
                "-128903"), new BigInteger("1011")).abs());
    }

    @Test
    public void testToString() {

        assertThrows(NullPointerException.class, () -> {
            Rational rational = null;
            String   s        = rational.toString();
        });

        assertEquals("1", new Rational(1, 1).toString());
        assertEquals("1", new Rational(1L, 1L).toString());
        assertEquals("1", new Rational(new BigInteger("1"), new BigInteger("1")).toString());

        assertEquals("0", new Rational(0, 1723981).toString());
        assertEquals("0", new Rational(0L, 129711111123123L).toString());
        assertEquals("0",
                new Rational(new BigInteger("-0"), new BigInteger("12793791919123901790371923912936912936123")).toString());

        assertEquals("-1", new Rational(-1, 1).toString());
        assertEquals("-1", new Rational(123698623, -123698623).toString());
        assertEquals("-1", new Rational(new BigInteger("9127391111112312441231"), new BigInteger(
                "-9127391111112312441231")).toString());

        assertEquals("1/10", new Rational(1, 10).toString());
        assertEquals("1/10", new Rational(new BigInteger("1"), new BigInteger("10")).toString());
        assertEquals("1/10", new Rational(1000, 10000).toString());

        assertEquals("-10/3", new Rational(10, -3).toString());
        assertEquals("-10/3", new Rational(new BigInteger("10"), new BigInteger("-3")).toString());
    }
}